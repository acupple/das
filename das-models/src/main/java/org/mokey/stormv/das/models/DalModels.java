// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/protos/DalModels.proto

package org.mokey.stormv.das.models;

public final class DalModels {
  private DalModels() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code com.ctrip.framework.dal.models.DalHintEnum}
   */
  public enum DalHintEnum
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>operation = 0;</code>
     */
    operation(0, 0),
    /**
     * <code>shardValue = 1;</code>
     */
    shardValue(1, 1),
    /**
     * <code>tableShardValue = 2;</code>
     */
    tableShardValue(2, 2),
    /**
     * <code>shardColValues = 3;</code>
     */
    shardColValues(3, 3),
    /**
     * <code>fields = 4;</code>
     */
    fields(4, 4),
    /**
     * <code>parameters = 5;</code>
     */
    parameters(5, 5),
    /**
     * <code>shard = 6;</code>
     */
    shard(6, 6),
    /**
     * <code>tableShard = 7;</code>
     */
    tableShard(7, 7),
    /**
     * <code>forceAutoCommit = 8;</code>
     */
    forceAutoCommit(8, 8),
    /**
     * <code>timeout = 9;</code>
     */
    timeout(9, 9),
    /**
     * <code>resultSetType = 10;</code>
     */
    resultSetType(10, 10),
    /**
     * <code>resultSetConcurrency = 11;</code>
     */
    resultSetConcurrency(11, 11),
    /**
     * <code>fetchSize = 12;</code>
     */
    fetchSize(12, 12),
    /**
     * <code>skipResultsProcessing = 13;</code>
     */
    skipResultsProcessing(13, 13),
    /**
     * <code>maxRows = 14;</code>
     */
    maxRows(14, 14),
    /**
     * <code>sensitive = 15;</code>
     */
    sensitive(15, 15),
    /**
     * <code>masterOnly = 16;</code>
     */
    masterOnly(16, 16),
    /**
     * <code>heighAvaliable = 17;</code>
     */
    heighAvaliable(17, 17),
    /**
     * <code>continueOnError = 18;</code>
     */
    continueOnError(18, 18),
    /**
     * <code>isolationLevel = 19;</code>
     */
    isolationLevel(19, 19),
    /**
     * <code>updateNullField = 20;</code>
     */
    updateNullField(20, 20),
    /**
     * <code>detailResults = 21;</code>
     */
    detailResults(21, 21),
    /**
     * <code>returnGeneratedKeys = 22;</code>
     */
    returnGeneratedKeys(22, 22),
    ;

    /**
     * <code>operation = 0;</code>
     */
    public static final int operation_VALUE = 0;
    /**
     * <code>shardValue = 1;</code>
     */
    public static final int shardValue_VALUE = 1;
    /**
     * <code>tableShardValue = 2;</code>
     */
    public static final int tableShardValue_VALUE = 2;
    /**
     * <code>shardColValues = 3;</code>
     */
    public static final int shardColValues_VALUE = 3;
    /**
     * <code>fields = 4;</code>
     */
    public static final int fields_VALUE = 4;
    /**
     * <code>parameters = 5;</code>
     */
    public static final int parameters_VALUE = 5;
    /**
     * <code>shard = 6;</code>
     */
    public static final int shard_VALUE = 6;
    /**
     * <code>tableShard = 7;</code>
     */
    public static final int tableShard_VALUE = 7;
    /**
     * <code>forceAutoCommit = 8;</code>
     */
    public static final int forceAutoCommit_VALUE = 8;
    /**
     * <code>timeout = 9;</code>
     */
    public static final int timeout_VALUE = 9;
    /**
     * <code>resultSetType = 10;</code>
     */
    public static final int resultSetType_VALUE = 10;
    /**
     * <code>resultSetConcurrency = 11;</code>
     */
    public static final int resultSetConcurrency_VALUE = 11;
    /**
     * <code>fetchSize = 12;</code>
     */
    public static final int fetchSize_VALUE = 12;
    /**
     * <code>skipResultsProcessing = 13;</code>
     */
    public static final int skipResultsProcessing_VALUE = 13;
    /**
     * <code>maxRows = 14;</code>
     */
    public static final int maxRows_VALUE = 14;
    /**
     * <code>sensitive = 15;</code>
     */
    public static final int sensitive_VALUE = 15;
    /**
     * <code>masterOnly = 16;</code>
     */
    public static final int masterOnly_VALUE = 16;
    /**
     * <code>heighAvaliable = 17;</code>
     */
    public static final int heighAvaliable_VALUE = 17;
    /**
     * <code>continueOnError = 18;</code>
     */
    public static final int continueOnError_VALUE = 18;
    /**
     * <code>isolationLevel = 19;</code>
     */
    public static final int isolationLevel_VALUE = 19;
    /**
     * <code>updateNullField = 20;</code>
     */
    public static final int updateNullField_VALUE = 20;
    /**
     * <code>detailResults = 21;</code>
     */
    public static final int detailResults_VALUE = 21;
    /**
     * <code>returnGeneratedKeys = 22;</code>
     */
    public static final int returnGeneratedKeys_VALUE = 22;


    public final int getNumber() { return value; }

    public static DalHintEnum valueOf(int value) {
      switch (value) {
        case 0: return operation;
        case 1: return shardValue;
        case 2: return tableShardValue;
        case 3: return shardColValues;
        case 4: return fields;
        case 5: return parameters;
        case 6: return shard;
        case 7: return tableShard;
        case 8: return forceAutoCommit;
        case 9: return timeout;
        case 10: return resultSetType;
        case 11: return resultSetConcurrency;
        case 12: return fetchSize;
        case 13: return skipResultsProcessing;
        case 14: return maxRows;
        case 15: return sensitive;
        case 16: return masterOnly;
        case 17: return heighAvaliable;
        case 18: return continueOnError;
        case 19: return isolationLevel;
        case 20: return updateNullField;
        case 21: return detailResults;
        case 22: return returnGeneratedKeys;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DalHintEnum>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<DalHintEnum>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DalHintEnum>() {
            public DalHintEnum findValueByNumber(int number) {
              return DalHintEnum.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return DalModels.getDescriptor().getEnumTypes().get(0);
    }

    private static final DalHintEnum[] VALUES = values();

    public static DalHintEnum valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private DalHintEnum(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.ctrip.framework.dal.models.DalHintEnum)
  }

  /**
   * Protobuf enum {@code com.ctrip.framework.dal.models.CommandType}
   */
  public enum CommandType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>QUERY = 0;</code>
     */
    QUERY(0, 0),
    /**
     * <code>UPDATE = 1;</code>
     */
    UPDATE(1, 1),
    /**
     * <code>BATCHUPDATE = 2;</code>
     */
    BATCHUPDATE(2, 2),
    /**
     * <code>STOREPROCEDURE = 3;</code>
     */
    STOREPROCEDURE(3, 3),
    /**
     * <code>BATCHSTOREPROCEDURE = 4;</code>
     */
    BATCHSTOREPROCEDURE(4, 4),
    /**
     * <code>STARTTRANSACTION = 5;</code>
     */
    STARTTRANSACTION(5, 5),
    /**
     * <code>ENDTRANSACTION = 6;</code>
     */
    ENDTRANSACTION(6, 6),
    /**
     * <code>ROLLBACKTRANSACTION = 7;</code>
     */
    ROLLBACKTRANSACTION(7, 7),
    /**
     * <code>UPLOADCONFIG = 8;</code>
     */
    UPLOADCONFIG(8, 8),
    /**
     * <code>SETTING = 9;</code>
     */
    SETTING(9, 9),
    ;

    /**
     * <code>QUERY = 0;</code>
     */
    public static final int QUERY_VALUE = 0;
    /**
     * <code>UPDATE = 1;</code>
     */
    public static final int UPDATE_VALUE = 1;
    /**
     * <code>BATCHUPDATE = 2;</code>
     */
    public static final int BATCHUPDATE_VALUE = 2;
    /**
     * <code>STOREPROCEDURE = 3;</code>
     */
    public static final int STOREPROCEDURE_VALUE = 3;
    /**
     * <code>BATCHSTOREPROCEDURE = 4;</code>
     */
    public static final int BATCHSTOREPROCEDURE_VALUE = 4;
    /**
     * <code>STARTTRANSACTION = 5;</code>
     */
    public static final int STARTTRANSACTION_VALUE = 5;
    /**
     * <code>ENDTRANSACTION = 6;</code>
     */
    public static final int ENDTRANSACTION_VALUE = 6;
    /**
     * <code>ROLLBACKTRANSACTION = 7;</code>
     */
    public static final int ROLLBACKTRANSACTION_VALUE = 7;
    /**
     * <code>UPLOADCONFIG = 8;</code>
     */
    public static final int UPLOADCONFIG_VALUE = 8;
    /**
     * <code>SETTING = 9;</code>
     */
    public static final int SETTING_VALUE = 9;


    public final int getNumber() { return value; }

    public static CommandType valueOf(int value) {
      switch (value) {
        case 0: return QUERY;
        case 1: return UPDATE;
        case 2: return BATCHUPDATE;
        case 3: return STOREPROCEDURE;
        case 4: return BATCHSTOREPROCEDURE;
        case 5: return STARTTRANSACTION;
        case 6: return ENDTRANSACTION;
        case 7: return ROLLBACKTRANSACTION;
        case 8: return UPLOADCONFIG;
        case 9: return SETTING;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CommandType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<CommandType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CommandType>() {
            public CommandType findValueByNumber(int number) {
              return CommandType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return DalModels.getDescriptor().getEnumTypes().get(1);
    }

    private static final CommandType[] VALUES = values();

    public static CommandType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private CommandType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.ctrip.framework.dal.models.CommandType)
  }

  /**
   * Protobuf enum {@code com.ctrip.framework.dal.models.Direction}
   */
  public enum Direction
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>Input = 1;</code>
     */
    Input(0, 1),
    /**
     * <code>Output = 2;</code>
     */
    Output(1, 2),
    /**
     * <code>InputOutput = 3;</code>
     */
    InputOutput(2, 3),
    /**
     * <code>ReturnValue = 6;</code>
     */
    ReturnValue(3, 6),
    ;

    /**
     * <code>Input = 1;</code>
     */
    public static final int Input_VALUE = 1;
    /**
     * <code>Output = 2;</code>
     */
    public static final int Output_VALUE = 2;
    /**
     * <code>InputOutput = 3;</code>
     */
    public static final int InputOutput_VALUE = 3;
    /**
     * <code>ReturnValue = 6;</code>
     */
    public static final int ReturnValue_VALUE = 6;


    public final int getNumber() { return value; }

    public static Direction valueOf(int value) {
      switch (value) {
        case 1: return Input;
        case 2: return Output;
        case 3: return InputOutput;
        case 6: return ReturnValue;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Direction>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<Direction>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Direction>() {
            public Direction findValueByNumber(int number) {
              return Direction.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return DalModels.getDescriptor().getEnumTypes().get(2);
    }

    private static final Direction[] VALUES = values();

    public static Direction valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private Direction(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.ctrip.framework.dal.models.Direction)
  }

  /**
   * Protobuf enum {@code com.ctrip.framework.dal.models.DatabaseCategory}
   */
  public enum DatabaseCategory
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>MYSQL = 0;</code>
     */
    MYSQL(0, 0),
    /**
     * <code>SQLSERVER = 1;</code>
     */
    SQLSERVER(1, 1),
    ;

    /**
     * <code>MYSQL = 0;</code>
     */
    public static final int MYSQL_VALUE = 0;
    /**
     * <code>SQLSERVER = 1;</code>
     */
    public static final int SQLSERVER_VALUE = 1;


    public final int getNumber() { return value; }

    public static DatabaseCategory valueOf(int value) {
      switch (value) {
        case 0: return MYSQL;
        case 1: return SQLSERVER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DatabaseCategory>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<DatabaseCategory>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DatabaseCategory>() {
            public DatabaseCategory findValueByNumber(int number) {
              return DatabaseCategory.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return DalModels.getDescriptor().getEnumTypes().get(3);
    }

    private static final DatabaseCategory[] VALUES = values();

    public static DatabaseCategory valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private DatabaseCategory(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.ctrip.framework.dal.models.DatabaseCategory)
  }

  public interface ColumnMataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.ctrip.framework.dal.models.ColumnMata)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string name = 1;</code>
     */
    boolean hasName();
    /**
     * <code>required string name = 1;</code>
     */
    String getName();
    /**
     * <code>required string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>required int32 type = 2;</code>
     */
    boolean hasType();
    /**
     * <code>required int32 type = 2;</code>
     */
    int getType();
  }
  /**
   * Protobuf type {@code com.ctrip.framework.dal.models.ColumnMata}
   */
  public static final class ColumnMata extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.ctrip.framework.dal.models.ColumnMata)
      ColumnMataOrBuilder {
    // Use ColumnMata.newBuilder() to construct.
    private ColumnMata(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ColumnMata(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ColumnMata defaultInstance;
    public static ColumnMata getDefaultInstance() {
      return defaultInstance;
    }

    public ColumnMata getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ColumnMata(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              name_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              type_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DalModels.internal_static_com_ctrip_framework_dal_models_ColumnMata_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DalModels.internal_static_com_ctrip_framework_dal_models_ColumnMata_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ColumnMata.class, Builder.class);
    }

    public static com.google.protobuf.Parser<ColumnMata> PARSER =
        new com.google.protobuf.AbstractParser<ColumnMata>() {
      public ColumnMata parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ColumnMata(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<ColumnMata> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private Object name_;
    /**
     * <code>required string name = 1;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string name = 1;</code>
     */
    public String getName() {
      Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TYPE_FIELD_NUMBER = 2;
    private int type_;
    /**
     * <code>required int32 type = 2;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 type = 2;</code>
     */
    public int getType() {
      return type_;
    }

    private void initFields() {
      name_ = "";
      type_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, type_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, type_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static ColumnMata parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ColumnMata parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ColumnMata parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ColumnMata parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ColumnMata parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ColumnMata parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static ColumnMata parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static ColumnMata parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static ColumnMata parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ColumnMata parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(ColumnMata prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.ctrip.framework.dal.models.ColumnMata}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.ctrip.framework.dal.models.ColumnMata)
        ColumnMataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DalModels.internal_static_com_ctrip_framework_dal_models_ColumnMata_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DalModels.internal_static_com_ctrip_framework_dal_models_ColumnMata_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ColumnMata.class, Builder.class);
      }

      // Construct using com.ctrip.framework.dal.models.DalModels.ColumnMata.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DalModels.internal_static_com_ctrip_framework_dal_models_ColumnMata_descriptor;
      }

      public ColumnMata getDefaultInstanceForType() {
        return ColumnMata.getDefaultInstance();
      }

      public ColumnMata build() {
        ColumnMata result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ColumnMata buildPartial() {
        ColumnMata result = new ColumnMata(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.type_ = type_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ColumnMata) {
          return mergeFrom((ColumnMata)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ColumnMata other) {
        if (other == ColumnMata.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasName()) {
          
          return false;
        }
        if (!hasType()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ColumnMata parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ColumnMata) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private Object name_ = "";
      /**
       * <code>required string name = 1;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string name = 1;</code>
       */
      public String getName() {
        Object ref = name_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>required string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 1;</code>
       */
      public Builder setName(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 1;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      private int type_ ;
      /**
       * <code>required int32 type = 2;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 type = 2;</code>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>required int32 type = 2;</code>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000002;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 type = 2;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.ctrip.framework.dal.models.ColumnMata)
    }

    static {
      defaultInstance = new ColumnMata(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.ctrip.framework.dal.models.ColumnMata)
  }

  public interface AvailableTypeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.ctrip.framework.dal.models.AvailableType)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required bool isNull = 1;</code>
     */
    boolean hasIsNull();
    /**
     * <code>required bool isNull = 1;</code>
     */
    boolean getIsNull();

    /**
     * <code>optional bool bool_arg = 2;</code>
     */
    boolean hasBoolArg();
    /**
     * <code>optional bool bool_arg = 2;</code>
     */
    boolean getBoolArg();

    /**
     * <code>optional int32 int32_arg = 3;</code>
     */
    boolean hasInt32Arg();
    /**
     * <code>optional int32 int32_arg = 3;</code>
     */
    int getInt32Arg();

    /**
     * <code>optional int64 int64_arg = 4;</code>
     */
    boolean hasInt64Arg();
    /**
     * <code>optional int64 int64_arg = 4;</code>
     */
    long getInt64Arg();

    /**
     * <code>optional double double_arg = 5;</code>
     */
    boolean hasDoubleArg();
    /**
     * <code>optional double double_arg = 5;</code>
     */
    double getDoubleArg();

    /**
     * <code>optional string string_arg = 6;</code>
     */
    boolean hasStringArg();
    /**
     * <code>optional string string_arg = 6;</code>
     */
    String getStringArg();
    /**
     * <code>optional string string_arg = 6;</code>
     */
    com.google.protobuf.ByteString
        getStringArgBytes();

    /**
     * <code>optional bytes bytes_arg = 7;</code>
     */
    boolean hasBytesArg();
    /**
     * <code>optional bytes bytes_arg = 7;</code>
     */
    com.google.protobuf.ByteString getBytesArg();
  }
  /**
   * Protobuf type {@code com.ctrip.framework.dal.models.AvailableType}
   */
  public static final class AvailableType extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.ctrip.framework.dal.models.AvailableType)
      AvailableTypeOrBuilder {
    // Use AvailableType.newBuilder() to construct.
    private AvailableType(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private AvailableType(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final AvailableType defaultInstance;
    public static AvailableType getDefaultInstance() {
      return defaultInstance;
    }

    public AvailableType getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private AvailableType(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              isNull_ = input.readBool();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              boolArg_ = input.readBool();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              int32Arg_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              int64Arg_ = input.readInt64();
              break;
            }
            case 41: {
              bitField0_ |= 0x00000010;
              doubleArg_ = input.readDouble();
              break;
            }
            case 50: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000020;
              stringArg_ = bs;
              break;
            }
            case 58: {
              bitField0_ |= 0x00000040;
              bytesArg_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DalModels.internal_static_com_ctrip_framework_dal_models_AvailableType_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DalModels.internal_static_com_ctrip_framework_dal_models_AvailableType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              AvailableType.class, Builder.class);
    }

    public static com.google.protobuf.Parser<AvailableType> PARSER =
        new com.google.protobuf.AbstractParser<AvailableType>() {
      public AvailableType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AvailableType(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<AvailableType> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ISNULL_FIELD_NUMBER = 1;
    private boolean isNull_;
    /**
     * <code>required bool isNull = 1;</code>
     */
    public boolean hasIsNull() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bool isNull = 1;</code>
     */
    public boolean getIsNull() {
      return isNull_;
    }

    public static final int BOOL_ARG_FIELD_NUMBER = 2;
    private boolean boolArg_;
    /**
     * <code>optional bool bool_arg = 2;</code>
     */
    public boolean hasBoolArg() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bool bool_arg = 2;</code>
     */
    public boolean getBoolArg() {
      return boolArg_;
    }

    public static final int INT32_ARG_FIELD_NUMBER = 3;
    private int int32Arg_;
    /**
     * <code>optional int32 int32_arg = 3;</code>
     */
    public boolean hasInt32Arg() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 int32_arg = 3;</code>
     */
    public int getInt32Arg() {
      return int32Arg_;
    }

    public static final int INT64_ARG_FIELD_NUMBER = 4;
    private long int64Arg_;
    /**
     * <code>optional int64 int64_arg = 4;</code>
     */
    public boolean hasInt64Arg() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 int64_arg = 4;</code>
     */
    public long getInt64Arg() {
      return int64Arg_;
    }

    public static final int DOUBLE_ARG_FIELD_NUMBER = 5;
    private double doubleArg_;
    /**
     * <code>optional double double_arg = 5;</code>
     */
    public boolean hasDoubleArg() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional double double_arg = 5;</code>
     */
    public double getDoubleArg() {
      return doubleArg_;
    }

    public static final int STRING_ARG_FIELD_NUMBER = 6;
    private Object stringArg_;
    /**
     * <code>optional string string_arg = 6;</code>
     */
    public boolean hasStringArg() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string string_arg = 6;</code>
     */
    public String getStringArg() {
      Object ref = stringArg_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          stringArg_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string string_arg = 6;</code>
     */
    public com.google.protobuf.ByteString
        getStringArgBytes() {
      Object ref = stringArg_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        stringArg_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BYTES_ARG_FIELD_NUMBER = 7;
    private com.google.protobuf.ByteString bytesArg_;
    /**
     * <code>optional bytes bytes_arg = 7;</code>
     */
    public boolean hasBytesArg() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional bytes bytes_arg = 7;</code>
     */
    public com.google.protobuf.ByteString getBytesArg() {
      return bytesArg_;
    }

    private void initFields() {
      isNull_ = false;
      boolArg_ = false;
      int32Arg_ = 0;
      int64Arg_ = 0L;
      doubleArg_ = 0D;
      stringArg_ = "";
      bytesArg_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasIsNull()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, isNull_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, boolArg_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, int32Arg_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, int64Arg_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeDouble(5, doubleArg_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getStringArgBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(7, bytesArg_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, isNull_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, boolArg_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, int32Arg_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, int64Arg_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, doubleArg_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getStringArgBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, bytesArg_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static AvailableType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static AvailableType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static AvailableType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static AvailableType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static AvailableType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static AvailableType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static AvailableType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static AvailableType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static AvailableType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static AvailableType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(AvailableType prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.ctrip.framework.dal.models.AvailableType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.ctrip.framework.dal.models.AvailableType)
        AvailableTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DalModels.internal_static_com_ctrip_framework_dal_models_AvailableType_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DalModels.internal_static_com_ctrip_framework_dal_models_AvailableType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                AvailableType.class, Builder.class);
      }

      // Construct using com.ctrip.framework.dal.models.DalModels.AvailableType.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        isNull_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        boolArg_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        int32Arg_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        int64Arg_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        doubleArg_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000010);
        stringArg_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        bytesArg_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DalModels.internal_static_com_ctrip_framework_dal_models_AvailableType_descriptor;
      }

      public AvailableType getDefaultInstanceForType() {
        return AvailableType.getDefaultInstance();
      }

      public AvailableType build() {
        AvailableType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public AvailableType buildPartial() {
        AvailableType result = new AvailableType(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.isNull_ = isNull_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.boolArg_ = boolArg_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.int32Arg_ = int32Arg_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.int64Arg_ = int64Arg_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.doubleArg_ = doubleArg_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.stringArg_ = stringArg_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.bytesArg_ = bytesArg_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof AvailableType) {
          return mergeFrom((AvailableType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(AvailableType other) {
        if (other == AvailableType.getDefaultInstance()) return this;
        if (other.hasIsNull()) {
          setIsNull(other.getIsNull());
        }
        if (other.hasBoolArg()) {
          setBoolArg(other.getBoolArg());
        }
        if (other.hasInt32Arg()) {
          setInt32Arg(other.getInt32Arg());
        }
        if (other.hasInt64Arg()) {
          setInt64Arg(other.getInt64Arg());
        }
        if (other.hasDoubleArg()) {
          setDoubleArg(other.getDoubleArg());
        }
        if (other.hasStringArg()) {
          bitField0_ |= 0x00000020;
          stringArg_ = other.stringArg_;
          onChanged();
        }
        if (other.hasBytesArg()) {
          setBytesArg(other.getBytesArg());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasIsNull()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        AvailableType parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (AvailableType) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private boolean isNull_ ;
      /**
       * <code>required bool isNull = 1;</code>
       */
      public boolean hasIsNull() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bool isNull = 1;</code>
       */
      public boolean getIsNull() {
        return isNull_;
      }
      /**
       * <code>required bool isNull = 1;</code>
       */
      public Builder setIsNull(boolean value) {
        bitField0_ |= 0x00000001;
        isNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool isNull = 1;</code>
       */
      public Builder clearIsNull() {
        bitField0_ = (bitField0_ & ~0x00000001);
        isNull_ = false;
        onChanged();
        return this;
      }

      private boolean boolArg_ ;
      /**
       * <code>optional bool bool_arg = 2;</code>
       */
      public boolean hasBoolArg() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool bool_arg = 2;</code>
       */
      public boolean getBoolArg() {
        return boolArg_;
      }
      /**
       * <code>optional bool bool_arg = 2;</code>
       */
      public Builder setBoolArg(boolean value) {
        bitField0_ |= 0x00000002;
        boolArg_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool bool_arg = 2;</code>
       */
      public Builder clearBoolArg() {
        bitField0_ = (bitField0_ & ~0x00000002);
        boolArg_ = false;
        onChanged();
        return this;
      }

      private int int32Arg_ ;
      /**
       * <code>optional int32 int32_arg = 3;</code>
       */
      public boolean hasInt32Arg() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 int32_arg = 3;</code>
       */
      public int getInt32Arg() {
        return int32Arg_;
      }
      /**
       * <code>optional int32 int32_arg = 3;</code>
       */
      public Builder setInt32Arg(int value) {
        bitField0_ |= 0x00000004;
        int32Arg_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 int32_arg = 3;</code>
       */
      public Builder clearInt32Arg() {
        bitField0_ = (bitField0_ & ~0x00000004);
        int32Arg_ = 0;
        onChanged();
        return this;
      }

      private long int64Arg_ ;
      /**
       * <code>optional int64 int64_arg = 4;</code>
       */
      public boolean hasInt64Arg() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 int64_arg = 4;</code>
       */
      public long getInt64Arg() {
        return int64Arg_;
      }
      /**
       * <code>optional int64 int64_arg = 4;</code>
       */
      public Builder setInt64Arg(long value) {
        bitField0_ |= 0x00000008;
        int64Arg_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 int64_arg = 4;</code>
       */
      public Builder clearInt64Arg() {
        bitField0_ = (bitField0_ & ~0x00000008);
        int64Arg_ = 0L;
        onChanged();
        return this;
      }

      private double doubleArg_ ;
      /**
       * <code>optional double double_arg = 5;</code>
       */
      public boolean hasDoubleArg() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional double double_arg = 5;</code>
       */
      public double getDoubleArg() {
        return doubleArg_;
      }
      /**
       * <code>optional double double_arg = 5;</code>
       */
      public Builder setDoubleArg(double value) {
        bitField0_ |= 0x00000010;
        doubleArg_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double double_arg = 5;</code>
       */
      public Builder clearDoubleArg() {
        bitField0_ = (bitField0_ & ~0x00000010);
        doubleArg_ = 0D;
        onChanged();
        return this;
      }

      private Object stringArg_ = "";
      /**
       * <code>optional string string_arg = 6;</code>
       */
      public boolean hasStringArg() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string string_arg = 6;</code>
       */
      public String getStringArg() {
        Object ref = stringArg_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            stringArg_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string string_arg = 6;</code>
       */
      public com.google.protobuf.ByteString
          getStringArgBytes() {
        Object ref = stringArg_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          stringArg_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string string_arg = 6;</code>
       */
      public Builder setStringArg(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        stringArg_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string string_arg = 6;</code>
       */
      public Builder clearStringArg() {
        bitField0_ = (bitField0_ & ~0x00000020);
        stringArg_ = getDefaultInstance().getStringArg();
        onChanged();
        return this;
      }
      /**
       * <code>optional string string_arg = 6;</code>
       */
      public Builder setStringArgBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        stringArg_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString bytesArg_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes bytes_arg = 7;</code>
       */
      public boolean hasBytesArg() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bytes bytes_arg = 7;</code>
       */
      public com.google.protobuf.ByteString getBytesArg() {
        return bytesArg_;
      }
      /**
       * <code>optional bytes bytes_arg = 7;</code>
       */
      public Builder setBytesArg(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        bytesArg_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes bytes_arg = 7;</code>
       */
      public Builder clearBytesArg() {
        bitField0_ = (bitField0_ & ~0x00000040);
        bytesArg_ = getDefaultInstance().getBytesArg();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.ctrip.framework.dal.models.AvailableType)
    }

    static {
      defaultInstance = new AvailableType(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.ctrip.framework.dal.models.AvailableType)
  }

  public interface SqlParameterOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.ctrip.framework.dal.models.SqlParameter)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 dbType = 1;</code>
     */
    boolean hasDbType();
    /**
     * <code>optional int32 dbType = 1;</code>
     */
    int getDbType();

    /**
     * <code>optional .com.ctrip.framework.dal.models.Direction direction = 2;</code>
     */
    boolean hasDirection();
    /**
     * <code>optional .com.ctrip.framework.dal.models.Direction direction = 2;</code>
     */
    Direction getDirection();

    /**
     * <code>optional bool isNull = 3;</code>
     */
    boolean hasIsNull();
    /**
     * <code>optional bool isNull = 3;</code>
     */
    boolean getIsNull();

    /**
     * <code>optional string name = 4;</code>
     */
    boolean hasName();
    /**
     * <code>optional string name = 4;</code>
     */
    String getName();
    /**
     * <code>optional string name = 4;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>optional int32 index = 5;</code>
     */
    boolean hasIndex();
    /**
     * <code>optional int32 index = 5;</code>
     */
    int getIndex();

    /**
     * <code>optional bool sensitive = 6;</code>
     */
    boolean hasSensitive();
    /**
     * <code>optional bool sensitive = 6;</code>
     */
    boolean getSensitive();

    /**
     * <code>optional .com.ctrip.framework.dal.models.AvailableType value = 7;</code>
     */
    boolean hasValue();
    /**
     * <code>optional .com.ctrip.framework.dal.models.AvailableType value = 7;</code>
     */
    AvailableType getValue();
    /**
     * <code>optional .com.ctrip.framework.dal.models.AvailableType value = 7;</code>
     */
    AvailableTypeOrBuilder getValueOrBuilder();
  }
  /**
   * Protobuf type {@code com.ctrip.framework.dal.models.SqlParameter}
   */
  public static final class SqlParameter extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.ctrip.framework.dal.models.SqlParameter)
      SqlParameterOrBuilder {
    // Use SqlParameter.newBuilder() to construct.
    private SqlParameter(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SqlParameter(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SqlParameter defaultInstance;
    public static SqlParameter getDefaultInstance() {
      return defaultInstance;
    }

    public SqlParameter getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SqlParameter(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              dbType_ = input.readInt32();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              Direction value = Direction.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                direction_ = value;
              }
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              isNull_ = input.readBool();
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              name_ = bs;
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              index_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              sensitive_ = input.readBool();
              break;
            }
            case 58: {
              AvailableType.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = value_.toBuilder();
              }
              value_ = input.readMessage(AvailableType.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(value_);
                value_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DalModels.internal_static_com_ctrip_framework_dal_models_SqlParameter_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DalModels.internal_static_com_ctrip_framework_dal_models_SqlParameter_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SqlParameter.class, Builder.class);
    }

    public static com.google.protobuf.Parser<SqlParameter> PARSER =
        new com.google.protobuf.AbstractParser<SqlParameter>() {
      public SqlParameter parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SqlParameter(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<SqlParameter> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int DBTYPE_FIELD_NUMBER = 1;
    private int dbType_;
    /**
     * <code>optional int32 dbType = 1;</code>
     */
    public boolean hasDbType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 dbType = 1;</code>
     */
    public int getDbType() {
      return dbType_;
    }

    public static final int DIRECTION_FIELD_NUMBER = 2;
    private Direction direction_;
    /**
     * <code>optional .com.ctrip.framework.dal.models.Direction direction = 2;</code>
     */
    public boolean hasDirection() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .com.ctrip.framework.dal.models.Direction direction = 2;</code>
     */
    public Direction getDirection() {
      return direction_;
    }

    public static final int ISNULL_FIELD_NUMBER = 3;
    private boolean isNull_;
    /**
     * <code>optional bool isNull = 3;</code>
     */
    public boolean hasIsNull() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool isNull = 3;</code>
     */
    public boolean getIsNull() {
      return isNull_;
    }

    public static final int NAME_FIELD_NUMBER = 4;
    private Object name_;
    /**
     * <code>optional string name = 4;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string name = 4;</code>
     */
    public String getName() {
      Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 4;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int INDEX_FIELD_NUMBER = 5;
    private int index_;
    /**
     * <code>optional int32 index = 5;</code>
     */
    public boolean hasIndex() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 index = 5;</code>
     */
    public int getIndex() {
      return index_;
    }

    public static final int SENSITIVE_FIELD_NUMBER = 6;
    private boolean sensitive_;
    /**
     * <code>optional bool sensitive = 6;</code>
     */
    public boolean hasSensitive() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool sensitive = 6;</code>
     */
    public boolean getSensitive() {
      return sensitive_;
    }

    public static final int VALUE_FIELD_NUMBER = 7;
    private AvailableType value_;
    /**
     * <code>optional .com.ctrip.framework.dal.models.AvailableType value = 7;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .com.ctrip.framework.dal.models.AvailableType value = 7;</code>
     */
    public AvailableType getValue() {
      return value_;
    }
    /**
     * <code>optional .com.ctrip.framework.dal.models.AvailableType value = 7;</code>
     */
    public AvailableTypeOrBuilder getValueOrBuilder() {
      return value_;
    }

    private void initFields() {
      dbType_ = 0;
      direction_ = Direction.Input;
      isNull_ = false;
      name_ = "";
      index_ = 0;
      sensitive_ = false;
      value_ = AvailableType.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (hasValue()) {
        if (!getValue().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, dbType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, direction_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, isNull_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getNameBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, index_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(6, sensitive_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(7, value_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, dbType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, direction_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, isNull_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getNameBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, index_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, sensitive_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static SqlParameter parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SqlParameter parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SqlParameter parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SqlParameter parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SqlParameter parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SqlParameter parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static SqlParameter parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static SqlParameter parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static SqlParameter parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SqlParameter parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SqlParameter prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.ctrip.framework.dal.models.SqlParameter}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.ctrip.framework.dal.models.SqlParameter)
        SqlParameterOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DalModels.internal_static_com_ctrip_framework_dal_models_SqlParameter_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DalModels.internal_static_com_ctrip_framework_dal_models_SqlParameter_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SqlParameter.class, Builder.class);
      }

      // Construct using com.ctrip.framework.dal.models.DalModels.SqlParameter.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getValueFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        dbType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        direction_ = Direction.Input;
        bitField0_ = (bitField0_ & ~0x00000002);
        isNull_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        index_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        sensitive_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        if (valueBuilder_ == null) {
          value_ = AvailableType.getDefaultInstance();
        } else {
          valueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DalModels.internal_static_com_ctrip_framework_dal_models_SqlParameter_descriptor;
      }

      public SqlParameter getDefaultInstanceForType() {
        return SqlParameter.getDefaultInstance();
      }

      public SqlParameter build() {
        SqlParameter result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SqlParameter buildPartial() {
        SqlParameter result = new SqlParameter(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.dbType_ = dbType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.direction_ = direction_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.isNull_ = isNull_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.index_ = index_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.sensitive_ = sensitive_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        if (valueBuilder_ == null) {
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SqlParameter) {
          return mergeFrom((SqlParameter)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SqlParameter other) {
        if (other == SqlParameter.getDefaultInstance()) return this;
        if (other.hasDbType()) {
          setDbType(other.getDbType());
        }
        if (other.hasDirection()) {
          setDirection(other.getDirection());
        }
        if (other.hasIsNull()) {
          setIsNull(other.getIsNull());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000008;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasIndex()) {
          setIndex(other.getIndex());
        }
        if (other.hasSensitive()) {
          setSensitive(other.getSensitive());
        }
        if (other.hasValue()) {
          mergeValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (hasValue()) {
          if (!getValue().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SqlParameter parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SqlParameter) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int dbType_ ;
      /**
       * <code>optional int32 dbType = 1;</code>
       */
      public boolean hasDbType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 dbType = 1;</code>
       */
      public int getDbType() {
        return dbType_;
      }
      /**
       * <code>optional int32 dbType = 1;</code>
       */
      public Builder setDbType(int value) {
        bitField0_ |= 0x00000001;
        dbType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 dbType = 1;</code>
       */
      public Builder clearDbType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        dbType_ = 0;
        onChanged();
        return this;
      }

      private Direction direction_ = Direction.Input;
      /**
       * <code>optional .com.ctrip.framework.dal.models.Direction direction = 2;</code>
       */
      public boolean hasDirection() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.Direction direction = 2;</code>
       */
      public Direction getDirection() {
        return direction_;
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.Direction direction = 2;</code>
       */
      public Builder setDirection(Direction value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        direction_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.Direction direction = 2;</code>
       */
      public Builder clearDirection() {
        bitField0_ = (bitField0_ & ~0x00000002);
        direction_ = Direction.Input;
        onChanged();
        return this;
      }

      private boolean isNull_ ;
      /**
       * <code>optional bool isNull = 3;</code>
       */
      public boolean hasIsNull() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool isNull = 3;</code>
       */
      public boolean getIsNull() {
        return isNull_;
      }
      /**
       * <code>optional bool isNull = 3;</code>
       */
      public Builder setIsNull(boolean value) {
        bitField0_ |= 0x00000004;
        isNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isNull = 3;</code>
       */
      public Builder clearIsNull() {
        bitField0_ = (bitField0_ & ~0x00000004);
        isNull_ = false;
        onChanged();
        return this;
      }

      private Object name_ = "";
      /**
       * <code>optional string name = 4;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string name = 4;</code>
       */
      public String getName() {
        Object ref = name_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string name = 4;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 4;</code>
       */
      public Builder setName(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 4;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000008);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 4;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        name_ = value;
        onChanged();
        return this;
      }

      private int index_ ;
      /**
       * <code>optional int32 index = 5;</code>
       */
      public boolean hasIndex() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 index = 5;</code>
       */
      public int getIndex() {
        return index_;
      }
      /**
       * <code>optional int32 index = 5;</code>
       */
      public Builder setIndex(int value) {
        bitField0_ |= 0x00000010;
        index_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 index = 5;</code>
       */
      public Builder clearIndex() {
        bitField0_ = (bitField0_ & ~0x00000010);
        index_ = 0;
        onChanged();
        return this;
      }

      private boolean sensitive_ ;
      /**
       * <code>optional bool sensitive = 6;</code>
       */
      public boolean hasSensitive() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool sensitive = 6;</code>
       */
      public boolean getSensitive() {
        return sensitive_;
      }
      /**
       * <code>optional bool sensitive = 6;</code>
       */
      public Builder setSensitive(boolean value) {
        bitField0_ |= 0x00000020;
        sensitive_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool sensitive = 6;</code>
       */
      public Builder clearSensitive() {
        bitField0_ = (bitField0_ & ~0x00000020);
        sensitive_ = false;
        onChanged();
        return this;
      }

      private AvailableType value_ = AvailableType.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          AvailableType, AvailableType.Builder, AvailableTypeOrBuilder> valueBuilder_;
      /**
       * <code>optional .com.ctrip.framework.dal.models.AvailableType value = 7;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.AvailableType value = 7;</code>
       */
      public AvailableType getValue() {
        if (valueBuilder_ == null) {
          return value_;
        } else {
          return valueBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.AvailableType value = 7;</code>
       */
      public Builder setValue(AvailableType value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          valueBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.AvailableType value = 7;</code>
       */
      public Builder setValue(
          AvailableType.Builder builderForValue) {
        if (valueBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          valueBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.AvailableType value = 7;</code>
       */
      public Builder mergeValue(AvailableType value) {
        if (valueBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              value_ != AvailableType.getDefaultInstance()) {
            value_ =
              AvailableType.newBuilder(value_).mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          valueBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.AvailableType value = 7;</code>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = AvailableType.getDefaultInstance();
          onChanged();
        } else {
          valueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.AvailableType value = 7;</code>
       */
      public AvailableType.Builder getValueBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getValueFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.AvailableType value = 7;</code>
       */
      public AvailableTypeOrBuilder getValueOrBuilder() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilder();
        } else {
          return value_;
        }
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.AvailableType value = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          AvailableType, AvailableType.Builder, AvailableTypeOrBuilder>
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              AvailableType, AvailableType.Builder, AvailableTypeOrBuilder>(
                  getValue(),
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.ctrip.framework.dal.models.SqlParameter)
    }

    static {
      defaultInstance = new SqlParameter(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.ctrip.framework.dal.models.SqlParameter)
  }

  public interface SqlParametersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.ctrip.framework.dal.models.SqlParameters)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .com.ctrip.framework.dal.models.SqlParameter parameters = 1;</code>
     */
    java.util.List<SqlParameter>
        getParametersList();
    /**
     * <code>repeated .com.ctrip.framework.dal.models.SqlParameter parameters = 1;</code>
     */
    SqlParameter getParameters(int index);
    /**
     * <code>repeated .com.ctrip.framework.dal.models.SqlParameter parameters = 1;</code>
     */
    int getParametersCount();
    /**
     * <code>repeated .com.ctrip.framework.dal.models.SqlParameter parameters = 1;</code>
     */
    java.util.List<? extends SqlParameterOrBuilder>
        getParametersOrBuilderList();
    /**
     * <code>repeated .com.ctrip.framework.dal.models.SqlParameter parameters = 1;</code>
     */
    SqlParameterOrBuilder getParametersOrBuilder(
            int index);
  }
  /**
   * Protobuf type {@code com.ctrip.framework.dal.models.SqlParameters}
   */
  public static final class SqlParameters extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.ctrip.framework.dal.models.SqlParameters)
      SqlParametersOrBuilder {
    // Use SqlParameters.newBuilder() to construct.
    private SqlParameters(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SqlParameters(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SqlParameters defaultInstance;
    public static SqlParameters getDefaultInstance() {
      return defaultInstance;
    }

    public SqlParameters getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SqlParameters(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                parameters_ = new java.util.ArrayList<SqlParameter>();
                mutable_bitField0_ |= 0x00000001;
              }
              parameters_.add(input.readMessage(SqlParameter.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          parameters_ = java.util.Collections.unmodifiableList(parameters_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DalModels.internal_static_com_ctrip_framework_dal_models_SqlParameters_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DalModels.internal_static_com_ctrip_framework_dal_models_SqlParameters_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SqlParameters.class, Builder.class);
    }

    public static com.google.protobuf.Parser<SqlParameters> PARSER =
        new com.google.protobuf.AbstractParser<SqlParameters>() {
      public SqlParameters parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SqlParameters(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<SqlParameters> getParserForType() {
      return PARSER;
    }

    public static final int PARAMETERS_FIELD_NUMBER = 1;
    private java.util.List<SqlParameter> parameters_;
    /**
     * <code>repeated .com.ctrip.framework.dal.models.SqlParameter parameters = 1;</code>
     */
    public java.util.List<SqlParameter> getParametersList() {
      return parameters_;
    }
    /**
     * <code>repeated .com.ctrip.framework.dal.models.SqlParameter parameters = 1;</code>
     */
    public java.util.List<? extends SqlParameterOrBuilder>
        getParametersOrBuilderList() {
      return parameters_;
    }
    /**
     * <code>repeated .com.ctrip.framework.dal.models.SqlParameter parameters = 1;</code>
     */
    public int getParametersCount() {
      return parameters_.size();
    }
    /**
     * <code>repeated .com.ctrip.framework.dal.models.SqlParameter parameters = 1;</code>
     */
    public SqlParameter getParameters(int index) {
      return parameters_.get(index);
    }
    /**
     * <code>repeated .com.ctrip.framework.dal.models.SqlParameter parameters = 1;</code>
     */
    public SqlParameterOrBuilder getParametersOrBuilder(
        int index) {
      return parameters_.get(index);
    }

    private void initFields() {
      parameters_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getParametersCount(); i++) {
        if (!getParameters(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < parameters_.size(); i++) {
        output.writeMessage(1, parameters_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < parameters_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, parameters_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static SqlParameters parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SqlParameters parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SqlParameters parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SqlParameters parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SqlParameters parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SqlParameters parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static SqlParameters parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static SqlParameters parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static SqlParameters parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SqlParameters parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SqlParameters prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.ctrip.framework.dal.models.SqlParameters}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.ctrip.framework.dal.models.SqlParameters)
        SqlParametersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DalModels.internal_static_com_ctrip_framework_dal_models_SqlParameters_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DalModels.internal_static_com_ctrip_framework_dal_models_SqlParameters_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SqlParameters.class, Builder.class);
      }

      // Construct using com.ctrip.framework.dal.models.DalModels.SqlParameters.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getParametersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (parametersBuilder_ == null) {
          parameters_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          parametersBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DalModels.internal_static_com_ctrip_framework_dal_models_SqlParameters_descriptor;
      }

      public SqlParameters getDefaultInstanceForType() {
        return SqlParameters.getDefaultInstance();
      }

      public SqlParameters build() {
        SqlParameters result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SqlParameters buildPartial() {
        SqlParameters result = new SqlParameters(this);
        int from_bitField0_ = bitField0_;
        if (parametersBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            parameters_ = java.util.Collections.unmodifiableList(parameters_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.parameters_ = parameters_;
        } else {
          result.parameters_ = parametersBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SqlParameters) {
          return mergeFrom((SqlParameters)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SqlParameters other) {
        if (other == SqlParameters.getDefaultInstance()) return this;
        if (parametersBuilder_ == null) {
          if (!other.parameters_.isEmpty()) {
            if (parameters_.isEmpty()) {
              parameters_ = other.parameters_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureParametersIsMutable();
              parameters_.addAll(other.parameters_);
            }
            onChanged();
          }
        } else {
          if (!other.parameters_.isEmpty()) {
            if (parametersBuilder_.isEmpty()) {
              parametersBuilder_.dispose();
              parametersBuilder_ = null;
              parameters_ = other.parameters_;
              bitField0_ = (bitField0_ & ~0x00000001);
              parametersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getParametersFieldBuilder() : null;
            } else {
              parametersBuilder_.addAllMessages(other.parameters_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getParametersCount(); i++) {
          if (!getParameters(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SqlParameters parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SqlParameters) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<SqlParameter> parameters_ =
        java.util.Collections.emptyList();
      private void ensureParametersIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          parameters_ = new java.util.ArrayList<SqlParameter>(parameters_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          SqlParameter, SqlParameter.Builder, SqlParameterOrBuilder> parametersBuilder_;

      /**
       * <code>repeated .com.ctrip.framework.dal.models.SqlParameter parameters = 1;</code>
       */
      public java.util.List<SqlParameter> getParametersList() {
        if (parametersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(parameters_);
        } else {
          return parametersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.SqlParameter parameters = 1;</code>
       */
      public int getParametersCount() {
        if (parametersBuilder_ == null) {
          return parameters_.size();
        } else {
          return parametersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.SqlParameter parameters = 1;</code>
       */
      public SqlParameter getParameters(int index) {
        if (parametersBuilder_ == null) {
          return parameters_.get(index);
        } else {
          return parametersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.SqlParameter parameters = 1;</code>
       */
      public Builder setParameters(
          int index, SqlParameter value) {
        if (parametersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParametersIsMutable();
          parameters_.set(index, value);
          onChanged();
        } else {
          parametersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.SqlParameter parameters = 1;</code>
       */
      public Builder setParameters(
          int index, SqlParameter.Builder builderForValue) {
        if (parametersBuilder_ == null) {
          ensureParametersIsMutable();
          parameters_.set(index, builderForValue.build());
          onChanged();
        } else {
          parametersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.SqlParameter parameters = 1;</code>
       */
      public Builder addParameters(SqlParameter value) {
        if (parametersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParametersIsMutable();
          parameters_.add(value);
          onChanged();
        } else {
          parametersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.SqlParameter parameters = 1;</code>
       */
      public Builder addParameters(
          int index, SqlParameter value) {
        if (parametersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParametersIsMutable();
          parameters_.add(index, value);
          onChanged();
        } else {
          parametersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.SqlParameter parameters = 1;</code>
       */
      public Builder addParameters(
          SqlParameter.Builder builderForValue) {
        if (parametersBuilder_ == null) {
          ensureParametersIsMutable();
          parameters_.add(builderForValue.build());
          onChanged();
        } else {
          parametersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.SqlParameter parameters = 1;</code>
       */
      public Builder addParameters(
          int index, SqlParameter.Builder builderForValue) {
        if (parametersBuilder_ == null) {
          ensureParametersIsMutable();
          parameters_.add(index, builderForValue.build());
          onChanged();
        } else {
          parametersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.SqlParameter parameters = 1;</code>
       */
      public Builder addAllParameters(
          Iterable<? extends SqlParameter> values) {
        if (parametersBuilder_ == null) {
          ensureParametersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, parameters_);
          onChanged();
        } else {
          parametersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.SqlParameter parameters = 1;</code>
       */
      public Builder clearParameters() {
        if (parametersBuilder_ == null) {
          parameters_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          parametersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.SqlParameter parameters = 1;</code>
       */
      public Builder removeParameters(int index) {
        if (parametersBuilder_ == null) {
          ensureParametersIsMutable();
          parameters_.remove(index);
          onChanged();
        } else {
          parametersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.SqlParameter parameters = 1;</code>
       */
      public SqlParameter.Builder getParametersBuilder(
          int index) {
        return getParametersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.SqlParameter parameters = 1;</code>
       */
      public SqlParameterOrBuilder getParametersOrBuilder(
          int index) {
        if (parametersBuilder_ == null) {
          return parameters_.get(index);  } else {
          return parametersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.SqlParameter parameters = 1;</code>
       */
      public java.util.List<? extends SqlParameterOrBuilder>
           getParametersOrBuilderList() {
        if (parametersBuilder_ != null) {
          return parametersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(parameters_);
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.SqlParameter parameters = 1;</code>
       */
      public SqlParameter.Builder addParametersBuilder() {
        return getParametersFieldBuilder().addBuilder(
            SqlParameter.getDefaultInstance());
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.SqlParameter parameters = 1;</code>
       */
      public SqlParameter.Builder addParametersBuilder(
          int index) {
        return getParametersFieldBuilder().addBuilder(
            index, SqlParameter.getDefaultInstance());
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.SqlParameter parameters = 1;</code>
       */
      public java.util.List<SqlParameter.Builder>
           getParametersBuilderList() {
        return getParametersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          SqlParameter, SqlParameter.Builder, SqlParameterOrBuilder>
          getParametersFieldBuilder() {
        if (parametersBuilder_ == null) {
          parametersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              SqlParameter, SqlParameter.Builder, SqlParameterOrBuilder>(
                  parameters_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          parameters_ = null;
        }
        return parametersBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.ctrip.framework.dal.models.SqlParameters)
    }

    static {
      defaultInstance = new SqlParameters(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.ctrip.framework.dal.models.SqlParameters)
  }

  public interface DalHintOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.ctrip.framework.dal.models.DalHint)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .com.ctrip.framework.dal.models.DalHintEnum key = 1;</code>
     */
    boolean hasKey();
    /**
     * <code>required .com.ctrip.framework.dal.models.DalHintEnum key = 1;</code>
     */
    DalHintEnum getKey();

    /**
     * <code>required string value = 2;</code>
     */
    boolean hasValue();
    /**
     * <code>required string value = 2;</code>
     */
    String getValue();
    /**
     * <code>required string value = 2;</code>
     */
    com.google.protobuf.ByteString
        getValueBytes();
  }
  /**
   * Protobuf type {@code com.ctrip.framework.dal.models.DalHint}
   */
  public static final class DalHint extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.ctrip.framework.dal.models.DalHint)
      DalHintOrBuilder {
    // Use DalHint.newBuilder() to construct.
    private DalHint(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DalHint(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DalHint defaultInstance;
    public static DalHint getDefaultInstance() {
      return defaultInstance;
    }

    public DalHint getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DalHint(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              DalHintEnum value = DalHintEnum.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                key_ = value;
              }
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              value_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DalModels.internal_static_com_ctrip_framework_dal_models_DalHint_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DalModels.internal_static_com_ctrip_framework_dal_models_DalHint_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              DalHint.class, Builder.class);
    }

    public static com.google.protobuf.Parser<DalHint> PARSER =
        new com.google.protobuf.AbstractParser<DalHint>() {
      public DalHint parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DalHint(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<DalHint> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int KEY_FIELD_NUMBER = 1;
    private DalHintEnum key_;
    /**
     * <code>required .com.ctrip.framework.dal.models.DalHintEnum key = 1;</code>
     */
    public boolean hasKey() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .com.ctrip.framework.dal.models.DalHintEnum key = 1;</code>
     */
    public DalHintEnum getKey() {
      return key_;
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    private Object value_;
    /**
     * <code>required string value = 2;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string value = 2;</code>
     */
    public String getValue() {
      Object ref = value_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          value_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string value = 2;</code>
     */
    public com.google.protobuf.ByteString
        getValueBytes() {
      Object ref = value_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        value_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      key_ = DalHintEnum.operation;
      value_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasKey()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasValue()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, key_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getValueBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, key_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getValueBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static DalHint parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static DalHint parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static DalHint parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static DalHint parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static DalHint parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static DalHint parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static DalHint parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static DalHint parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static DalHint parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static DalHint parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DalHint prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.ctrip.framework.dal.models.DalHint}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.ctrip.framework.dal.models.DalHint)
        DalHintOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DalModels.internal_static_com_ctrip_framework_dal_models_DalHint_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DalModels.internal_static_com_ctrip_framework_dal_models_DalHint_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                DalHint.class, Builder.class);
      }

      // Construct using com.ctrip.framework.dal.models.DalModels.DalHint.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        key_ = DalHintEnum.operation;
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DalModels.internal_static_com_ctrip_framework_dal_models_DalHint_descriptor;
      }

      public DalHint getDefaultInstanceForType() {
        return DalHint.getDefaultInstance();
      }

      public DalHint build() {
        DalHint result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public DalHint buildPartial() {
        DalHint result = new DalHint(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.key_ = key_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.value_ = value_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DalHint) {
          return mergeFrom((DalHint)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(DalHint other) {
        if (other == DalHint.getDefaultInstance()) return this;
        if (other.hasKey()) {
          setKey(other.getKey());
        }
        if (other.hasValue()) {
          bitField0_ |= 0x00000002;
          value_ = other.value_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasKey()) {
          
          return false;
        }
        if (!hasValue()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        DalHint parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (DalHint) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private DalHintEnum key_ = DalHintEnum.operation;
      /**
       * <code>required .com.ctrip.framework.dal.models.DalHintEnum key = 1;</code>
       */
      public boolean hasKey() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .com.ctrip.framework.dal.models.DalHintEnum key = 1;</code>
       */
      public DalHintEnum getKey() {
        return key_;
      }
      /**
       * <code>required .com.ctrip.framework.dal.models.DalHintEnum key = 1;</code>
       */
      public Builder setKey(DalHintEnum value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        key_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .com.ctrip.framework.dal.models.DalHintEnum key = 1;</code>
       */
      public Builder clearKey() {
        bitField0_ = (bitField0_ & ~0x00000001);
        key_ = DalHintEnum.operation;
        onChanged();
        return this;
      }

      private Object value_ = "";
      /**
       * <code>required string value = 2;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string value = 2;</code>
       */
      public String getValue() {
        Object ref = value_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            value_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>required string value = 2;</code>
       */
      public com.google.protobuf.ByteString
          getValueBytes() {
        Object ref = value_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          value_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string value = 2;</code>
       */
      public Builder setValue(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string value = 2;</code>
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000002);
        value_ = getDefaultInstance().getValue();
        onChanged();
        return this;
      }
      /**
       * <code>required string value = 2;</code>
       */
      public Builder setValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        value_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.ctrip.framework.dal.models.DalHint)
    }

    static {
      defaultInstance = new DalHint(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.ctrip.framework.dal.models.DalHint)
  }

  public interface DalHintsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.ctrip.framework.dal.models.DalHints)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .com.ctrip.framework.dal.models.DalHint hints = 1;</code>
     */
    java.util.List<DalHint>
        getHintsList();
    /**
     * <code>repeated .com.ctrip.framework.dal.models.DalHint hints = 1;</code>
     */
    DalHint getHints(int index);
    /**
     * <code>repeated .com.ctrip.framework.dal.models.DalHint hints = 1;</code>
     */
    int getHintsCount();
    /**
     * <code>repeated .com.ctrip.framework.dal.models.DalHint hints = 1;</code>
     */
    java.util.List<? extends DalHintOrBuilder>
        getHintsOrBuilderList();
    /**
     * <code>repeated .com.ctrip.framework.dal.models.DalHint hints = 1;</code>
     */
    DalHintOrBuilder getHintsOrBuilder(
            int index);
  }
  /**
   * Protobuf type {@code com.ctrip.framework.dal.models.DalHints}
   */
  public static final class DalHints extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.ctrip.framework.dal.models.DalHints)
      DalHintsOrBuilder {
    // Use DalHints.newBuilder() to construct.
    private DalHints(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DalHints(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DalHints defaultInstance;
    public static DalHints getDefaultInstance() {
      return defaultInstance;
    }

    public DalHints getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DalHints(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                hints_ = new java.util.ArrayList<DalHint>();
                mutable_bitField0_ |= 0x00000001;
              }
              hints_.add(input.readMessage(DalHint.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          hints_ = java.util.Collections.unmodifiableList(hints_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DalModels.internal_static_com_ctrip_framework_dal_models_DalHints_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DalModels.internal_static_com_ctrip_framework_dal_models_DalHints_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              DalHints.class, Builder.class);
    }

    public static com.google.protobuf.Parser<DalHints> PARSER =
        new com.google.protobuf.AbstractParser<DalHints>() {
      public DalHints parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DalHints(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<DalHints> getParserForType() {
      return PARSER;
    }

    public static final int HINTS_FIELD_NUMBER = 1;
    private java.util.List<DalHint> hints_;
    /**
     * <code>repeated .com.ctrip.framework.dal.models.DalHint hints = 1;</code>
     */
    public java.util.List<DalHint> getHintsList() {
      return hints_;
    }
    /**
     * <code>repeated .com.ctrip.framework.dal.models.DalHint hints = 1;</code>
     */
    public java.util.List<? extends DalHintOrBuilder>
        getHintsOrBuilderList() {
      return hints_;
    }
    /**
     * <code>repeated .com.ctrip.framework.dal.models.DalHint hints = 1;</code>
     */
    public int getHintsCount() {
      return hints_.size();
    }
    /**
     * <code>repeated .com.ctrip.framework.dal.models.DalHint hints = 1;</code>
     */
    public DalHint getHints(int index) {
      return hints_.get(index);
    }
    /**
     * <code>repeated .com.ctrip.framework.dal.models.DalHint hints = 1;</code>
     */
    public DalHintOrBuilder getHintsOrBuilder(
        int index) {
      return hints_.get(index);
    }

    private void initFields() {
      hints_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getHintsCount(); i++) {
        if (!getHints(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < hints_.size(); i++) {
        output.writeMessage(1, hints_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < hints_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, hints_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static DalHints parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static DalHints parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static DalHints parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static DalHints parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static DalHints parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static DalHints parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static DalHints parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static DalHints parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static DalHints parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static DalHints parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DalHints prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.ctrip.framework.dal.models.DalHints}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.ctrip.framework.dal.models.DalHints)
        DalHintsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DalModels.internal_static_com_ctrip_framework_dal_models_DalHints_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DalModels.internal_static_com_ctrip_framework_dal_models_DalHints_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                DalHints.class, Builder.class);
      }

      // Construct using com.ctrip.framework.dal.models.DalModels.DalHints.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getHintsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (hintsBuilder_ == null) {
          hints_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          hintsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DalModels.internal_static_com_ctrip_framework_dal_models_DalHints_descriptor;
      }

      public DalHints getDefaultInstanceForType() {
        return DalHints.getDefaultInstance();
      }

      public DalHints build() {
        DalHints result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public DalHints buildPartial() {
        DalHints result = new DalHints(this);
        int from_bitField0_ = bitField0_;
        if (hintsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            hints_ = java.util.Collections.unmodifiableList(hints_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.hints_ = hints_;
        } else {
          result.hints_ = hintsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DalHints) {
          return mergeFrom((DalHints)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(DalHints other) {
        if (other == DalHints.getDefaultInstance()) return this;
        if (hintsBuilder_ == null) {
          if (!other.hints_.isEmpty()) {
            if (hints_.isEmpty()) {
              hints_ = other.hints_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureHintsIsMutable();
              hints_.addAll(other.hints_);
            }
            onChanged();
          }
        } else {
          if (!other.hints_.isEmpty()) {
            if (hintsBuilder_.isEmpty()) {
              hintsBuilder_.dispose();
              hintsBuilder_ = null;
              hints_ = other.hints_;
              bitField0_ = (bitField0_ & ~0x00000001);
              hintsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getHintsFieldBuilder() : null;
            } else {
              hintsBuilder_.addAllMessages(other.hints_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getHintsCount(); i++) {
          if (!getHints(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        DalHints parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (DalHints) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<DalHint> hints_ =
        java.util.Collections.emptyList();
      private void ensureHintsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          hints_ = new java.util.ArrayList<DalHint>(hints_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          DalHint, DalHint.Builder, DalHintOrBuilder> hintsBuilder_;

      /**
       * <code>repeated .com.ctrip.framework.dal.models.DalHint hints = 1;</code>
       */
      public java.util.List<DalHint> getHintsList() {
        if (hintsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(hints_);
        } else {
          return hintsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DalHint hints = 1;</code>
       */
      public int getHintsCount() {
        if (hintsBuilder_ == null) {
          return hints_.size();
        } else {
          return hintsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DalHint hints = 1;</code>
       */
      public DalHint getHints(int index) {
        if (hintsBuilder_ == null) {
          return hints_.get(index);
        } else {
          return hintsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DalHint hints = 1;</code>
       */
      public Builder setHints(
          int index, DalHint value) {
        if (hintsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHintsIsMutable();
          hints_.set(index, value);
          onChanged();
        } else {
          hintsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DalHint hints = 1;</code>
       */
      public Builder setHints(
          int index, DalHint.Builder builderForValue) {
        if (hintsBuilder_ == null) {
          ensureHintsIsMutable();
          hints_.set(index, builderForValue.build());
          onChanged();
        } else {
          hintsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DalHint hints = 1;</code>
       */
      public Builder addHints(DalHint value) {
        if (hintsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHintsIsMutable();
          hints_.add(value);
          onChanged();
        } else {
          hintsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DalHint hints = 1;</code>
       */
      public Builder addHints(
          int index, DalHint value) {
        if (hintsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHintsIsMutable();
          hints_.add(index, value);
          onChanged();
        } else {
          hintsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DalHint hints = 1;</code>
       */
      public Builder addHints(
          DalHint.Builder builderForValue) {
        if (hintsBuilder_ == null) {
          ensureHintsIsMutable();
          hints_.add(builderForValue.build());
          onChanged();
        } else {
          hintsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DalHint hints = 1;</code>
       */
      public Builder addHints(
          int index, DalHint.Builder builderForValue) {
        if (hintsBuilder_ == null) {
          ensureHintsIsMutable();
          hints_.add(index, builderForValue.build());
          onChanged();
        } else {
          hintsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DalHint hints = 1;</code>
       */
      public Builder addAllHints(
          Iterable<? extends DalHint> values) {
        if (hintsBuilder_ == null) {
          ensureHintsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, hints_);
          onChanged();
        } else {
          hintsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DalHint hints = 1;</code>
       */
      public Builder clearHints() {
        if (hintsBuilder_ == null) {
          hints_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          hintsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DalHint hints = 1;</code>
       */
      public Builder removeHints(int index) {
        if (hintsBuilder_ == null) {
          ensureHintsIsMutable();
          hints_.remove(index);
          onChanged();
        } else {
          hintsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DalHint hints = 1;</code>
       */
      public DalHint.Builder getHintsBuilder(
          int index) {
        return getHintsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DalHint hints = 1;</code>
       */
      public DalHintOrBuilder getHintsOrBuilder(
          int index) {
        if (hintsBuilder_ == null) {
          return hints_.get(index);  } else {
          return hintsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DalHint hints = 1;</code>
       */
      public java.util.List<? extends DalHintOrBuilder>
           getHintsOrBuilderList() {
        if (hintsBuilder_ != null) {
          return hintsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(hints_);
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DalHint hints = 1;</code>
       */
      public DalHint.Builder addHintsBuilder() {
        return getHintsFieldBuilder().addBuilder(
            DalHint.getDefaultInstance());
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DalHint hints = 1;</code>
       */
      public DalHint.Builder addHintsBuilder(
          int index) {
        return getHintsFieldBuilder().addBuilder(
            index, DalHint.getDefaultInstance());
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DalHint hints = 1;</code>
       */
      public java.util.List<DalHint.Builder>
           getHintsBuilderList() {
        return getHintsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          DalHint, DalHint.Builder, DalHintOrBuilder>
          getHintsFieldBuilder() {
        if (hintsBuilder_ == null) {
          hintsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              DalHint, DalHint.Builder, DalHintOrBuilder>(
                  hints_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          hints_ = null;
        }
        return hintsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.ctrip.framework.dal.models.DalHints)
    }

    static {
      defaultInstance = new DalHints(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.ctrip.framework.dal.models.DalHints)
  }

  public interface VersionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.ctrip.framework.dal.models.Version)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string client = 1;</code>
     */
    boolean hasClient();
    /**
     * <code>required string client = 1;</code>
     */
    String getClient();
    /**
     * <code>required string client = 1;</code>
     */
    com.google.protobuf.ByteString
        getClientBytes();

    /**
     * <code>required string version = 2;</code>
     */
    boolean hasVersion();
    /**
     * <code>required string version = 2;</code>
     */
    String getVersion();
    /**
     * <code>required string version = 2;</code>
     */
    com.google.protobuf.ByteString
        getVersionBytes();
  }
  /**
   * Protobuf type {@code com.ctrip.framework.dal.models.Version}
   */
  public static final class Version extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.ctrip.framework.dal.models.Version)
      VersionOrBuilder {
    // Use Version.newBuilder() to construct.
    private Version(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Version(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Version defaultInstance;
    public static Version getDefaultInstance() {
      return defaultInstance;
    }

    public Version getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Version(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              client_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              version_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DalModels.internal_static_com_ctrip_framework_dal_models_Version_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DalModels.internal_static_com_ctrip_framework_dal_models_Version_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Version.class, Builder.class);
    }

    public static com.google.protobuf.Parser<Version> PARSER =
        new com.google.protobuf.AbstractParser<Version>() {
      public Version parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Version(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<Version> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int CLIENT_FIELD_NUMBER = 1;
    private Object client_;
    /**
     * <code>required string client = 1;</code>
     */
    public boolean hasClient() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string client = 1;</code>
     */
    public String getClient() {
      Object ref = client_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          client_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string client = 1;</code>
     */
    public com.google.protobuf.ByteString
        getClientBytes() {
      Object ref = client_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        client_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VERSION_FIELD_NUMBER = 2;
    private Object version_;
    /**
     * <code>required string version = 2;</code>
     */
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string version = 2;</code>
     */
    public String getVersion() {
      Object ref = version_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          version_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string version = 2;</code>
     */
    public com.google.protobuf.ByteString
        getVersionBytes() {
      Object ref = version_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        version_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      client_ = "";
      version_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasClient()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVersion()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getClientBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getVersionBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getClientBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getVersionBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Version parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Version parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Version parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Version parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Version parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Version parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Version parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Version parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Version parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Version parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Version prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.ctrip.framework.dal.models.Version}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.ctrip.framework.dal.models.Version)
        VersionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DalModels.internal_static_com_ctrip_framework_dal_models_Version_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DalModels.internal_static_com_ctrip_framework_dal_models_Version_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Version.class, Builder.class);
      }

      // Construct using com.ctrip.framework.dal.models.DalModels.Version.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        client_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        version_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DalModels.internal_static_com_ctrip_framework_dal_models_Version_descriptor;
      }

      public Version getDefaultInstanceForType() {
        return Version.getDefaultInstance();
      }

      public Version build() {
        Version result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Version buildPartial() {
        Version result = new Version(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.client_ = client_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.version_ = version_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Version) {
          return mergeFrom((Version)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Version other) {
        if (other == Version.getDefaultInstance()) return this;
        if (other.hasClient()) {
          bitField0_ |= 0x00000001;
          client_ = other.client_;
          onChanged();
        }
        if (other.hasVersion()) {
          bitField0_ |= 0x00000002;
          version_ = other.version_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasClient()) {
          
          return false;
        }
        if (!hasVersion()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Version parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Version) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private Object client_ = "";
      /**
       * <code>required string client = 1;</code>
       */
      public boolean hasClient() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string client = 1;</code>
       */
      public String getClient() {
        Object ref = client_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            client_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>required string client = 1;</code>
       */
      public com.google.protobuf.ByteString
          getClientBytes() {
        Object ref = client_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          client_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string client = 1;</code>
       */
      public Builder setClient(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        client_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string client = 1;</code>
       */
      public Builder clearClient() {
        bitField0_ = (bitField0_ & ~0x00000001);
        client_ = getDefaultInstance().getClient();
        onChanged();
        return this;
      }
      /**
       * <code>required string client = 1;</code>
       */
      public Builder setClientBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        client_ = value;
        onChanged();
        return this;
      }

      private Object version_ = "";
      /**
       * <code>required string version = 2;</code>
       */
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string version = 2;</code>
       */
      public String getVersion() {
        Object ref = version_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            version_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>required string version = 2;</code>
       */
      public com.google.protobuf.ByteString
          getVersionBytes() {
        Object ref = version_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          version_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string version = 2;</code>
       */
      public Builder setVersion(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string version = 2;</code>
       */
      public Builder clearVersion() {
        bitField0_ = (bitField0_ & ~0x00000002);
        version_ = getDefaultInstance().getVersion();
        onChanged();
        return this;
      }
      /**
       * <code>required string version = 2;</code>
       */
      public Builder setVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        version_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.ctrip.framework.dal.models.Version)
    }

    static {
      defaultInstance = new Version(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.ctrip.framework.dal.models.Version)
  }

  public interface TransactionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.ctrip.framework.dal.models.Transaction)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string transactionId = 1;</code>
     */
    boolean hasTransactionId();
    /**
     * <code>required string transactionId = 1;</code>
     */
    String getTransactionId();
    /**
     * <code>required string transactionId = 1;</code>
     */
    com.google.protobuf.ByteString
        getTransactionIdBytes();

    /**
     * <code>required int32 startLevel = 2;</code>
     */
    boolean hasStartLevel();
    /**
     * <code>required int32 startLevel = 2;</code>
     */
    int getStartLevel();
  }
  /**
   * Protobuf type {@code com.ctrip.framework.dal.models.Transaction}
   */
  public static final class Transaction extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.ctrip.framework.dal.models.Transaction)
      TransactionOrBuilder {
    // Use Transaction.newBuilder() to construct.
    private Transaction(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Transaction(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Transaction defaultInstance;
    public static Transaction getDefaultInstance() {
      return defaultInstance;
    }

    public Transaction getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Transaction(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              transactionId_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              startLevel_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DalModels.internal_static_com_ctrip_framework_dal_models_Transaction_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DalModels.internal_static_com_ctrip_framework_dal_models_Transaction_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Transaction.class, Builder.class);
    }

    public static com.google.protobuf.Parser<Transaction> PARSER =
        new com.google.protobuf.AbstractParser<Transaction>() {
      public Transaction parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Transaction(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<Transaction> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TRANSACTIONID_FIELD_NUMBER = 1;
    private Object transactionId_;
    /**
     * <code>required string transactionId = 1;</code>
     */
    public boolean hasTransactionId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string transactionId = 1;</code>
     */
    public String getTransactionId() {
      Object ref = transactionId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          transactionId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string transactionId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTransactionIdBytes() {
      Object ref = transactionId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        transactionId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STARTLEVEL_FIELD_NUMBER = 2;
    private int startLevel_;
    /**
     * <code>required int32 startLevel = 2;</code>
     */
    public boolean hasStartLevel() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 startLevel = 2;</code>
     */
    public int getStartLevel() {
      return startLevel_;
    }

    private void initFields() {
      transactionId_ = "";
      startLevel_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasTransactionId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStartLevel()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getTransactionIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, startLevel_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getTransactionIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, startLevel_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Transaction parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Transaction parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Transaction parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Transaction parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Transaction parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Transaction parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Transaction parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Transaction parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Transaction parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Transaction parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Transaction prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.ctrip.framework.dal.models.Transaction}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.ctrip.framework.dal.models.Transaction)
        TransactionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DalModels.internal_static_com_ctrip_framework_dal_models_Transaction_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DalModels.internal_static_com_ctrip_framework_dal_models_Transaction_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Transaction.class, Builder.class);
      }

      // Construct using com.ctrip.framework.dal.models.DalModels.Transaction.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        transactionId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        startLevel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DalModels.internal_static_com_ctrip_framework_dal_models_Transaction_descriptor;
      }

      public Transaction getDefaultInstanceForType() {
        return Transaction.getDefaultInstance();
      }

      public Transaction build() {
        Transaction result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Transaction buildPartial() {
        Transaction result = new Transaction(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.transactionId_ = transactionId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.startLevel_ = startLevel_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Transaction) {
          return mergeFrom((Transaction)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Transaction other) {
        if (other == Transaction.getDefaultInstance()) return this;
        if (other.hasTransactionId()) {
          bitField0_ |= 0x00000001;
          transactionId_ = other.transactionId_;
          onChanged();
        }
        if (other.hasStartLevel()) {
          setStartLevel(other.getStartLevel());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTransactionId()) {
          
          return false;
        }
        if (!hasStartLevel()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Transaction parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Transaction) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private Object transactionId_ = "";
      /**
       * <code>required string transactionId = 1;</code>
       */
      public boolean hasTransactionId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string transactionId = 1;</code>
       */
      public String getTransactionId() {
        Object ref = transactionId_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            transactionId_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>required string transactionId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTransactionIdBytes() {
        Object ref = transactionId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          transactionId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string transactionId = 1;</code>
       */
      public Builder setTransactionId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        transactionId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string transactionId = 1;</code>
       */
      public Builder clearTransactionId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        transactionId_ = getDefaultInstance().getTransactionId();
        onChanged();
        return this;
      }
      /**
       * <code>required string transactionId = 1;</code>
       */
      public Builder setTransactionIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        transactionId_ = value;
        onChanged();
        return this;
      }

      private int startLevel_ ;
      /**
       * <code>required int32 startLevel = 2;</code>
       */
      public boolean hasStartLevel() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 startLevel = 2;</code>
       */
      public int getStartLevel() {
        return startLevel_;
      }
      /**
       * <code>required int32 startLevel = 2;</code>
       */
      public Builder setStartLevel(int value) {
        bitField0_ |= 0x00000002;
        startLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 startLevel = 2;</code>
       */
      public Builder clearStartLevel() {
        bitField0_ = (bitField0_ & ~0x00000002);
        startLevel_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.ctrip.framework.dal.models.Transaction)
    }

    static {
      defaultInstance = new Transaction(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.ctrip.framework.dal.models.Transaction)
  }

  public interface RequestMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.ctrip.framework.dal.models.RequestMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional bool master = 1;</code>
     */
    boolean hasMaster();
    /**
     * <code>optional bool master = 1;</code>
     */
    boolean getMaster();

    /**
     * <code>optional string sql = 2;</code>
     */
    boolean hasSql();
    /**
     * <code>optional string sql = 2;</code>
     */
    String getSql();
    /**
     * <code>optional string sql = 2;</code>
     */
    com.google.protobuf.ByteString
        getSqlBytes();

    /**
     * <code>optional string callString = 3;</code>
     */
    boolean hasCallString();
    /**
     * <code>optional string callString = 3;</code>
     */
    String getCallString();
    /**
     * <code>optional string callString = 3;</code>
     */
    com.google.protobuf.ByteString
        getCallStringBytes();

    /**
     * <code>repeated string sqls = 4;</code>
     */
    com.google.protobuf.ProtocolStringList
        getSqlsList();
    /**
     * <code>repeated string sqls = 4;</code>
     */
    int getSqlsCount();
    /**
     * <code>repeated string sqls = 4;</code>
     */
    String getSqls(int index);
    /**
     * <code>repeated string sqls = 4;</code>
     */
    com.google.protobuf.ByteString
        getSqlsBytes(int index);

    /**
     * <code>optional .com.ctrip.framework.dal.models.SqlParameters parameters = 5;</code>
     */
    boolean hasParameters();
    /**
     * <code>optional .com.ctrip.framework.dal.models.SqlParameters parameters = 5;</code>
     */
    SqlParameters getParameters();
    /**
     * <code>optional .com.ctrip.framework.dal.models.SqlParameters parameters = 5;</code>
     */
    SqlParametersOrBuilder getParametersOrBuilder();

    /**
     * <code>repeated .com.ctrip.framework.dal.models.SqlParameters parametersList = 6;</code>
     */
    java.util.List<SqlParameters>
        getParametersListList();
    /**
     * <code>repeated .com.ctrip.framework.dal.models.SqlParameters parametersList = 6;</code>
     */
    SqlParameters getParametersList(int index);
    /**
     * <code>repeated .com.ctrip.framework.dal.models.SqlParameters parametersList = 6;</code>
     */
    int getParametersListCount();
    /**
     * <code>repeated .com.ctrip.framework.dal.models.SqlParameters parametersList = 6;</code>
     */
    java.util.List<? extends SqlParametersOrBuilder>
        getParametersListOrBuilderList();
    /**
     * <code>repeated .com.ctrip.framework.dal.models.SqlParameters parametersList = 6;</code>
     */
    SqlParametersOrBuilder getParametersListOrBuilder(
            int index);

    /**
     * <code>optional int32 querySize = 7;</code>
     */
    boolean hasQuerySize();
    /**
     * <code>optional int32 querySize = 7;</code>
     */
    int getQuerySize();

    /**
     * <code>optional int32 fetchSize = 8;</code>
     */
    boolean hasFetchSize();
    /**
     * <code>optional int32 fetchSize = 8;</code>
     */
    int getFetchSize();
  }
  /**
   * Protobuf type {@code com.ctrip.framework.dal.models.RequestMessage}
   */
  public static final class RequestMessage extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.ctrip.framework.dal.models.RequestMessage)
      RequestMessageOrBuilder {
    // Use RequestMessage.newBuilder() to construct.
    private RequestMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RequestMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RequestMessage defaultInstance;
    public static RequestMessage getDefaultInstance() {
      return defaultInstance;
    }

    public RequestMessage getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RequestMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              master_ = input.readBool();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              sql_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              callString_ = bs;
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                sqls_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000008;
              }
              sqls_.add(bs);
              break;
            }
            case 42: {
              SqlParameters.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = parameters_.toBuilder();
              }
              parameters_ = input.readMessage(SqlParameters.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(parameters_);
                parameters_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                parametersList_ = new java.util.ArrayList<SqlParameters>();
                mutable_bitField0_ |= 0x00000020;
              }
              parametersList_.add(input.readMessage(SqlParameters.PARSER, extensionRegistry));
              break;
            }
            case 56: {
              bitField0_ |= 0x00000010;
              querySize_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000020;
              fetchSize_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          sqls_ = sqls_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          parametersList_ = java.util.Collections.unmodifiableList(parametersList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DalModels.internal_static_com_ctrip_framework_dal_models_RequestMessage_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DalModels.internal_static_com_ctrip_framework_dal_models_RequestMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              RequestMessage.class, Builder.class);
    }

    public static com.google.protobuf.Parser<RequestMessage> PARSER =
        new com.google.protobuf.AbstractParser<RequestMessage>() {
      public RequestMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RequestMessage(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<RequestMessage> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int MASTER_FIELD_NUMBER = 1;
    private boolean master_;
    /**
     * <code>optional bool master = 1;</code>
     */
    public boolean hasMaster() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bool master = 1;</code>
     */
    public boolean getMaster() {
      return master_;
    }

    public static final int SQL_FIELD_NUMBER = 2;
    private Object sql_;
    /**
     * <code>optional string sql = 2;</code>
     */
    public boolean hasSql() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string sql = 2;</code>
     */
    public String getSql() {
      Object ref = sql_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          sql_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string sql = 2;</code>
     */
    public com.google.protobuf.ByteString
        getSqlBytes() {
      Object ref = sql_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        sql_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CALLSTRING_FIELD_NUMBER = 3;
    private Object callString_;
    /**
     * <code>optional string callString = 3;</code>
     */
    public boolean hasCallString() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string callString = 3;</code>
     */
    public String getCallString() {
      Object ref = callString_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          callString_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string callString = 3;</code>
     */
    public com.google.protobuf.ByteString
        getCallStringBytes() {
      Object ref = callString_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        callString_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SQLS_FIELD_NUMBER = 4;
    private com.google.protobuf.LazyStringList sqls_;
    /**
     * <code>repeated string sqls = 4;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getSqlsList() {
      return sqls_;
    }
    /**
     * <code>repeated string sqls = 4;</code>
     */
    public int getSqlsCount() {
      return sqls_.size();
    }
    /**
     * <code>repeated string sqls = 4;</code>
     */
    public String getSqls(int index) {
      return sqls_.get(index);
    }
    /**
     * <code>repeated string sqls = 4;</code>
     */
    public com.google.protobuf.ByteString
        getSqlsBytes(int index) {
      return sqls_.getByteString(index);
    }

    public static final int PARAMETERS_FIELD_NUMBER = 5;
    private SqlParameters parameters_;
    /**
     * <code>optional .com.ctrip.framework.dal.models.SqlParameters parameters = 5;</code>
     */
    public boolean hasParameters() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .com.ctrip.framework.dal.models.SqlParameters parameters = 5;</code>
     */
    public SqlParameters getParameters() {
      return parameters_;
    }
    /**
     * <code>optional .com.ctrip.framework.dal.models.SqlParameters parameters = 5;</code>
     */
    public SqlParametersOrBuilder getParametersOrBuilder() {
      return parameters_;
    }

    public static final int PARAMETERSLIST_FIELD_NUMBER = 6;
    private java.util.List<SqlParameters> parametersList_;
    /**
     * <code>repeated .com.ctrip.framework.dal.models.SqlParameters parametersList = 6;</code>
     */
    public java.util.List<SqlParameters> getParametersListList() {
      return parametersList_;
    }
    /**
     * <code>repeated .com.ctrip.framework.dal.models.SqlParameters parametersList = 6;</code>
     */
    public java.util.List<? extends SqlParametersOrBuilder>
        getParametersListOrBuilderList() {
      return parametersList_;
    }
    /**
     * <code>repeated .com.ctrip.framework.dal.models.SqlParameters parametersList = 6;</code>
     */
    public int getParametersListCount() {
      return parametersList_.size();
    }
    /**
     * <code>repeated .com.ctrip.framework.dal.models.SqlParameters parametersList = 6;</code>
     */
    public SqlParameters getParametersList(int index) {
      return parametersList_.get(index);
    }
    /**
     * <code>repeated .com.ctrip.framework.dal.models.SqlParameters parametersList = 6;</code>
     */
    public SqlParametersOrBuilder getParametersListOrBuilder(
        int index) {
      return parametersList_.get(index);
    }

    public static final int QUERYSIZE_FIELD_NUMBER = 7;
    private int querySize_;
    /**
     * <code>optional int32 querySize = 7;</code>
     */
    public boolean hasQuerySize() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 querySize = 7;</code>
     */
    public int getQuerySize() {
      return querySize_;
    }

    public static final int FETCHSIZE_FIELD_NUMBER = 8;
    private int fetchSize_;
    /**
     * <code>optional int32 fetchSize = 8;</code>
     */
    public boolean hasFetchSize() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 fetchSize = 8;</code>
     */
    public int getFetchSize() {
      return fetchSize_;
    }

    private void initFields() {
      master_ = false;
      sql_ = "";
      callString_ = "";
      sqls_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      parameters_ = SqlParameters.getDefaultInstance();
      parametersList_ = java.util.Collections.emptyList();
      querySize_ = 0;
      fetchSize_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (hasParameters()) {
        if (!getParameters().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getParametersListCount(); i++) {
        if (!getParametersList(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, master_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getSqlBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getCallStringBytes());
      }
      for (int i = 0; i < sqls_.size(); i++) {
        output.writeBytes(4, sqls_.getByteString(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(5, parameters_);
      }
      for (int i = 0; i < parametersList_.size(); i++) {
        output.writeMessage(6, parametersList_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(7, querySize_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(8, fetchSize_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, master_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getSqlBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getCallStringBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < sqls_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(sqls_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getSqlsList().size();
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, parameters_);
      }
      for (int i = 0; i < parametersList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, parametersList_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, querySize_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, fetchSize_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static RequestMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RequestMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RequestMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RequestMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RequestMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static RequestMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static RequestMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static RequestMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static RequestMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static RequestMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(RequestMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.ctrip.framework.dal.models.RequestMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.ctrip.framework.dal.models.RequestMessage)
        RequestMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DalModels.internal_static_com_ctrip_framework_dal_models_RequestMessage_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DalModels.internal_static_com_ctrip_framework_dal_models_RequestMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                RequestMessage.class, Builder.class);
      }

      // Construct using com.ctrip.framework.dal.models.DalModels.RequestMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getParametersFieldBuilder();
          getParametersListFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        master_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        sql_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        callString_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        sqls_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (parametersBuilder_ == null) {
          parameters_ = SqlParameters.getDefaultInstance();
        } else {
          parametersBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (parametersListBuilder_ == null) {
          parametersList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          parametersListBuilder_.clear();
        }
        querySize_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        fetchSize_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DalModels.internal_static_com_ctrip_framework_dal_models_RequestMessage_descriptor;
      }

      public RequestMessage getDefaultInstanceForType() {
        return RequestMessage.getDefaultInstance();
      }

      public RequestMessage build() {
        RequestMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public RequestMessage buildPartial() {
        RequestMessage result = new RequestMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.master_ = master_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.sql_ = sql_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.callString_ = callString_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          sqls_ = sqls_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.sqls_ = sqls_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        if (parametersBuilder_ == null) {
          result.parameters_ = parameters_;
        } else {
          result.parameters_ = parametersBuilder_.build();
        }
        if (parametersListBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            parametersList_ = java.util.Collections.unmodifiableList(parametersList_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.parametersList_ = parametersList_;
        } else {
          result.parametersList_ = parametersListBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000010;
        }
        result.querySize_ = querySize_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000020;
        }
        result.fetchSize_ = fetchSize_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof RequestMessage) {
          return mergeFrom((RequestMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(RequestMessage other) {
        if (other == RequestMessage.getDefaultInstance()) return this;
        if (other.hasMaster()) {
          setMaster(other.getMaster());
        }
        if (other.hasSql()) {
          bitField0_ |= 0x00000002;
          sql_ = other.sql_;
          onChanged();
        }
        if (other.hasCallString()) {
          bitField0_ |= 0x00000004;
          callString_ = other.callString_;
          onChanged();
        }
        if (!other.sqls_.isEmpty()) {
          if (sqls_.isEmpty()) {
            sqls_ = other.sqls_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureSqlsIsMutable();
            sqls_.addAll(other.sqls_);
          }
          onChanged();
        }
        if (other.hasParameters()) {
          mergeParameters(other.getParameters());
        }
        if (parametersListBuilder_ == null) {
          if (!other.parametersList_.isEmpty()) {
            if (parametersList_.isEmpty()) {
              parametersList_ = other.parametersList_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureParametersListIsMutable();
              parametersList_.addAll(other.parametersList_);
            }
            onChanged();
          }
        } else {
          if (!other.parametersList_.isEmpty()) {
            if (parametersListBuilder_.isEmpty()) {
              parametersListBuilder_.dispose();
              parametersListBuilder_ = null;
              parametersList_ = other.parametersList_;
              bitField0_ = (bitField0_ & ~0x00000020);
              parametersListBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getParametersListFieldBuilder() : null;
            } else {
              parametersListBuilder_.addAllMessages(other.parametersList_);
            }
          }
        }
        if (other.hasQuerySize()) {
          setQuerySize(other.getQuerySize());
        }
        if (other.hasFetchSize()) {
          setFetchSize(other.getFetchSize());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (hasParameters()) {
          if (!getParameters().isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getParametersListCount(); i++) {
          if (!getParametersList(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        RequestMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (RequestMessage) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private boolean master_ ;
      /**
       * <code>optional bool master = 1;</code>
       */
      public boolean hasMaster() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bool master = 1;</code>
       */
      public boolean getMaster() {
        return master_;
      }
      /**
       * <code>optional bool master = 1;</code>
       */
      public Builder setMaster(boolean value) {
        bitField0_ |= 0x00000001;
        master_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool master = 1;</code>
       */
      public Builder clearMaster() {
        bitField0_ = (bitField0_ & ~0x00000001);
        master_ = false;
        onChanged();
        return this;
      }

      private Object sql_ = "";
      /**
       * <code>optional string sql = 2;</code>
       */
      public boolean hasSql() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string sql = 2;</code>
       */
      public String getSql() {
        Object ref = sql_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            sql_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string sql = 2;</code>
       */
      public com.google.protobuf.ByteString
          getSqlBytes() {
        Object ref = sql_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          sql_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string sql = 2;</code>
       */
      public Builder setSql(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        sql_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string sql = 2;</code>
       */
      public Builder clearSql() {
        bitField0_ = (bitField0_ & ~0x00000002);
        sql_ = getDefaultInstance().getSql();
        onChanged();
        return this;
      }
      /**
       * <code>optional string sql = 2;</code>
       */
      public Builder setSqlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        sql_ = value;
        onChanged();
        return this;
      }

      private Object callString_ = "";
      /**
       * <code>optional string callString = 3;</code>
       */
      public boolean hasCallString() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string callString = 3;</code>
       */
      public String getCallString() {
        Object ref = callString_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            callString_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string callString = 3;</code>
       */
      public com.google.protobuf.ByteString
          getCallStringBytes() {
        Object ref = callString_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          callString_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string callString = 3;</code>
       */
      public Builder setCallString(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        callString_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string callString = 3;</code>
       */
      public Builder clearCallString() {
        bitField0_ = (bitField0_ & ~0x00000004);
        callString_ = getDefaultInstance().getCallString();
        onChanged();
        return this;
      }
      /**
       * <code>optional string callString = 3;</code>
       */
      public Builder setCallStringBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        callString_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList sqls_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureSqlsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          sqls_ = new com.google.protobuf.LazyStringArrayList(sqls_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated string sqls = 4;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getSqlsList() {
        return sqls_.getUnmodifiableView();
      }
      /**
       * <code>repeated string sqls = 4;</code>
       */
      public int getSqlsCount() {
        return sqls_.size();
      }
      /**
       * <code>repeated string sqls = 4;</code>
       */
      public String getSqls(int index) {
        return sqls_.get(index);
      }
      /**
       * <code>repeated string sqls = 4;</code>
       */
      public com.google.protobuf.ByteString
          getSqlsBytes(int index) {
        return sqls_.getByteString(index);
      }
      /**
       * <code>repeated string sqls = 4;</code>
       */
      public Builder setSqls(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSqlsIsMutable();
        sqls_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string sqls = 4;</code>
       */
      public Builder addSqls(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSqlsIsMutable();
        sqls_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string sqls = 4;</code>
       */
      public Builder addAllSqls(
          Iterable<String> values) {
        ensureSqlsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, sqls_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string sqls = 4;</code>
       */
      public Builder clearSqls() {
        sqls_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string sqls = 4;</code>
       */
      public Builder addSqlsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSqlsIsMutable();
        sqls_.add(value);
        onChanged();
        return this;
      }

      private SqlParameters parameters_ = SqlParameters.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          SqlParameters, SqlParameters.Builder, SqlParametersOrBuilder> parametersBuilder_;
      /**
       * <code>optional .com.ctrip.framework.dal.models.SqlParameters parameters = 5;</code>
       */
      public boolean hasParameters() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.SqlParameters parameters = 5;</code>
       */
      public SqlParameters getParameters() {
        if (parametersBuilder_ == null) {
          return parameters_;
        } else {
          return parametersBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.SqlParameters parameters = 5;</code>
       */
      public Builder setParameters(SqlParameters value) {
        if (parametersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          parameters_ = value;
          onChanged();
        } else {
          parametersBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.SqlParameters parameters = 5;</code>
       */
      public Builder setParameters(
          SqlParameters.Builder builderForValue) {
        if (parametersBuilder_ == null) {
          parameters_ = builderForValue.build();
          onChanged();
        } else {
          parametersBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.SqlParameters parameters = 5;</code>
       */
      public Builder mergeParameters(SqlParameters value) {
        if (parametersBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              parameters_ != SqlParameters.getDefaultInstance()) {
            parameters_ =
              SqlParameters.newBuilder(parameters_).mergeFrom(value).buildPartial();
          } else {
            parameters_ = value;
          }
          onChanged();
        } else {
          parametersBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.SqlParameters parameters = 5;</code>
       */
      public Builder clearParameters() {
        if (parametersBuilder_ == null) {
          parameters_ = SqlParameters.getDefaultInstance();
          onChanged();
        } else {
          parametersBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.SqlParameters parameters = 5;</code>
       */
      public SqlParameters.Builder getParametersBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getParametersFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.SqlParameters parameters = 5;</code>
       */
      public SqlParametersOrBuilder getParametersOrBuilder() {
        if (parametersBuilder_ != null) {
          return parametersBuilder_.getMessageOrBuilder();
        } else {
          return parameters_;
        }
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.SqlParameters parameters = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          SqlParameters, SqlParameters.Builder, SqlParametersOrBuilder>
          getParametersFieldBuilder() {
        if (parametersBuilder_ == null) {
          parametersBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              SqlParameters, SqlParameters.Builder, SqlParametersOrBuilder>(
                  getParameters(),
                  getParentForChildren(),
                  isClean());
          parameters_ = null;
        }
        return parametersBuilder_;
      }

      private java.util.List<SqlParameters> parametersList_ =
        java.util.Collections.emptyList();
      private void ensureParametersListIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          parametersList_ = new java.util.ArrayList<SqlParameters>(parametersList_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          SqlParameters, SqlParameters.Builder, SqlParametersOrBuilder> parametersListBuilder_;

      /**
       * <code>repeated .com.ctrip.framework.dal.models.SqlParameters parametersList = 6;</code>
       */
      public java.util.List<SqlParameters> getParametersListList() {
        if (parametersListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(parametersList_);
        } else {
          return parametersListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.SqlParameters parametersList = 6;</code>
       */
      public int getParametersListCount() {
        if (parametersListBuilder_ == null) {
          return parametersList_.size();
        } else {
          return parametersListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.SqlParameters parametersList = 6;</code>
       */
      public SqlParameters getParametersList(int index) {
        if (parametersListBuilder_ == null) {
          return parametersList_.get(index);
        } else {
          return parametersListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.SqlParameters parametersList = 6;</code>
       */
      public Builder setParametersList(
          int index, SqlParameters value) {
        if (parametersListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParametersListIsMutable();
          parametersList_.set(index, value);
          onChanged();
        } else {
          parametersListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.SqlParameters parametersList = 6;</code>
       */
      public Builder setParametersList(
          int index, SqlParameters.Builder builderForValue) {
        if (parametersListBuilder_ == null) {
          ensureParametersListIsMutable();
          parametersList_.set(index, builderForValue.build());
          onChanged();
        } else {
          parametersListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.SqlParameters parametersList = 6;</code>
       */
      public Builder addParametersList(SqlParameters value) {
        if (parametersListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParametersListIsMutable();
          parametersList_.add(value);
          onChanged();
        } else {
          parametersListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.SqlParameters parametersList = 6;</code>
       */
      public Builder addParametersList(
          int index, SqlParameters value) {
        if (parametersListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParametersListIsMutable();
          parametersList_.add(index, value);
          onChanged();
        } else {
          parametersListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.SqlParameters parametersList = 6;</code>
       */
      public Builder addParametersList(
          SqlParameters.Builder builderForValue) {
        if (parametersListBuilder_ == null) {
          ensureParametersListIsMutable();
          parametersList_.add(builderForValue.build());
          onChanged();
        } else {
          parametersListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.SqlParameters parametersList = 6;</code>
       */
      public Builder addParametersList(
          int index, SqlParameters.Builder builderForValue) {
        if (parametersListBuilder_ == null) {
          ensureParametersListIsMutable();
          parametersList_.add(index, builderForValue.build());
          onChanged();
        } else {
          parametersListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.SqlParameters parametersList = 6;</code>
       */
      public Builder addAllParametersList(
          Iterable<? extends SqlParameters> values) {
        if (parametersListBuilder_ == null) {
          ensureParametersListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, parametersList_);
          onChanged();
        } else {
          parametersListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.SqlParameters parametersList = 6;</code>
       */
      public Builder clearParametersList() {
        if (parametersListBuilder_ == null) {
          parametersList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          parametersListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.SqlParameters parametersList = 6;</code>
       */
      public Builder removeParametersList(int index) {
        if (parametersListBuilder_ == null) {
          ensureParametersListIsMutable();
          parametersList_.remove(index);
          onChanged();
        } else {
          parametersListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.SqlParameters parametersList = 6;</code>
       */
      public SqlParameters.Builder getParametersListBuilder(
          int index) {
        return getParametersListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.SqlParameters parametersList = 6;</code>
       */
      public SqlParametersOrBuilder getParametersListOrBuilder(
          int index) {
        if (parametersListBuilder_ == null) {
          return parametersList_.get(index);  } else {
          return parametersListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.SqlParameters parametersList = 6;</code>
       */
      public java.util.List<? extends SqlParametersOrBuilder>
           getParametersListOrBuilderList() {
        if (parametersListBuilder_ != null) {
          return parametersListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(parametersList_);
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.SqlParameters parametersList = 6;</code>
       */
      public SqlParameters.Builder addParametersListBuilder() {
        return getParametersListFieldBuilder().addBuilder(
            SqlParameters.getDefaultInstance());
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.SqlParameters parametersList = 6;</code>
       */
      public SqlParameters.Builder addParametersListBuilder(
          int index) {
        return getParametersListFieldBuilder().addBuilder(
            index, SqlParameters.getDefaultInstance());
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.SqlParameters parametersList = 6;</code>
       */
      public java.util.List<SqlParameters.Builder>
           getParametersListBuilderList() {
        return getParametersListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          SqlParameters, SqlParameters.Builder, SqlParametersOrBuilder>
          getParametersListFieldBuilder() {
        if (parametersListBuilder_ == null) {
          parametersListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              SqlParameters, SqlParameters.Builder, SqlParametersOrBuilder>(
                  parametersList_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          parametersList_ = null;
        }
        return parametersListBuilder_;
      }

      private int querySize_ ;
      /**
       * <code>optional int32 querySize = 7;</code>
       */
      public boolean hasQuerySize() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 querySize = 7;</code>
       */
      public int getQuerySize() {
        return querySize_;
      }
      /**
       * <code>optional int32 querySize = 7;</code>
       */
      public Builder setQuerySize(int value) {
        bitField0_ |= 0x00000040;
        querySize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 querySize = 7;</code>
       */
      public Builder clearQuerySize() {
        bitField0_ = (bitField0_ & ~0x00000040);
        querySize_ = 0;
        onChanged();
        return this;
      }

      private int fetchSize_ ;
      /**
       * <code>optional int32 fetchSize = 8;</code>
       */
      public boolean hasFetchSize() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 fetchSize = 8;</code>
       */
      public int getFetchSize() {
        return fetchSize_;
      }
      /**
       * <code>optional int32 fetchSize = 8;</code>
       */
      public Builder setFetchSize(int value) {
        bitField0_ |= 0x00000080;
        fetchSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 fetchSize = 8;</code>
       */
      public Builder clearFetchSize() {
        bitField0_ = (bitField0_ & ~0x00000080);
        fetchSize_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.ctrip.framework.dal.models.RequestMessage)
    }

    static {
      defaultInstance = new RequestMessage(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.ctrip.framework.dal.models.RequestMessage)
  }

  public interface RecordOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.ctrip.framework.dal.models.Record)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .com.ctrip.framework.dal.models.AvailableType fields = 1;</code>
     */
    java.util.List<AvailableType>
        getFieldsList();
    /**
     * <code>repeated .com.ctrip.framework.dal.models.AvailableType fields = 1;</code>
     */
    AvailableType getFields(int index);
    /**
     * <code>repeated .com.ctrip.framework.dal.models.AvailableType fields = 1;</code>
     */
    int getFieldsCount();
    /**
     * <code>repeated .com.ctrip.framework.dal.models.AvailableType fields = 1;</code>
     */
    java.util.List<? extends AvailableTypeOrBuilder>
        getFieldsOrBuilderList();
    /**
     * <code>repeated .com.ctrip.framework.dal.models.AvailableType fields = 1;</code>
     */
    AvailableTypeOrBuilder getFieldsOrBuilder(
            int index);
  }
  /**
   * Protobuf type {@code com.ctrip.framework.dal.models.Record}
   */
  public static final class Record extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.ctrip.framework.dal.models.Record)
      RecordOrBuilder {
    // Use Record.newBuilder() to construct.
    private Record(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Record(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Record defaultInstance;
    public static Record getDefaultInstance() {
      return defaultInstance;
    }

    public Record getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Record(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                fields_ = new java.util.ArrayList<AvailableType>();
                mutable_bitField0_ |= 0x00000001;
              }
              fields_.add(input.readMessage(AvailableType.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          fields_ = java.util.Collections.unmodifiableList(fields_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DalModels.internal_static_com_ctrip_framework_dal_models_Record_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DalModels.internal_static_com_ctrip_framework_dal_models_Record_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Record.class, Builder.class);
    }

    public static com.google.protobuf.Parser<Record> PARSER =
        new com.google.protobuf.AbstractParser<Record>() {
      public Record parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Record(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<Record> getParserForType() {
      return PARSER;
    }

    public static final int FIELDS_FIELD_NUMBER = 1;
    private java.util.List<AvailableType> fields_;
    /**
     * <code>repeated .com.ctrip.framework.dal.models.AvailableType fields = 1;</code>
     */
    public java.util.List<AvailableType> getFieldsList() {
      return fields_;
    }
    /**
     * <code>repeated .com.ctrip.framework.dal.models.AvailableType fields = 1;</code>
     */
    public java.util.List<? extends AvailableTypeOrBuilder>
        getFieldsOrBuilderList() {
      return fields_;
    }
    /**
     * <code>repeated .com.ctrip.framework.dal.models.AvailableType fields = 1;</code>
     */
    public int getFieldsCount() {
      return fields_.size();
    }
    /**
     * <code>repeated .com.ctrip.framework.dal.models.AvailableType fields = 1;</code>
     */
    public AvailableType getFields(int index) {
      return fields_.get(index);
    }
    /**
     * <code>repeated .com.ctrip.framework.dal.models.AvailableType fields = 1;</code>
     */
    public AvailableTypeOrBuilder getFieldsOrBuilder(
        int index) {
      return fields_.get(index);
    }

    private void initFields() {
      fields_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getFieldsCount(); i++) {
        if (!getFields(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < fields_.size(); i++) {
        output.writeMessage(1, fields_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < fields_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, fields_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Record parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Record parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Record parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Record parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Record parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Record parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Record parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Record parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Record parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Record parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Record prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.ctrip.framework.dal.models.Record}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.ctrip.framework.dal.models.Record)
        RecordOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DalModels.internal_static_com_ctrip_framework_dal_models_Record_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DalModels.internal_static_com_ctrip_framework_dal_models_Record_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Record.class, Builder.class);
      }

      // Construct using com.ctrip.framework.dal.models.DalModels.Record.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFieldsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (fieldsBuilder_ == null) {
          fields_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          fieldsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DalModels.internal_static_com_ctrip_framework_dal_models_Record_descriptor;
      }

      public Record getDefaultInstanceForType() {
        return Record.getDefaultInstance();
      }

      public Record build() {
        Record result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Record buildPartial() {
        Record result = new Record(this);
        int from_bitField0_ = bitField0_;
        if (fieldsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            fields_ = java.util.Collections.unmodifiableList(fields_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.fields_ = fields_;
        } else {
          result.fields_ = fieldsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Record) {
          return mergeFrom((Record)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Record other) {
        if (other == Record.getDefaultInstance()) return this;
        if (fieldsBuilder_ == null) {
          if (!other.fields_.isEmpty()) {
            if (fields_.isEmpty()) {
              fields_ = other.fields_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureFieldsIsMutable();
              fields_.addAll(other.fields_);
            }
            onChanged();
          }
        } else {
          if (!other.fields_.isEmpty()) {
            if (fieldsBuilder_.isEmpty()) {
              fieldsBuilder_.dispose();
              fieldsBuilder_ = null;
              fields_ = other.fields_;
              bitField0_ = (bitField0_ & ~0x00000001);
              fieldsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFieldsFieldBuilder() : null;
            } else {
              fieldsBuilder_.addAllMessages(other.fields_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getFieldsCount(); i++) {
          if (!getFields(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Record parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Record) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<AvailableType> fields_ =
        java.util.Collections.emptyList();
      private void ensureFieldsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          fields_ = new java.util.ArrayList<AvailableType>(fields_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          AvailableType, AvailableType.Builder, AvailableTypeOrBuilder> fieldsBuilder_;

      /**
       * <code>repeated .com.ctrip.framework.dal.models.AvailableType fields = 1;</code>
       */
      public java.util.List<AvailableType> getFieldsList() {
        if (fieldsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fields_);
        } else {
          return fieldsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.AvailableType fields = 1;</code>
       */
      public int getFieldsCount() {
        if (fieldsBuilder_ == null) {
          return fields_.size();
        } else {
          return fieldsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.AvailableType fields = 1;</code>
       */
      public AvailableType getFields(int index) {
        if (fieldsBuilder_ == null) {
          return fields_.get(index);
        } else {
          return fieldsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.AvailableType fields = 1;</code>
       */
      public Builder setFields(
          int index, AvailableType value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.set(index, value);
          onChanged();
        } else {
          fieldsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.AvailableType fields = 1;</code>
       */
      public Builder setFields(
          int index, AvailableType.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.set(index, builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.AvailableType fields = 1;</code>
       */
      public Builder addFields(AvailableType value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.add(value);
          onChanged();
        } else {
          fieldsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.AvailableType fields = 1;</code>
       */
      public Builder addFields(
          int index, AvailableType value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.add(index, value);
          onChanged();
        } else {
          fieldsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.AvailableType fields = 1;</code>
       */
      public Builder addFields(
          AvailableType.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.add(builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.AvailableType fields = 1;</code>
       */
      public Builder addFields(
          int index, AvailableType.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.add(index, builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.AvailableType fields = 1;</code>
       */
      public Builder addAllFields(
          Iterable<? extends AvailableType> values) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, fields_);
          onChanged();
        } else {
          fieldsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.AvailableType fields = 1;</code>
       */
      public Builder clearFields() {
        if (fieldsBuilder_ == null) {
          fields_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          fieldsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.AvailableType fields = 1;</code>
       */
      public Builder removeFields(int index) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.remove(index);
          onChanged();
        } else {
          fieldsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.AvailableType fields = 1;</code>
       */
      public AvailableType.Builder getFieldsBuilder(
          int index) {
        return getFieldsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.AvailableType fields = 1;</code>
       */
      public AvailableTypeOrBuilder getFieldsOrBuilder(
          int index) {
        if (fieldsBuilder_ == null) {
          return fields_.get(index);  } else {
          return fieldsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.AvailableType fields = 1;</code>
       */
      public java.util.List<? extends AvailableTypeOrBuilder>
           getFieldsOrBuilderList() {
        if (fieldsBuilder_ != null) {
          return fieldsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fields_);
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.AvailableType fields = 1;</code>
       */
      public AvailableType.Builder addFieldsBuilder() {
        return getFieldsFieldBuilder().addBuilder(
            AvailableType.getDefaultInstance());
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.AvailableType fields = 1;</code>
       */
      public AvailableType.Builder addFieldsBuilder(
          int index) {
        return getFieldsFieldBuilder().addBuilder(
            index, AvailableType.getDefaultInstance());
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.AvailableType fields = 1;</code>
       */
      public java.util.List<AvailableType.Builder>
           getFieldsBuilderList() {
        return getFieldsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          AvailableType, AvailableType.Builder, AvailableTypeOrBuilder>
          getFieldsFieldBuilder() {
        if (fieldsBuilder_ == null) {
          fieldsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              AvailableType, AvailableType.Builder, AvailableTypeOrBuilder>(
                  fields_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          fields_ = null;
        }
        return fieldsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.ctrip.framework.dal.models.Record)
    }

    static {
      defaultInstance = new Record(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.ctrip.framework.dal.models.Record)
  }

  public interface InnerResultSetOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.ctrip.framework.dal.models.InnerResultSet)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required bool last = 1;</code>
     */
    boolean hasLast();
    /**
     * <code>required bool last = 1;</code>
     */
    boolean getLast();

    /**
     * <code>repeated .com.ctrip.framework.dal.models.Record records = 2;</code>
     */
    java.util.List<Record>
        getRecordsList();
    /**
     * <code>repeated .com.ctrip.framework.dal.models.Record records = 2;</code>
     */
    Record getRecords(int index);
    /**
     * <code>repeated .com.ctrip.framework.dal.models.Record records = 2;</code>
     */
    int getRecordsCount();
    /**
     * <code>repeated .com.ctrip.framework.dal.models.Record records = 2;</code>
     */
    java.util.List<? extends RecordOrBuilder>
        getRecordsOrBuilderList();
    /**
     * <code>repeated .com.ctrip.framework.dal.models.Record records = 2;</code>
     */
    RecordOrBuilder getRecordsOrBuilder(
            int index);
  }
  /**
   * Protobuf type {@code com.ctrip.framework.dal.models.InnerResultSet}
   */
  public static final class InnerResultSet extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.ctrip.framework.dal.models.InnerResultSet)
      InnerResultSetOrBuilder {
    // Use InnerResultSet.newBuilder() to construct.
    private InnerResultSet(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private InnerResultSet(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final InnerResultSet defaultInstance;
    public static InnerResultSet getDefaultInstance() {
      return defaultInstance;
    }

    public InnerResultSet getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private InnerResultSet(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              last_ = input.readBool();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                records_ = new java.util.ArrayList<Record>();
                mutable_bitField0_ |= 0x00000002;
              }
              records_.add(input.readMessage(Record.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          records_ = java.util.Collections.unmodifiableList(records_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DalModels.internal_static_com_ctrip_framework_dal_models_InnerResultSet_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DalModels.internal_static_com_ctrip_framework_dal_models_InnerResultSet_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              InnerResultSet.class, Builder.class);
    }

    public static com.google.protobuf.Parser<InnerResultSet> PARSER =
        new com.google.protobuf.AbstractParser<InnerResultSet>() {
      public InnerResultSet parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new InnerResultSet(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<InnerResultSet> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int LAST_FIELD_NUMBER = 1;
    private boolean last_;
    /**
     * <code>required bool last = 1;</code>
     */
    public boolean hasLast() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bool last = 1;</code>
     */
    public boolean getLast() {
      return last_;
    }

    public static final int RECORDS_FIELD_NUMBER = 2;
    private java.util.List<Record> records_;
    /**
     * <code>repeated .com.ctrip.framework.dal.models.Record records = 2;</code>
     */
    public java.util.List<Record> getRecordsList() {
      return records_;
    }
    /**
     * <code>repeated .com.ctrip.framework.dal.models.Record records = 2;</code>
     */
    public java.util.List<? extends RecordOrBuilder>
        getRecordsOrBuilderList() {
      return records_;
    }
    /**
     * <code>repeated .com.ctrip.framework.dal.models.Record records = 2;</code>
     */
    public int getRecordsCount() {
      return records_.size();
    }
    /**
     * <code>repeated .com.ctrip.framework.dal.models.Record records = 2;</code>
     */
    public Record getRecords(int index) {
      return records_.get(index);
    }
    /**
     * <code>repeated .com.ctrip.framework.dal.models.Record records = 2;</code>
     */
    public RecordOrBuilder getRecordsOrBuilder(
        int index) {
      return records_.get(index);
    }

    private void initFields() {
      last_ = false;
      records_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasLast()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getRecordsCount(); i++) {
        if (!getRecords(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, last_);
      }
      for (int i = 0; i < records_.size(); i++) {
        output.writeMessage(2, records_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, last_);
      }
      for (int i = 0; i < records_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, records_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static InnerResultSet parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static InnerResultSet parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static InnerResultSet parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static InnerResultSet parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static InnerResultSet parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static InnerResultSet parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static InnerResultSet parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static InnerResultSet parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static InnerResultSet parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static InnerResultSet parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(InnerResultSet prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.ctrip.framework.dal.models.InnerResultSet}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.ctrip.framework.dal.models.InnerResultSet)
        InnerResultSetOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DalModels.internal_static_com_ctrip_framework_dal_models_InnerResultSet_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DalModels.internal_static_com_ctrip_framework_dal_models_InnerResultSet_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                InnerResultSet.class, Builder.class);
      }

      // Construct using com.ctrip.framework.dal.models.DalModels.InnerResultSet.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRecordsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        last_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (recordsBuilder_ == null) {
          records_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          recordsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DalModels.internal_static_com_ctrip_framework_dal_models_InnerResultSet_descriptor;
      }

      public InnerResultSet getDefaultInstanceForType() {
        return InnerResultSet.getDefaultInstance();
      }

      public InnerResultSet build() {
        InnerResultSet result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public InnerResultSet buildPartial() {
        InnerResultSet result = new InnerResultSet(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.last_ = last_;
        if (recordsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            records_ = java.util.Collections.unmodifiableList(records_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.records_ = records_;
        } else {
          result.records_ = recordsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof InnerResultSet) {
          return mergeFrom((InnerResultSet)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(InnerResultSet other) {
        if (other == InnerResultSet.getDefaultInstance()) return this;
        if (other.hasLast()) {
          setLast(other.getLast());
        }
        if (recordsBuilder_ == null) {
          if (!other.records_.isEmpty()) {
            if (records_.isEmpty()) {
              records_ = other.records_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureRecordsIsMutable();
              records_.addAll(other.records_);
            }
            onChanged();
          }
        } else {
          if (!other.records_.isEmpty()) {
            if (recordsBuilder_.isEmpty()) {
              recordsBuilder_.dispose();
              recordsBuilder_ = null;
              records_ = other.records_;
              bitField0_ = (bitField0_ & ~0x00000002);
              recordsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRecordsFieldBuilder() : null;
            } else {
              recordsBuilder_.addAllMessages(other.records_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasLast()) {
          
          return false;
        }
        for (int i = 0; i < getRecordsCount(); i++) {
          if (!getRecords(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        InnerResultSet parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (InnerResultSet) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private boolean last_ ;
      /**
       * <code>required bool last = 1;</code>
       */
      public boolean hasLast() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bool last = 1;</code>
       */
      public boolean getLast() {
        return last_;
      }
      /**
       * <code>required bool last = 1;</code>
       */
      public Builder setLast(boolean value) {
        bitField0_ |= 0x00000001;
        last_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool last = 1;</code>
       */
      public Builder clearLast() {
        bitField0_ = (bitField0_ & ~0x00000001);
        last_ = false;
        onChanged();
        return this;
      }

      private java.util.List<Record> records_ =
        java.util.Collections.emptyList();
      private void ensureRecordsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          records_ = new java.util.ArrayList<Record>(records_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          Record, Record.Builder, RecordOrBuilder> recordsBuilder_;

      /**
       * <code>repeated .com.ctrip.framework.dal.models.Record records = 2;</code>
       */
      public java.util.List<Record> getRecordsList() {
        if (recordsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(records_);
        } else {
          return recordsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.Record records = 2;</code>
       */
      public int getRecordsCount() {
        if (recordsBuilder_ == null) {
          return records_.size();
        } else {
          return recordsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.Record records = 2;</code>
       */
      public Record getRecords(int index) {
        if (recordsBuilder_ == null) {
          return records_.get(index);
        } else {
          return recordsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.Record records = 2;</code>
       */
      public Builder setRecords(
          int index, Record value) {
        if (recordsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRecordsIsMutable();
          records_.set(index, value);
          onChanged();
        } else {
          recordsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.Record records = 2;</code>
       */
      public Builder setRecords(
          int index, Record.Builder builderForValue) {
        if (recordsBuilder_ == null) {
          ensureRecordsIsMutable();
          records_.set(index, builderForValue.build());
          onChanged();
        } else {
          recordsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.Record records = 2;</code>
       */
      public Builder addRecords(Record value) {
        if (recordsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRecordsIsMutable();
          records_.add(value);
          onChanged();
        } else {
          recordsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.Record records = 2;</code>
       */
      public Builder addRecords(
          int index, Record value) {
        if (recordsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRecordsIsMutable();
          records_.add(index, value);
          onChanged();
        } else {
          recordsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.Record records = 2;</code>
       */
      public Builder addRecords(
          Record.Builder builderForValue) {
        if (recordsBuilder_ == null) {
          ensureRecordsIsMutable();
          records_.add(builderForValue.build());
          onChanged();
        } else {
          recordsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.Record records = 2;</code>
       */
      public Builder addRecords(
          int index, Record.Builder builderForValue) {
        if (recordsBuilder_ == null) {
          ensureRecordsIsMutable();
          records_.add(index, builderForValue.build());
          onChanged();
        } else {
          recordsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.Record records = 2;</code>
       */
      public Builder addAllRecords(
          Iterable<? extends Record> values) {
        if (recordsBuilder_ == null) {
          ensureRecordsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, records_);
          onChanged();
        } else {
          recordsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.Record records = 2;</code>
       */
      public Builder clearRecords() {
        if (recordsBuilder_ == null) {
          records_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          recordsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.Record records = 2;</code>
       */
      public Builder removeRecords(int index) {
        if (recordsBuilder_ == null) {
          ensureRecordsIsMutable();
          records_.remove(index);
          onChanged();
        } else {
          recordsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.Record records = 2;</code>
       */
      public Record.Builder getRecordsBuilder(
          int index) {
        return getRecordsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.Record records = 2;</code>
       */
      public RecordOrBuilder getRecordsOrBuilder(
          int index) {
        if (recordsBuilder_ == null) {
          return records_.get(index);  } else {
          return recordsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.Record records = 2;</code>
       */
      public java.util.List<? extends RecordOrBuilder>
           getRecordsOrBuilderList() {
        if (recordsBuilder_ != null) {
          return recordsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(records_);
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.Record records = 2;</code>
       */
      public Record.Builder addRecordsBuilder() {
        return getRecordsFieldBuilder().addBuilder(
            Record.getDefaultInstance());
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.Record records = 2;</code>
       */
      public Record.Builder addRecordsBuilder(
          int index) {
        return getRecordsFieldBuilder().addBuilder(
            index, Record.getDefaultInstance());
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.Record records = 2;</code>
       */
      public java.util.List<Record.Builder>
           getRecordsBuilderList() {
        return getRecordsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          Record, Record.Builder, RecordOrBuilder>
          getRecordsFieldBuilder() {
        if (recordsBuilder_ == null) {
          recordsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              Record, Record.Builder, RecordOrBuilder>(
                  records_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          records_ = null;
        }
        return recordsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.ctrip.framework.dal.models.InnerResultSet)
    }

    static {
      defaultInstance = new InnerResultSet(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.ctrip.framework.dal.models.InnerResultSet)
  }

  public interface KeyValueOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.ctrip.framework.dal.models.KeyValue)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string key = 1;</code>
     */
    boolean hasKey();
    /**
     * <code>required string key = 1;</code>
     */
    String getKey();
    /**
     * <code>required string key = 1;</code>
     */
    com.google.protobuf.ByteString
        getKeyBytes();

    /**
     * <code>required string value = 2;</code>
     */
    boolean hasValue();
    /**
     * <code>required string value = 2;</code>
     */
    String getValue();
    /**
     * <code>required string value = 2;</code>
     */
    com.google.protobuf.ByteString
        getValueBytes();
  }
  /**
   * Protobuf type {@code com.ctrip.framework.dal.models.KeyValue}
   */
  public static final class KeyValue extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.ctrip.framework.dal.models.KeyValue)
      KeyValueOrBuilder {
    // Use KeyValue.newBuilder() to construct.
    private KeyValue(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private KeyValue(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final KeyValue defaultInstance;
    public static KeyValue getDefaultInstance() {
      return defaultInstance;
    }

    public KeyValue getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private KeyValue(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              key_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              value_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DalModels.internal_static_com_ctrip_framework_dal_models_KeyValue_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DalModels.internal_static_com_ctrip_framework_dal_models_KeyValue_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              KeyValue.class, Builder.class);
    }

    public static com.google.protobuf.Parser<KeyValue> PARSER =
        new com.google.protobuf.AbstractParser<KeyValue>() {
      public KeyValue parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new KeyValue(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<KeyValue> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int KEY_FIELD_NUMBER = 1;
    private Object key_;
    /**
     * <code>required string key = 1;</code>
     */
    public boolean hasKey() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string key = 1;</code>
     */
    public String getKey() {
      Object ref = key_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          key_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string key = 1;</code>
     */
    public com.google.protobuf.ByteString
        getKeyBytes() {
      Object ref = key_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        key_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    private Object value_;
    /**
     * <code>required string value = 2;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string value = 2;</code>
     */
    public String getValue() {
      Object ref = value_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          value_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string value = 2;</code>
     */
    public com.google.protobuf.ByteString
        getValueBytes() {
      Object ref = value_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        value_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      key_ = "";
      value_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasKey()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasValue()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getKeyBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getValueBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getKeyBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getValueBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static KeyValue parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static KeyValue parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static KeyValue parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static KeyValue parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static KeyValue parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static KeyValue parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static KeyValue parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static KeyValue parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static KeyValue parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static KeyValue parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(KeyValue prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.ctrip.framework.dal.models.KeyValue}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.ctrip.framework.dal.models.KeyValue)
        KeyValueOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DalModels.internal_static_com_ctrip_framework_dal_models_KeyValue_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DalModels.internal_static_com_ctrip_framework_dal_models_KeyValue_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                KeyValue.class, Builder.class);
      }

      // Construct using com.ctrip.framework.dal.models.DalModels.KeyValue.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        key_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DalModels.internal_static_com_ctrip_framework_dal_models_KeyValue_descriptor;
      }

      public KeyValue getDefaultInstanceForType() {
        return KeyValue.getDefaultInstance();
      }

      public KeyValue build() {
        KeyValue result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public KeyValue buildPartial() {
        KeyValue result = new KeyValue(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.key_ = key_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.value_ = value_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof KeyValue) {
          return mergeFrom((KeyValue)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(KeyValue other) {
        if (other == KeyValue.getDefaultInstance()) return this;
        if (other.hasKey()) {
          bitField0_ |= 0x00000001;
          key_ = other.key_;
          onChanged();
        }
        if (other.hasValue()) {
          bitField0_ |= 0x00000002;
          value_ = other.value_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasKey()) {
          
          return false;
        }
        if (!hasValue()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        KeyValue parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (KeyValue) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private Object key_ = "";
      /**
       * <code>required string key = 1;</code>
       */
      public boolean hasKey() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string key = 1;</code>
       */
      public String getKey() {
        Object ref = key_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            key_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>required string key = 1;</code>
       */
      public com.google.protobuf.ByteString
          getKeyBytes() {
        Object ref = key_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          key_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string key = 1;</code>
       */
      public Builder setKey(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        key_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string key = 1;</code>
       */
      public Builder clearKey() {
        bitField0_ = (bitField0_ & ~0x00000001);
        key_ = getDefaultInstance().getKey();
        onChanged();
        return this;
      }
      /**
       * <code>required string key = 1;</code>
       */
      public Builder setKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        key_ = value;
        onChanged();
        return this;
      }

      private Object value_ = "";
      /**
       * <code>required string value = 2;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string value = 2;</code>
       */
      public String getValue() {
        Object ref = value_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            value_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>required string value = 2;</code>
       */
      public com.google.protobuf.ByteString
          getValueBytes() {
        Object ref = value_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          value_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string value = 2;</code>
       */
      public Builder setValue(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string value = 2;</code>
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000002);
        value_ = getDefaultInstance().getValue();
        onChanged();
        return this;
      }
      /**
       * <code>required string value = 2;</code>
       */
      public Builder setValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        value_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.ctrip.framework.dal.models.KeyValue)
    }

    static {
      defaultInstance = new KeyValue(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.ctrip.framework.dal.models.KeyValue)
  }

  public interface LogEntityOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.ctrip.framework.dal.models.LogEntity)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string title = 1;</code>
     */
    boolean hasTitle();
    /**
     * <code>required string title = 1;</code>
     */
    String getTitle();
    /**
     * <code>required string title = 1;</code>
     */
    com.google.protobuf.ByteString
        getTitleBytes();

    /**
     * <code>required string logMessage = 2;</code>
     */
    boolean hasLogMessage();
    /**
     * <code>required string logMessage = 2;</code>
     */
    String getLogMessage();
    /**
     * <code>required string logMessage = 2;</code>
     */
    com.google.protobuf.ByteString
        getLogMessageBytes();

    /**
     * <code>repeated .com.ctrip.framework.dal.models.KeyValue tags = 3;</code>
     */
    java.util.List<KeyValue>
        getTagsList();
    /**
     * <code>repeated .com.ctrip.framework.dal.models.KeyValue tags = 3;</code>
     */
    KeyValue getTags(int index);
    /**
     * <code>repeated .com.ctrip.framework.dal.models.KeyValue tags = 3;</code>
     */
    int getTagsCount();
    /**
     * <code>repeated .com.ctrip.framework.dal.models.KeyValue tags = 3;</code>
     */
    java.util.List<? extends KeyValueOrBuilder>
        getTagsOrBuilderList();
    /**
     * <code>repeated .com.ctrip.framework.dal.models.KeyValue tags = 3;</code>
     */
    KeyValueOrBuilder getTagsOrBuilder(
            int index);

    /**
     * <code>optional string level = 4;</code>
     */
    boolean hasLevel();
    /**
     * <code>optional string level = 4;</code>
     */
    String getLevel();
    /**
     * <code>optional string level = 4;</code>
     */
    com.google.protobuf.ByteString
        getLevelBytes();
  }
  /**
   * Protobuf type {@code com.ctrip.framework.dal.models.LogEntity}
   */
  public static final class LogEntity extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.ctrip.framework.dal.models.LogEntity)
      LogEntityOrBuilder {
    // Use LogEntity.newBuilder() to construct.
    private LogEntity(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private LogEntity(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final LogEntity defaultInstance;
    public static LogEntity getDefaultInstance() {
      return defaultInstance;
    }

    public LogEntity getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private LogEntity(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              title_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              logMessage_ = bs;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                tags_ = new java.util.ArrayList<KeyValue>();
                mutable_bitField0_ |= 0x00000004;
              }
              tags_.add(input.readMessage(KeyValue.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              level_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          tags_ = java.util.Collections.unmodifiableList(tags_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DalModels.internal_static_com_ctrip_framework_dal_models_LogEntity_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DalModels.internal_static_com_ctrip_framework_dal_models_LogEntity_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              LogEntity.class, Builder.class);
    }

    public static com.google.protobuf.Parser<LogEntity> PARSER =
        new com.google.protobuf.AbstractParser<LogEntity>() {
      public LogEntity parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LogEntity(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<LogEntity> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TITLE_FIELD_NUMBER = 1;
    private Object title_;
    /**
     * <code>required string title = 1;</code>
     */
    public boolean hasTitle() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string title = 1;</code>
     */
    public String getTitle() {
      Object ref = title_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          title_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string title = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTitleBytes() {
      Object ref = title_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        title_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LOGMESSAGE_FIELD_NUMBER = 2;
    private Object logMessage_;
    /**
     * <code>required string logMessage = 2;</code>
     */
    public boolean hasLogMessage() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string logMessage = 2;</code>
     */
    public String getLogMessage() {
      Object ref = logMessage_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          logMessage_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string logMessage = 2;</code>
     */
    public com.google.protobuf.ByteString
        getLogMessageBytes() {
      Object ref = logMessage_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        logMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TAGS_FIELD_NUMBER = 3;
    private java.util.List<KeyValue> tags_;
    /**
     * <code>repeated .com.ctrip.framework.dal.models.KeyValue tags = 3;</code>
     */
    public java.util.List<KeyValue> getTagsList() {
      return tags_;
    }
    /**
     * <code>repeated .com.ctrip.framework.dal.models.KeyValue tags = 3;</code>
     */
    public java.util.List<? extends KeyValueOrBuilder>
        getTagsOrBuilderList() {
      return tags_;
    }
    /**
     * <code>repeated .com.ctrip.framework.dal.models.KeyValue tags = 3;</code>
     */
    public int getTagsCount() {
      return tags_.size();
    }
    /**
     * <code>repeated .com.ctrip.framework.dal.models.KeyValue tags = 3;</code>
     */
    public KeyValue getTags(int index) {
      return tags_.get(index);
    }
    /**
     * <code>repeated .com.ctrip.framework.dal.models.KeyValue tags = 3;</code>
     */
    public KeyValueOrBuilder getTagsOrBuilder(
        int index) {
      return tags_.get(index);
    }

    public static final int LEVEL_FIELD_NUMBER = 4;
    private Object level_;
    /**
     * <code>optional string level = 4;</code>
     */
    public boolean hasLevel() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string level = 4;</code>
     */
    public String getLevel() {
      Object ref = level_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          level_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string level = 4;</code>
     */
    public com.google.protobuf.ByteString
        getLevelBytes() {
      Object ref = level_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        level_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      title_ = "";
      logMessage_ = "";
      tags_ = java.util.Collections.emptyList();
      level_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasTitle()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLogMessage()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getTagsCount(); i++) {
        if (!getTags(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getTitleBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getLogMessageBytes());
      }
      for (int i = 0; i < tags_.size(); i++) {
        output.writeMessage(3, tags_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(4, getLevelBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getTitleBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getLogMessageBytes());
      }
      for (int i = 0; i < tags_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, tags_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getLevelBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static LogEntity parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static LogEntity parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static LogEntity parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static LogEntity parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static LogEntity parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static LogEntity parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static LogEntity parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static LogEntity parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static LogEntity parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static LogEntity parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(LogEntity prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.ctrip.framework.dal.models.LogEntity}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.ctrip.framework.dal.models.LogEntity)
        LogEntityOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DalModels.internal_static_com_ctrip_framework_dal_models_LogEntity_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DalModels.internal_static_com_ctrip_framework_dal_models_LogEntity_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                LogEntity.class, Builder.class);
      }

      // Construct using com.ctrip.framework.dal.models.DalModels.LogEntity.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTagsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        title_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        logMessage_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        if (tagsBuilder_ == null) {
          tags_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          tagsBuilder_.clear();
        }
        level_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DalModels.internal_static_com_ctrip_framework_dal_models_LogEntity_descriptor;
      }

      public LogEntity getDefaultInstanceForType() {
        return LogEntity.getDefaultInstance();
      }

      public LogEntity build() {
        LogEntity result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public LogEntity buildPartial() {
        LogEntity result = new LogEntity(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.title_ = title_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.logMessage_ = logMessage_;
        if (tagsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            tags_ = java.util.Collections.unmodifiableList(tags_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.tags_ = tags_;
        } else {
          result.tags_ = tagsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.level_ = level_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof LogEntity) {
          return mergeFrom((LogEntity)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(LogEntity other) {
        if (other == LogEntity.getDefaultInstance()) return this;
        if (other.hasTitle()) {
          bitField0_ |= 0x00000001;
          title_ = other.title_;
          onChanged();
        }
        if (other.hasLogMessage()) {
          bitField0_ |= 0x00000002;
          logMessage_ = other.logMessage_;
          onChanged();
        }
        if (tagsBuilder_ == null) {
          if (!other.tags_.isEmpty()) {
            if (tags_.isEmpty()) {
              tags_ = other.tags_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureTagsIsMutable();
              tags_.addAll(other.tags_);
            }
            onChanged();
          }
        } else {
          if (!other.tags_.isEmpty()) {
            if (tagsBuilder_.isEmpty()) {
              tagsBuilder_.dispose();
              tagsBuilder_ = null;
              tags_ = other.tags_;
              bitField0_ = (bitField0_ & ~0x00000004);
              tagsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTagsFieldBuilder() : null;
            } else {
              tagsBuilder_.addAllMessages(other.tags_);
            }
          }
        }
        if (other.hasLevel()) {
          bitField0_ |= 0x00000008;
          level_ = other.level_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTitle()) {
          
          return false;
        }
        if (!hasLogMessage()) {
          
          return false;
        }
        for (int i = 0; i < getTagsCount(); i++) {
          if (!getTags(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        LogEntity parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (LogEntity) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private Object title_ = "";
      /**
       * <code>required string title = 1;</code>
       */
      public boolean hasTitle() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string title = 1;</code>
       */
      public String getTitle() {
        Object ref = title_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            title_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>required string title = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTitleBytes() {
        Object ref = title_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          title_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string title = 1;</code>
       */
      public Builder setTitle(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        title_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string title = 1;</code>
       */
      public Builder clearTitle() {
        bitField0_ = (bitField0_ & ~0x00000001);
        title_ = getDefaultInstance().getTitle();
        onChanged();
        return this;
      }
      /**
       * <code>required string title = 1;</code>
       */
      public Builder setTitleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        title_ = value;
        onChanged();
        return this;
      }

      private Object logMessage_ = "";
      /**
       * <code>required string logMessage = 2;</code>
       */
      public boolean hasLogMessage() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string logMessage = 2;</code>
       */
      public String getLogMessage() {
        Object ref = logMessage_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            logMessage_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>required string logMessage = 2;</code>
       */
      public com.google.protobuf.ByteString
          getLogMessageBytes() {
        Object ref = logMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          logMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string logMessage = 2;</code>
       */
      public Builder setLogMessage(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        logMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string logMessage = 2;</code>
       */
      public Builder clearLogMessage() {
        bitField0_ = (bitField0_ & ~0x00000002);
        logMessage_ = getDefaultInstance().getLogMessage();
        onChanged();
        return this;
      }
      /**
       * <code>required string logMessage = 2;</code>
       */
      public Builder setLogMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        logMessage_ = value;
        onChanged();
        return this;
      }

      private java.util.List<KeyValue> tags_ =
        java.util.Collections.emptyList();
      private void ensureTagsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          tags_ = new java.util.ArrayList<KeyValue>(tags_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          KeyValue, KeyValue.Builder, KeyValueOrBuilder> tagsBuilder_;

      /**
       * <code>repeated .com.ctrip.framework.dal.models.KeyValue tags = 3;</code>
       */
      public java.util.List<KeyValue> getTagsList() {
        if (tagsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(tags_);
        } else {
          return tagsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.KeyValue tags = 3;</code>
       */
      public int getTagsCount() {
        if (tagsBuilder_ == null) {
          return tags_.size();
        } else {
          return tagsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.KeyValue tags = 3;</code>
       */
      public KeyValue getTags(int index) {
        if (tagsBuilder_ == null) {
          return tags_.get(index);
        } else {
          return tagsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.KeyValue tags = 3;</code>
       */
      public Builder setTags(
          int index, KeyValue value) {
        if (tagsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTagsIsMutable();
          tags_.set(index, value);
          onChanged();
        } else {
          tagsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.KeyValue tags = 3;</code>
       */
      public Builder setTags(
          int index, KeyValue.Builder builderForValue) {
        if (tagsBuilder_ == null) {
          ensureTagsIsMutable();
          tags_.set(index, builderForValue.build());
          onChanged();
        } else {
          tagsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.KeyValue tags = 3;</code>
       */
      public Builder addTags(KeyValue value) {
        if (tagsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTagsIsMutable();
          tags_.add(value);
          onChanged();
        } else {
          tagsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.KeyValue tags = 3;</code>
       */
      public Builder addTags(
          int index, KeyValue value) {
        if (tagsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTagsIsMutable();
          tags_.add(index, value);
          onChanged();
        } else {
          tagsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.KeyValue tags = 3;</code>
       */
      public Builder addTags(
          KeyValue.Builder builderForValue) {
        if (tagsBuilder_ == null) {
          ensureTagsIsMutable();
          tags_.add(builderForValue.build());
          onChanged();
        } else {
          tagsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.KeyValue tags = 3;</code>
       */
      public Builder addTags(
          int index, KeyValue.Builder builderForValue) {
        if (tagsBuilder_ == null) {
          ensureTagsIsMutable();
          tags_.add(index, builderForValue.build());
          onChanged();
        } else {
          tagsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.KeyValue tags = 3;</code>
       */
      public Builder addAllTags(
          Iterable<? extends KeyValue> values) {
        if (tagsBuilder_ == null) {
          ensureTagsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, tags_);
          onChanged();
        } else {
          tagsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.KeyValue tags = 3;</code>
       */
      public Builder clearTags() {
        if (tagsBuilder_ == null) {
          tags_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          tagsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.KeyValue tags = 3;</code>
       */
      public Builder removeTags(int index) {
        if (tagsBuilder_ == null) {
          ensureTagsIsMutable();
          tags_.remove(index);
          onChanged();
        } else {
          tagsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.KeyValue tags = 3;</code>
       */
      public KeyValue.Builder getTagsBuilder(
          int index) {
        return getTagsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.KeyValue tags = 3;</code>
       */
      public KeyValueOrBuilder getTagsOrBuilder(
          int index) {
        if (tagsBuilder_ == null) {
          return tags_.get(index);  } else {
          return tagsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.KeyValue tags = 3;</code>
       */
      public java.util.List<? extends KeyValueOrBuilder>
           getTagsOrBuilderList() {
        if (tagsBuilder_ != null) {
          return tagsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(tags_);
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.KeyValue tags = 3;</code>
       */
      public KeyValue.Builder addTagsBuilder() {
        return getTagsFieldBuilder().addBuilder(
            KeyValue.getDefaultInstance());
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.KeyValue tags = 3;</code>
       */
      public KeyValue.Builder addTagsBuilder(
          int index) {
        return getTagsFieldBuilder().addBuilder(
            index, KeyValue.getDefaultInstance());
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.KeyValue tags = 3;</code>
       */
      public java.util.List<KeyValue.Builder>
           getTagsBuilderList() {
        return getTagsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          KeyValue, KeyValue.Builder, KeyValueOrBuilder>
          getTagsFieldBuilder() {
        if (tagsBuilder_ == null) {
          tagsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              KeyValue, KeyValue.Builder, KeyValueOrBuilder>(
                  tags_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          tags_ = null;
        }
        return tagsBuilder_;
      }

      private Object level_ = "";
      /**
       * <code>optional string level = 4;</code>
       */
      public boolean hasLevel() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string level = 4;</code>
       */
      public String getLevel() {
        Object ref = level_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            level_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string level = 4;</code>
       */
      public com.google.protobuf.ByteString
          getLevelBytes() {
        Object ref = level_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          level_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string level = 4;</code>
       */
      public Builder setLevel(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        level_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string level = 4;</code>
       */
      public Builder clearLevel() {
        bitField0_ = (bitField0_ & ~0x00000008);
        level_ = getDefaultInstance().getLevel();
        onChanged();
        return this;
      }
      /**
       * <code>optional string level = 4;</code>
       */
      public Builder setLevelBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        level_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.ctrip.framework.dal.models.LogEntity)
    }

    static {
      defaultInstance = new LogEntity(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.ctrip.framework.dal.models.LogEntity)
  }

  public interface DataBaseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.ctrip.framework.dal.models.DataBase)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string name = 1;</code>
     */
    boolean hasName();
    /**
     * <code>required string name = 1;</code>
     */
    String getName();
    /**
     * <code>required string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>required bool master = 2;</code>
     */
    boolean hasMaster();
    /**
     * <code>required bool master = 2;</code>
     */
    boolean getMaster();

    /**
     * <code>optional string sharding = 3;</code>
     */
    boolean hasSharding();
    /**
     * <code>optional string sharding = 3;</code>
     */
    String getSharding();
    /**
     * <code>optional string sharding = 3;</code>
     */
    com.google.protobuf.ByteString
        getShardingBytes();

    /**
     * <code>required string connectionString = 4;</code>
     */
    boolean hasConnectionString();
    /**
     * <code>required string connectionString = 4;</code>
     */
    String getConnectionString();
    /**
     * <code>required string connectionString = 4;</code>
     */
    com.google.protobuf.ByteString
        getConnectionStringBytes();
  }
  /**
   * Protobuf type {@code com.ctrip.framework.dal.models.DataBase}
   */
  public static final class DataBase extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.ctrip.framework.dal.models.DataBase)
      DataBaseOrBuilder {
    // Use DataBase.newBuilder() to construct.
    private DataBase(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DataBase(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DataBase defaultInstance;
    public static DataBase getDefaultInstance() {
      return defaultInstance;
    }

    public DataBase getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DataBase(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              name_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              master_ = input.readBool();
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              sharding_ = bs;
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              connectionString_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DalModels.internal_static_com_ctrip_framework_dal_models_DataBase_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DalModels.internal_static_com_ctrip_framework_dal_models_DataBase_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              DataBase.class, Builder.class);
    }

    public static com.google.protobuf.Parser<DataBase> PARSER =
        new com.google.protobuf.AbstractParser<DataBase>() {
      public DataBase parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DataBase(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<DataBase> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private Object name_;
    /**
     * <code>required string name = 1;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string name = 1;</code>
     */
    public String getName() {
      Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MASTER_FIELD_NUMBER = 2;
    private boolean master_;
    /**
     * <code>required bool master = 2;</code>
     */
    public boolean hasMaster() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bool master = 2;</code>
     */
    public boolean getMaster() {
      return master_;
    }

    public static final int SHARDING_FIELD_NUMBER = 3;
    private Object sharding_;
    /**
     * <code>optional string sharding = 3;</code>
     */
    public boolean hasSharding() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string sharding = 3;</code>
     */
    public String getSharding() {
      Object ref = sharding_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          sharding_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string sharding = 3;</code>
     */
    public com.google.protobuf.ByteString
        getShardingBytes() {
      Object ref = sharding_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        sharding_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CONNECTIONSTRING_FIELD_NUMBER = 4;
    private Object connectionString_;
    /**
     * <code>required string connectionString = 4;</code>
     */
    public boolean hasConnectionString() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required string connectionString = 4;</code>
     */
    public String getConnectionString() {
      Object ref = connectionString_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          connectionString_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string connectionString = 4;</code>
     */
    public com.google.protobuf.ByteString
        getConnectionStringBytes() {
      Object ref = connectionString_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        connectionString_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      name_ = "";
      master_ = false;
      sharding_ = "";
      connectionString_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMaster()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasConnectionString()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, master_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getShardingBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getConnectionStringBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, master_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getShardingBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getConnectionStringBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static DataBase parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static DataBase parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static DataBase parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static DataBase parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static DataBase parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static DataBase parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static DataBase parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static DataBase parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static DataBase parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static DataBase parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DataBase prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.ctrip.framework.dal.models.DataBase}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.ctrip.framework.dal.models.DataBase)
        DataBaseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DalModels.internal_static_com_ctrip_framework_dal_models_DataBase_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DalModels.internal_static_com_ctrip_framework_dal_models_DataBase_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                DataBase.class, Builder.class);
      }

      // Construct using com.ctrip.framework.dal.models.DalModels.DataBase.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        master_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        sharding_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        connectionString_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DalModels.internal_static_com_ctrip_framework_dal_models_DataBase_descriptor;
      }

      public DataBase getDefaultInstanceForType() {
        return DataBase.getDefaultInstance();
      }

      public DataBase build() {
        DataBase result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public DataBase buildPartial() {
        DataBase result = new DataBase(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.master_ = master_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.sharding_ = sharding_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.connectionString_ = connectionString_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DataBase) {
          return mergeFrom((DataBase)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(DataBase other) {
        if (other == DataBase.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasMaster()) {
          setMaster(other.getMaster());
        }
        if (other.hasSharding()) {
          bitField0_ |= 0x00000004;
          sharding_ = other.sharding_;
          onChanged();
        }
        if (other.hasConnectionString()) {
          bitField0_ |= 0x00000008;
          connectionString_ = other.connectionString_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasName()) {
          
          return false;
        }
        if (!hasMaster()) {
          
          return false;
        }
        if (!hasConnectionString()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        DataBase parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (DataBase) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private Object name_ = "";
      /**
       * <code>required string name = 1;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string name = 1;</code>
       */
      public String getName() {
        Object ref = name_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>required string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 1;</code>
       */
      public Builder setName(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 1;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      private boolean master_ ;
      /**
       * <code>required bool master = 2;</code>
       */
      public boolean hasMaster() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bool master = 2;</code>
       */
      public boolean getMaster() {
        return master_;
      }
      /**
       * <code>required bool master = 2;</code>
       */
      public Builder setMaster(boolean value) {
        bitField0_ |= 0x00000002;
        master_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool master = 2;</code>
       */
      public Builder clearMaster() {
        bitField0_ = (bitField0_ & ~0x00000002);
        master_ = false;
        onChanged();
        return this;
      }

      private Object sharding_ = "";
      /**
       * <code>optional string sharding = 3;</code>
       */
      public boolean hasSharding() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string sharding = 3;</code>
       */
      public String getSharding() {
        Object ref = sharding_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            sharding_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string sharding = 3;</code>
       */
      public com.google.protobuf.ByteString
          getShardingBytes() {
        Object ref = sharding_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          sharding_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string sharding = 3;</code>
       */
      public Builder setSharding(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        sharding_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string sharding = 3;</code>
       */
      public Builder clearSharding() {
        bitField0_ = (bitField0_ & ~0x00000004);
        sharding_ = getDefaultInstance().getSharding();
        onChanged();
        return this;
      }
      /**
       * <code>optional string sharding = 3;</code>
       */
      public Builder setShardingBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        sharding_ = value;
        onChanged();
        return this;
      }

      private Object connectionString_ = "";
      /**
       * <code>required string connectionString = 4;</code>
       */
      public boolean hasConnectionString() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required string connectionString = 4;</code>
       */
      public String getConnectionString() {
        Object ref = connectionString_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            connectionString_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>required string connectionString = 4;</code>
       */
      public com.google.protobuf.ByteString
          getConnectionStringBytes() {
        Object ref = connectionString_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          connectionString_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string connectionString = 4;</code>
       */
      public Builder setConnectionString(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        connectionString_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string connectionString = 4;</code>
       */
      public Builder clearConnectionString() {
        bitField0_ = (bitField0_ & ~0x00000008);
        connectionString_ = getDefaultInstance().getConnectionString();
        onChanged();
        return this;
      }
      /**
       * <code>required string connectionString = 4;</code>
       */
      public Builder setConnectionStringBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        connectionString_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.ctrip.framework.dal.models.DataBase)
    }

    static {
      defaultInstance = new DataBase(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.ctrip.framework.dal.models.DataBase)
  }

  public interface DatabaseSetOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.ctrip.framework.dal.models.DatabaseSet)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string name = 1;</code>
     */
    boolean hasName();
    /**
     * <code>required string name = 1;</code>
     */
    String getName();
    /**
     * <code>required string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>required string provider = 2;</code>
     */
    boolean hasProvider();
    /**
     * <code>required string provider = 2;</code>
     */
    String getProvider();
    /**
     * <code>required string provider = 2;</code>
     */
    com.google.protobuf.ByteString
        getProviderBytes();

    /**
     * <code>required .com.ctrip.framework.dal.models.DatabaseCategory category = 3;</code>
     */
    boolean hasCategory();
    /**
     * <code>required .com.ctrip.framework.dal.models.DatabaseCategory category = 3;</code>
     */
    DatabaseCategory getCategory();

    /**
     * <code>optional string shardingStrategy = 4;</code>
     */
    boolean hasShardingStrategy();
    /**
     * <code>optional string shardingStrategy = 4;</code>
     */
    String getShardingStrategy();
    /**
     * <code>optional string shardingStrategy = 4;</code>
     */
    com.google.protobuf.ByteString
        getShardingStrategyBytes();

    /**
     * <code>repeated .com.ctrip.framework.dal.models.DataBase masters = 5;</code>
     */
    java.util.List<DataBase>
        getMastersList();
    /**
     * <code>repeated .com.ctrip.framework.dal.models.DataBase masters = 5;</code>
     */
    DataBase getMasters(int index);
    /**
     * <code>repeated .com.ctrip.framework.dal.models.DataBase masters = 5;</code>
     */
    int getMastersCount();
    /**
     * <code>repeated .com.ctrip.framework.dal.models.DataBase masters = 5;</code>
     */
    java.util.List<? extends DataBaseOrBuilder>
        getMastersOrBuilderList();
    /**
     * <code>repeated .com.ctrip.framework.dal.models.DataBase masters = 5;</code>
     */
    DataBaseOrBuilder getMastersOrBuilder(
            int index);

    /**
     * <code>repeated .com.ctrip.framework.dal.models.DataBase slaves = 6;</code>
     */
    java.util.List<DataBase>
        getSlavesList();
    /**
     * <code>repeated .com.ctrip.framework.dal.models.DataBase slaves = 6;</code>
     */
    DataBase getSlaves(int index);
    /**
     * <code>repeated .com.ctrip.framework.dal.models.DataBase slaves = 6;</code>
     */
    int getSlavesCount();
    /**
     * <code>repeated .com.ctrip.framework.dal.models.DataBase slaves = 6;</code>
     */
    java.util.List<? extends DataBaseOrBuilder>
        getSlavesOrBuilderList();
    /**
     * <code>repeated .com.ctrip.framework.dal.models.DataBase slaves = 6;</code>
     */
    DataBaseOrBuilder getSlavesOrBuilder(
            int index);
  }
  /**
   * Protobuf type {@code com.ctrip.framework.dal.models.DatabaseSet}
   */
  public static final class DatabaseSet extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.ctrip.framework.dal.models.DatabaseSet)
      DatabaseSetOrBuilder {
    // Use DatabaseSet.newBuilder() to construct.
    private DatabaseSet(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DatabaseSet(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DatabaseSet defaultInstance;
    public static DatabaseSet getDefaultInstance() {
      return defaultInstance;
    }

    public DatabaseSet getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DatabaseSet(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              name_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              provider_ = bs;
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              DatabaseCategory value = DatabaseCategory.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                category_ = value;
              }
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              shardingStrategy_ = bs;
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                masters_ = new java.util.ArrayList<DataBase>();
                mutable_bitField0_ |= 0x00000010;
              }
              masters_.add(input.readMessage(DataBase.PARSER, extensionRegistry));
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                slaves_ = new java.util.ArrayList<DataBase>();
                mutable_bitField0_ |= 0x00000020;
              }
              slaves_.add(input.readMessage(DataBase.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          masters_ = java.util.Collections.unmodifiableList(masters_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          slaves_ = java.util.Collections.unmodifiableList(slaves_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DalModels.internal_static_com_ctrip_framework_dal_models_DatabaseSet_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DalModels.internal_static_com_ctrip_framework_dal_models_DatabaseSet_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              DatabaseSet.class, Builder.class);
    }

    public static com.google.protobuf.Parser<DatabaseSet> PARSER =
        new com.google.protobuf.AbstractParser<DatabaseSet>() {
      public DatabaseSet parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DatabaseSet(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<DatabaseSet> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private Object name_;
    /**
     * <code>required string name = 1;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string name = 1;</code>
     */
    public String getName() {
      Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PROVIDER_FIELD_NUMBER = 2;
    private Object provider_;
    /**
     * <code>required string provider = 2;</code>
     */
    public boolean hasProvider() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string provider = 2;</code>
     */
    public String getProvider() {
      Object ref = provider_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          provider_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string provider = 2;</code>
     */
    public com.google.protobuf.ByteString
        getProviderBytes() {
      Object ref = provider_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        provider_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CATEGORY_FIELD_NUMBER = 3;
    private DatabaseCategory category_;
    /**
     * <code>required .com.ctrip.framework.dal.models.DatabaseCategory category = 3;</code>
     */
    public boolean hasCategory() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .com.ctrip.framework.dal.models.DatabaseCategory category = 3;</code>
     */
    public DatabaseCategory getCategory() {
      return category_;
    }

    public static final int SHARDINGSTRATEGY_FIELD_NUMBER = 4;
    private Object shardingStrategy_;
    /**
     * <code>optional string shardingStrategy = 4;</code>
     */
    public boolean hasShardingStrategy() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string shardingStrategy = 4;</code>
     */
    public String getShardingStrategy() {
      Object ref = shardingStrategy_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          shardingStrategy_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string shardingStrategy = 4;</code>
     */
    public com.google.protobuf.ByteString
        getShardingStrategyBytes() {
      Object ref = shardingStrategy_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        shardingStrategy_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MASTERS_FIELD_NUMBER = 5;
    private java.util.List<DataBase> masters_;
    /**
     * <code>repeated .com.ctrip.framework.dal.models.DataBase masters = 5;</code>
     */
    public java.util.List<DataBase> getMastersList() {
      return masters_;
    }
    /**
     * <code>repeated .com.ctrip.framework.dal.models.DataBase masters = 5;</code>
     */
    public java.util.List<? extends DataBaseOrBuilder>
        getMastersOrBuilderList() {
      return masters_;
    }
    /**
     * <code>repeated .com.ctrip.framework.dal.models.DataBase masters = 5;</code>
     */
    public int getMastersCount() {
      return masters_.size();
    }
    /**
     * <code>repeated .com.ctrip.framework.dal.models.DataBase masters = 5;</code>
     */
    public DataBase getMasters(int index) {
      return masters_.get(index);
    }
    /**
     * <code>repeated .com.ctrip.framework.dal.models.DataBase masters = 5;</code>
     */
    public DataBaseOrBuilder getMastersOrBuilder(
        int index) {
      return masters_.get(index);
    }

    public static final int SLAVES_FIELD_NUMBER = 6;
    private java.util.List<DataBase> slaves_;
    /**
     * <code>repeated .com.ctrip.framework.dal.models.DataBase slaves = 6;</code>
     */
    public java.util.List<DataBase> getSlavesList() {
      return slaves_;
    }
    /**
     * <code>repeated .com.ctrip.framework.dal.models.DataBase slaves = 6;</code>
     */
    public java.util.List<? extends DataBaseOrBuilder>
        getSlavesOrBuilderList() {
      return slaves_;
    }
    /**
     * <code>repeated .com.ctrip.framework.dal.models.DataBase slaves = 6;</code>
     */
    public int getSlavesCount() {
      return slaves_.size();
    }
    /**
     * <code>repeated .com.ctrip.framework.dal.models.DataBase slaves = 6;</code>
     */
    public DataBase getSlaves(int index) {
      return slaves_.get(index);
    }
    /**
     * <code>repeated .com.ctrip.framework.dal.models.DataBase slaves = 6;</code>
     */
    public DataBaseOrBuilder getSlavesOrBuilder(
        int index) {
      return slaves_.get(index);
    }

    private void initFields() {
      name_ = "";
      provider_ = "";
      category_ = DatabaseCategory.MYSQL;
      shardingStrategy_ = "";
      masters_ = java.util.Collections.emptyList();
      slaves_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasProvider()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCategory()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getMastersCount(); i++) {
        if (!getMasters(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getSlavesCount(); i++) {
        if (!getSlaves(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getProviderBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, category_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getShardingStrategyBytes());
      }
      for (int i = 0; i < masters_.size(); i++) {
        output.writeMessage(5, masters_.get(i));
      }
      for (int i = 0; i < slaves_.size(); i++) {
        output.writeMessage(6, slaves_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getProviderBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, category_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getShardingStrategyBytes());
      }
      for (int i = 0; i < masters_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, masters_.get(i));
      }
      for (int i = 0; i < slaves_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, slaves_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static DatabaseSet parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static DatabaseSet parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static DatabaseSet parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static DatabaseSet parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static DatabaseSet parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static DatabaseSet parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static DatabaseSet parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static DatabaseSet parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static DatabaseSet parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static DatabaseSet parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DatabaseSet prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.ctrip.framework.dal.models.DatabaseSet}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.ctrip.framework.dal.models.DatabaseSet)
        DatabaseSetOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DalModels.internal_static_com_ctrip_framework_dal_models_DatabaseSet_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DalModels.internal_static_com_ctrip_framework_dal_models_DatabaseSet_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                DatabaseSet.class, Builder.class);
      }

      // Construct using com.ctrip.framework.dal.models.DalModels.DatabaseSet.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMastersFieldBuilder();
          getSlavesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        provider_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        category_ = DatabaseCategory.MYSQL;
        bitField0_ = (bitField0_ & ~0x00000004);
        shardingStrategy_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        if (mastersBuilder_ == null) {
          masters_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          mastersBuilder_.clear();
        }
        if (slavesBuilder_ == null) {
          slaves_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          slavesBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DalModels.internal_static_com_ctrip_framework_dal_models_DatabaseSet_descriptor;
      }

      public DatabaseSet getDefaultInstanceForType() {
        return DatabaseSet.getDefaultInstance();
      }

      public DatabaseSet build() {
        DatabaseSet result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public DatabaseSet buildPartial() {
        DatabaseSet result = new DatabaseSet(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.provider_ = provider_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.category_ = category_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.shardingStrategy_ = shardingStrategy_;
        if (mastersBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            masters_ = java.util.Collections.unmodifiableList(masters_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.masters_ = masters_;
        } else {
          result.masters_ = mastersBuilder_.build();
        }
        if (slavesBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            slaves_ = java.util.Collections.unmodifiableList(slaves_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.slaves_ = slaves_;
        } else {
          result.slaves_ = slavesBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DatabaseSet) {
          return mergeFrom((DatabaseSet)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(DatabaseSet other) {
        if (other == DatabaseSet.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasProvider()) {
          bitField0_ |= 0x00000002;
          provider_ = other.provider_;
          onChanged();
        }
        if (other.hasCategory()) {
          setCategory(other.getCategory());
        }
        if (other.hasShardingStrategy()) {
          bitField0_ |= 0x00000008;
          shardingStrategy_ = other.shardingStrategy_;
          onChanged();
        }
        if (mastersBuilder_ == null) {
          if (!other.masters_.isEmpty()) {
            if (masters_.isEmpty()) {
              masters_ = other.masters_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureMastersIsMutable();
              masters_.addAll(other.masters_);
            }
            onChanged();
          }
        } else {
          if (!other.masters_.isEmpty()) {
            if (mastersBuilder_.isEmpty()) {
              mastersBuilder_.dispose();
              mastersBuilder_ = null;
              masters_ = other.masters_;
              bitField0_ = (bitField0_ & ~0x00000010);
              mastersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMastersFieldBuilder() : null;
            } else {
              mastersBuilder_.addAllMessages(other.masters_);
            }
          }
        }
        if (slavesBuilder_ == null) {
          if (!other.slaves_.isEmpty()) {
            if (slaves_.isEmpty()) {
              slaves_ = other.slaves_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureSlavesIsMutable();
              slaves_.addAll(other.slaves_);
            }
            onChanged();
          }
        } else {
          if (!other.slaves_.isEmpty()) {
            if (slavesBuilder_.isEmpty()) {
              slavesBuilder_.dispose();
              slavesBuilder_ = null;
              slaves_ = other.slaves_;
              bitField0_ = (bitField0_ & ~0x00000020);
              slavesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSlavesFieldBuilder() : null;
            } else {
              slavesBuilder_.addAllMessages(other.slaves_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasName()) {
          
          return false;
        }
        if (!hasProvider()) {
          
          return false;
        }
        if (!hasCategory()) {
          
          return false;
        }
        for (int i = 0; i < getMastersCount(); i++) {
          if (!getMasters(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getSlavesCount(); i++) {
          if (!getSlaves(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        DatabaseSet parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (DatabaseSet) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private Object name_ = "";
      /**
       * <code>required string name = 1;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string name = 1;</code>
       */
      public String getName() {
        Object ref = name_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>required string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 1;</code>
       */
      public Builder setName(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 1;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      private Object provider_ = "";
      /**
       * <code>required string provider = 2;</code>
       */
      public boolean hasProvider() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string provider = 2;</code>
       */
      public String getProvider() {
        Object ref = provider_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            provider_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>required string provider = 2;</code>
       */
      public com.google.protobuf.ByteString
          getProviderBytes() {
        Object ref = provider_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          provider_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string provider = 2;</code>
       */
      public Builder setProvider(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        provider_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string provider = 2;</code>
       */
      public Builder clearProvider() {
        bitField0_ = (bitField0_ & ~0x00000002);
        provider_ = getDefaultInstance().getProvider();
        onChanged();
        return this;
      }
      /**
       * <code>required string provider = 2;</code>
       */
      public Builder setProviderBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        provider_ = value;
        onChanged();
        return this;
      }

      private DatabaseCategory category_ = DatabaseCategory.MYSQL;
      /**
       * <code>required .com.ctrip.framework.dal.models.DatabaseCategory category = 3;</code>
       */
      public boolean hasCategory() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .com.ctrip.framework.dal.models.DatabaseCategory category = 3;</code>
       */
      public DatabaseCategory getCategory() {
        return category_;
      }
      /**
       * <code>required .com.ctrip.framework.dal.models.DatabaseCategory category = 3;</code>
       */
      public Builder setCategory(DatabaseCategory value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        category_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .com.ctrip.framework.dal.models.DatabaseCategory category = 3;</code>
       */
      public Builder clearCategory() {
        bitField0_ = (bitField0_ & ~0x00000004);
        category_ = DatabaseCategory.MYSQL;
        onChanged();
        return this;
      }

      private Object shardingStrategy_ = "";
      /**
       * <code>optional string shardingStrategy = 4;</code>
       */
      public boolean hasShardingStrategy() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string shardingStrategy = 4;</code>
       */
      public String getShardingStrategy() {
        Object ref = shardingStrategy_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            shardingStrategy_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string shardingStrategy = 4;</code>
       */
      public com.google.protobuf.ByteString
          getShardingStrategyBytes() {
        Object ref = shardingStrategy_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          shardingStrategy_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string shardingStrategy = 4;</code>
       */
      public Builder setShardingStrategy(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        shardingStrategy_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string shardingStrategy = 4;</code>
       */
      public Builder clearShardingStrategy() {
        bitField0_ = (bitField0_ & ~0x00000008);
        shardingStrategy_ = getDefaultInstance().getShardingStrategy();
        onChanged();
        return this;
      }
      /**
       * <code>optional string shardingStrategy = 4;</code>
       */
      public Builder setShardingStrategyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        shardingStrategy_ = value;
        onChanged();
        return this;
      }

      private java.util.List<DataBase> masters_ =
        java.util.Collections.emptyList();
      private void ensureMastersIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          masters_ = new java.util.ArrayList<DataBase>(masters_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          DataBase, DataBase.Builder, DataBaseOrBuilder> mastersBuilder_;

      /**
       * <code>repeated .com.ctrip.framework.dal.models.DataBase masters = 5;</code>
       */
      public java.util.List<DataBase> getMastersList() {
        if (mastersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(masters_);
        } else {
          return mastersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DataBase masters = 5;</code>
       */
      public int getMastersCount() {
        if (mastersBuilder_ == null) {
          return masters_.size();
        } else {
          return mastersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DataBase masters = 5;</code>
       */
      public DataBase getMasters(int index) {
        if (mastersBuilder_ == null) {
          return masters_.get(index);
        } else {
          return mastersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DataBase masters = 5;</code>
       */
      public Builder setMasters(
          int index, DataBase value) {
        if (mastersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMastersIsMutable();
          masters_.set(index, value);
          onChanged();
        } else {
          mastersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DataBase masters = 5;</code>
       */
      public Builder setMasters(
          int index, DataBase.Builder builderForValue) {
        if (mastersBuilder_ == null) {
          ensureMastersIsMutable();
          masters_.set(index, builderForValue.build());
          onChanged();
        } else {
          mastersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DataBase masters = 5;</code>
       */
      public Builder addMasters(DataBase value) {
        if (mastersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMastersIsMutable();
          masters_.add(value);
          onChanged();
        } else {
          mastersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DataBase masters = 5;</code>
       */
      public Builder addMasters(
          int index, DataBase value) {
        if (mastersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMastersIsMutable();
          masters_.add(index, value);
          onChanged();
        } else {
          mastersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DataBase masters = 5;</code>
       */
      public Builder addMasters(
          DataBase.Builder builderForValue) {
        if (mastersBuilder_ == null) {
          ensureMastersIsMutable();
          masters_.add(builderForValue.build());
          onChanged();
        } else {
          mastersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DataBase masters = 5;</code>
       */
      public Builder addMasters(
          int index, DataBase.Builder builderForValue) {
        if (mastersBuilder_ == null) {
          ensureMastersIsMutable();
          masters_.add(index, builderForValue.build());
          onChanged();
        } else {
          mastersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DataBase masters = 5;</code>
       */
      public Builder addAllMasters(
          Iterable<? extends DataBase> values) {
        if (mastersBuilder_ == null) {
          ensureMastersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, masters_);
          onChanged();
        } else {
          mastersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DataBase masters = 5;</code>
       */
      public Builder clearMasters() {
        if (mastersBuilder_ == null) {
          masters_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          mastersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DataBase masters = 5;</code>
       */
      public Builder removeMasters(int index) {
        if (mastersBuilder_ == null) {
          ensureMastersIsMutable();
          masters_.remove(index);
          onChanged();
        } else {
          mastersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DataBase masters = 5;</code>
       */
      public DataBase.Builder getMastersBuilder(
          int index) {
        return getMastersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DataBase masters = 5;</code>
       */
      public DataBaseOrBuilder getMastersOrBuilder(
          int index) {
        if (mastersBuilder_ == null) {
          return masters_.get(index);  } else {
          return mastersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DataBase masters = 5;</code>
       */
      public java.util.List<? extends DataBaseOrBuilder>
           getMastersOrBuilderList() {
        if (mastersBuilder_ != null) {
          return mastersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(masters_);
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DataBase masters = 5;</code>
       */
      public DataBase.Builder addMastersBuilder() {
        return getMastersFieldBuilder().addBuilder(
            DataBase.getDefaultInstance());
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DataBase masters = 5;</code>
       */
      public DataBase.Builder addMastersBuilder(
          int index) {
        return getMastersFieldBuilder().addBuilder(
            index, DataBase.getDefaultInstance());
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DataBase masters = 5;</code>
       */
      public java.util.List<DataBase.Builder>
           getMastersBuilderList() {
        return getMastersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          DataBase, DataBase.Builder, DataBaseOrBuilder>
          getMastersFieldBuilder() {
        if (mastersBuilder_ == null) {
          mastersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              DataBase, DataBase.Builder, DataBaseOrBuilder>(
                  masters_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          masters_ = null;
        }
        return mastersBuilder_;
      }

      private java.util.List<DataBase> slaves_ =
        java.util.Collections.emptyList();
      private void ensureSlavesIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          slaves_ = new java.util.ArrayList<DataBase>(slaves_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          DataBase, DataBase.Builder, DataBaseOrBuilder> slavesBuilder_;

      /**
       * <code>repeated .com.ctrip.framework.dal.models.DataBase slaves = 6;</code>
       */
      public java.util.List<DataBase> getSlavesList() {
        if (slavesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(slaves_);
        } else {
          return slavesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DataBase slaves = 6;</code>
       */
      public int getSlavesCount() {
        if (slavesBuilder_ == null) {
          return slaves_.size();
        } else {
          return slavesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DataBase slaves = 6;</code>
       */
      public DataBase getSlaves(int index) {
        if (slavesBuilder_ == null) {
          return slaves_.get(index);
        } else {
          return slavesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DataBase slaves = 6;</code>
       */
      public Builder setSlaves(
          int index, DataBase value) {
        if (slavesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSlavesIsMutable();
          slaves_.set(index, value);
          onChanged();
        } else {
          slavesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DataBase slaves = 6;</code>
       */
      public Builder setSlaves(
          int index, DataBase.Builder builderForValue) {
        if (slavesBuilder_ == null) {
          ensureSlavesIsMutable();
          slaves_.set(index, builderForValue.build());
          onChanged();
        } else {
          slavesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DataBase slaves = 6;</code>
       */
      public Builder addSlaves(DataBase value) {
        if (slavesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSlavesIsMutable();
          slaves_.add(value);
          onChanged();
        } else {
          slavesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DataBase slaves = 6;</code>
       */
      public Builder addSlaves(
          int index, DataBase value) {
        if (slavesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSlavesIsMutable();
          slaves_.add(index, value);
          onChanged();
        } else {
          slavesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DataBase slaves = 6;</code>
       */
      public Builder addSlaves(
          DataBase.Builder builderForValue) {
        if (slavesBuilder_ == null) {
          ensureSlavesIsMutable();
          slaves_.add(builderForValue.build());
          onChanged();
        } else {
          slavesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DataBase slaves = 6;</code>
       */
      public Builder addSlaves(
          int index, DataBase.Builder builderForValue) {
        if (slavesBuilder_ == null) {
          ensureSlavesIsMutable();
          slaves_.add(index, builderForValue.build());
          onChanged();
        } else {
          slavesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DataBase slaves = 6;</code>
       */
      public Builder addAllSlaves(
          Iterable<? extends DataBase> values) {
        if (slavesBuilder_ == null) {
          ensureSlavesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, slaves_);
          onChanged();
        } else {
          slavesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DataBase slaves = 6;</code>
       */
      public Builder clearSlaves() {
        if (slavesBuilder_ == null) {
          slaves_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          slavesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DataBase slaves = 6;</code>
       */
      public Builder removeSlaves(int index) {
        if (slavesBuilder_ == null) {
          ensureSlavesIsMutable();
          slaves_.remove(index);
          onChanged();
        } else {
          slavesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DataBase slaves = 6;</code>
       */
      public DataBase.Builder getSlavesBuilder(
          int index) {
        return getSlavesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DataBase slaves = 6;</code>
       */
      public DataBaseOrBuilder getSlavesOrBuilder(
          int index) {
        if (slavesBuilder_ == null) {
          return slaves_.get(index);  } else {
          return slavesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DataBase slaves = 6;</code>
       */
      public java.util.List<? extends DataBaseOrBuilder>
           getSlavesOrBuilderList() {
        if (slavesBuilder_ != null) {
          return slavesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(slaves_);
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DataBase slaves = 6;</code>
       */
      public DataBase.Builder addSlavesBuilder() {
        return getSlavesFieldBuilder().addBuilder(
            DataBase.getDefaultInstance());
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DataBase slaves = 6;</code>
       */
      public DataBase.Builder addSlavesBuilder(
          int index) {
        return getSlavesFieldBuilder().addBuilder(
            index, DataBase.getDefaultInstance());
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DataBase slaves = 6;</code>
       */
      public java.util.List<DataBase.Builder>
           getSlavesBuilderList() {
        return getSlavesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          DataBase, DataBase.Builder, DataBaseOrBuilder>
          getSlavesFieldBuilder() {
        if (slavesBuilder_ == null) {
          slavesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              DataBase, DataBase.Builder, DataBaseOrBuilder>(
                  slaves_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          slaves_ = null;
        }
        return slavesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.ctrip.framework.dal.models.DatabaseSet)
    }

    static {
      defaultInstance = new DatabaseSet(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.ctrip.framework.dal.models.DatabaseSet)
  }

  public interface DalConfigureOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.ctrip.framework.dal.models.DalConfigure)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string name = 1;</code>
     */
    boolean hasName();
    /**
     * <code>required string name = 1;</code>
     */
    String getName();
    /**
     * <code>required string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>repeated .com.ctrip.framework.dal.models.DatabaseSet databaseSets = 2;</code>
     */
    java.util.List<DatabaseSet>
        getDatabaseSetsList();
    /**
     * <code>repeated .com.ctrip.framework.dal.models.DatabaseSet databaseSets = 2;</code>
     */
    DatabaseSet getDatabaseSets(int index);
    /**
     * <code>repeated .com.ctrip.framework.dal.models.DatabaseSet databaseSets = 2;</code>
     */
    int getDatabaseSetsCount();
    /**
     * <code>repeated .com.ctrip.framework.dal.models.DatabaseSet databaseSets = 2;</code>
     */
    java.util.List<? extends DatabaseSetOrBuilder>
        getDatabaseSetsOrBuilderList();
    /**
     * <code>repeated .com.ctrip.framework.dal.models.DatabaseSet databaseSets = 2;</code>
     */
    DatabaseSetOrBuilder getDatabaseSetsOrBuilder(
            int index);
  }
  /**
   * Protobuf type {@code com.ctrip.framework.dal.models.DalConfigure}
   */
  public static final class DalConfigure extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.ctrip.framework.dal.models.DalConfigure)
      DalConfigureOrBuilder {
    // Use DalConfigure.newBuilder() to construct.
    private DalConfigure(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DalConfigure(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DalConfigure defaultInstance;
    public static DalConfigure getDefaultInstance() {
      return defaultInstance;
    }

    public DalConfigure getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DalConfigure(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              name_ = bs;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                databaseSets_ = new java.util.ArrayList<DatabaseSet>();
                mutable_bitField0_ |= 0x00000002;
              }
              databaseSets_.add(input.readMessage(DatabaseSet.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          databaseSets_ = java.util.Collections.unmodifiableList(databaseSets_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DalModels.internal_static_com_ctrip_framework_dal_models_DalConfigure_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DalModels.internal_static_com_ctrip_framework_dal_models_DalConfigure_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              DalConfigure.class, Builder.class);
    }

    public static com.google.protobuf.Parser<DalConfigure> PARSER =
        new com.google.protobuf.AbstractParser<DalConfigure>() {
      public DalConfigure parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DalConfigure(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<DalConfigure> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private Object name_;
    /**
     * <code>required string name = 1;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string name = 1;</code>
     */
    public String getName() {
      Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DATABASESETS_FIELD_NUMBER = 2;
    private java.util.List<DatabaseSet> databaseSets_;
    /**
     * <code>repeated .com.ctrip.framework.dal.models.DatabaseSet databaseSets = 2;</code>
     */
    public java.util.List<DatabaseSet> getDatabaseSetsList() {
      return databaseSets_;
    }
    /**
     * <code>repeated .com.ctrip.framework.dal.models.DatabaseSet databaseSets = 2;</code>
     */
    public java.util.List<? extends DatabaseSetOrBuilder>
        getDatabaseSetsOrBuilderList() {
      return databaseSets_;
    }
    /**
     * <code>repeated .com.ctrip.framework.dal.models.DatabaseSet databaseSets = 2;</code>
     */
    public int getDatabaseSetsCount() {
      return databaseSets_.size();
    }
    /**
     * <code>repeated .com.ctrip.framework.dal.models.DatabaseSet databaseSets = 2;</code>
     */
    public DatabaseSet getDatabaseSets(int index) {
      return databaseSets_.get(index);
    }
    /**
     * <code>repeated .com.ctrip.framework.dal.models.DatabaseSet databaseSets = 2;</code>
     */
    public DatabaseSetOrBuilder getDatabaseSetsOrBuilder(
        int index) {
      return databaseSets_.get(index);
    }

    private void initFields() {
      name_ = "";
      databaseSets_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getDatabaseSetsCount(); i++) {
        if (!getDatabaseSets(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      for (int i = 0; i < databaseSets_.size(); i++) {
        output.writeMessage(2, databaseSets_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      for (int i = 0; i < databaseSets_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, databaseSets_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static DalConfigure parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static DalConfigure parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static DalConfigure parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static DalConfigure parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static DalConfigure parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static DalConfigure parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static DalConfigure parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static DalConfigure parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static DalConfigure parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static DalConfigure parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DalConfigure prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.ctrip.framework.dal.models.DalConfigure}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.ctrip.framework.dal.models.DalConfigure)
        DalConfigureOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DalModels.internal_static_com_ctrip_framework_dal_models_DalConfigure_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DalModels.internal_static_com_ctrip_framework_dal_models_DalConfigure_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                DalConfigure.class, Builder.class);
      }

      // Construct using com.ctrip.framework.dal.models.DalModels.DalConfigure.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDatabaseSetsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (databaseSetsBuilder_ == null) {
          databaseSets_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          databaseSetsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DalModels.internal_static_com_ctrip_framework_dal_models_DalConfigure_descriptor;
      }

      public DalConfigure getDefaultInstanceForType() {
        return DalConfigure.getDefaultInstance();
      }

      public DalConfigure build() {
        DalConfigure result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public DalConfigure buildPartial() {
        DalConfigure result = new DalConfigure(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (databaseSetsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            databaseSets_ = java.util.Collections.unmodifiableList(databaseSets_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.databaseSets_ = databaseSets_;
        } else {
          result.databaseSets_ = databaseSetsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DalConfigure) {
          return mergeFrom((DalConfigure)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(DalConfigure other) {
        if (other == DalConfigure.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        if (databaseSetsBuilder_ == null) {
          if (!other.databaseSets_.isEmpty()) {
            if (databaseSets_.isEmpty()) {
              databaseSets_ = other.databaseSets_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureDatabaseSetsIsMutable();
              databaseSets_.addAll(other.databaseSets_);
            }
            onChanged();
          }
        } else {
          if (!other.databaseSets_.isEmpty()) {
            if (databaseSetsBuilder_.isEmpty()) {
              databaseSetsBuilder_.dispose();
              databaseSetsBuilder_ = null;
              databaseSets_ = other.databaseSets_;
              bitField0_ = (bitField0_ & ~0x00000002);
              databaseSetsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDatabaseSetsFieldBuilder() : null;
            } else {
              databaseSetsBuilder_.addAllMessages(other.databaseSets_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasName()) {
          
          return false;
        }
        for (int i = 0; i < getDatabaseSetsCount(); i++) {
          if (!getDatabaseSets(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        DalConfigure parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (DalConfigure) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private Object name_ = "";
      /**
       * <code>required string name = 1;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string name = 1;</code>
       */
      public String getName() {
        Object ref = name_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>required string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 1;</code>
       */
      public Builder setName(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 1;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      private java.util.List<DatabaseSet> databaseSets_ =
        java.util.Collections.emptyList();
      private void ensureDatabaseSetsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          databaseSets_ = new java.util.ArrayList<DatabaseSet>(databaseSets_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          DatabaseSet, DatabaseSet.Builder, DatabaseSetOrBuilder> databaseSetsBuilder_;

      /**
       * <code>repeated .com.ctrip.framework.dal.models.DatabaseSet databaseSets = 2;</code>
       */
      public java.util.List<DatabaseSet> getDatabaseSetsList() {
        if (databaseSetsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(databaseSets_);
        } else {
          return databaseSetsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DatabaseSet databaseSets = 2;</code>
       */
      public int getDatabaseSetsCount() {
        if (databaseSetsBuilder_ == null) {
          return databaseSets_.size();
        } else {
          return databaseSetsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DatabaseSet databaseSets = 2;</code>
       */
      public DatabaseSet getDatabaseSets(int index) {
        if (databaseSetsBuilder_ == null) {
          return databaseSets_.get(index);
        } else {
          return databaseSetsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DatabaseSet databaseSets = 2;</code>
       */
      public Builder setDatabaseSets(
          int index, DatabaseSet value) {
        if (databaseSetsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDatabaseSetsIsMutable();
          databaseSets_.set(index, value);
          onChanged();
        } else {
          databaseSetsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DatabaseSet databaseSets = 2;</code>
       */
      public Builder setDatabaseSets(
          int index, DatabaseSet.Builder builderForValue) {
        if (databaseSetsBuilder_ == null) {
          ensureDatabaseSetsIsMutable();
          databaseSets_.set(index, builderForValue.build());
          onChanged();
        } else {
          databaseSetsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DatabaseSet databaseSets = 2;</code>
       */
      public Builder addDatabaseSets(DatabaseSet value) {
        if (databaseSetsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDatabaseSetsIsMutable();
          databaseSets_.add(value);
          onChanged();
        } else {
          databaseSetsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DatabaseSet databaseSets = 2;</code>
       */
      public Builder addDatabaseSets(
          int index, DatabaseSet value) {
        if (databaseSetsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDatabaseSetsIsMutable();
          databaseSets_.add(index, value);
          onChanged();
        } else {
          databaseSetsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DatabaseSet databaseSets = 2;</code>
       */
      public Builder addDatabaseSets(
          DatabaseSet.Builder builderForValue) {
        if (databaseSetsBuilder_ == null) {
          ensureDatabaseSetsIsMutable();
          databaseSets_.add(builderForValue.build());
          onChanged();
        } else {
          databaseSetsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DatabaseSet databaseSets = 2;</code>
       */
      public Builder addDatabaseSets(
          int index, DatabaseSet.Builder builderForValue) {
        if (databaseSetsBuilder_ == null) {
          ensureDatabaseSetsIsMutable();
          databaseSets_.add(index, builderForValue.build());
          onChanged();
        } else {
          databaseSetsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DatabaseSet databaseSets = 2;</code>
       */
      public Builder addAllDatabaseSets(
          Iterable<? extends DatabaseSet> values) {
        if (databaseSetsBuilder_ == null) {
          ensureDatabaseSetsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, databaseSets_);
          onChanged();
        } else {
          databaseSetsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DatabaseSet databaseSets = 2;</code>
       */
      public Builder clearDatabaseSets() {
        if (databaseSetsBuilder_ == null) {
          databaseSets_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          databaseSetsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DatabaseSet databaseSets = 2;</code>
       */
      public Builder removeDatabaseSets(int index) {
        if (databaseSetsBuilder_ == null) {
          ensureDatabaseSetsIsMutable();
          databaseSets_.remove(index);
          onChanged();
        } else {
          databaseSetsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DatabaseSet databaseSets = 2;</code>
       */
      public DatabaseSet.Builder getDatabaseSetsBuilder(
          int index) {
        return getDatabaseSetsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DatabaseSet databaseSets = 2;</code>
       */
      public DatabaseSetOrBuilder getDatabaseSetsOrBuilder(
          int index) {
        if (databaseSetsBuilder_ == null) {
          return databaseSets_.get(index);  } else {
          return databaseSetsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DatabaseSet databaseSets = 2;</code>
       */
      public java.util.List<? extends DatabaseSetOrBuilder>
           getDatabaseSetsOrBuilderList() {
        if (databaseSetsBuilder_ != null) {
          return databaseSetsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(databaseSets_);
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DatabaseSet databaseSets = 2;</code>
       */
      public DatabaseSet.Builder addDatabaseSetsBuilder() {
        return getDatabaseSetsFieldBuilder().addBuilder(
            DatabaseSet.getDefaultInstance());
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DatabaseSet databaseSets = 2;</code>
       */
      public DatabaseSet.Builder addDatabaseSetsBuilder(
          int index) {
        return getDatabaseSetsFieldBuilder().addBuilder(
            index, DatabaseSet.getDefaultInstance());
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.DatabaseSet databaseSets = 2;</code>
       */
      public java.util.List<DatabaseSet.Builder>
           getDatabaseSetsBuilderList() {
        return getDatabaseSetsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          DatabaseSet, DatabaseSet.Builder, DatabaseSetOrBuilder>
          getDatabaseSetsFieldBuilder() {
        if (databaseSetsBuilder_ == null) {
          databaseSetsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              DatabaseSet, DatabaseSet.Builder, DatabaseSetOrBuilder>(
                  databaseSets_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          databaseSets_ = null;
        }
        return databaseSetsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.ctrip.framework.dal.models.DalConfigure)
    }

    static {
      defaultInstance = new DalConfigure(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.ctrip.framework.dal.models.DalConfigure)
  }

  public interface KeyHolderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.ctrip.framework.dal.models.KeyHolder)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .com.ctrip.framework.dal.models.KeyValue holder = 1;</code>
     */
    java.util.List<KeyValue>
        getHolderList();
    /**
     * <code>repeated .com.ctrip.framework.dal.models.KeyValue holder = 1;</code>
     */
    KeyValue getHolder(int index);
    /**
     * <code>repeated .com.ctrip.framework.dal.models.KeyValue holder = 1;</code>
     */
    int getHolderCount();
    /**
     * <code>repeated .com.ctrip.framework.dal.models.KeyValue holder = 1;</code>
     */
    java.util.List<? extends KeyValueOrBuilder>
        getHolderOrBuilderList();
    /**
     * <code>repeated .com.ctrip.framework.dal.models.KeyValue holder = 1;</code>
     */
    KeyValueOrBuilder getHolderOrBuilder(
            int index);
  }
  /**
   * Protobuf type {@code com.ctrip.framework.dal.models.KeyHolder}
   */
  public static final class KeyHolder extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.ctrip.framework.dal.models.KeyHolder)
      KeyHolderOrBuilder {
    // Use KeyHolder.newBuilder() to construct.
    private KeyHolder(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private KeyHolder(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final KeyHolder defaultInstance;
    public static KeyHolder getDefaultInstance() {
      return defaultInstance;
    }

    public KeyHolder getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private KeyHolder(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                holder_ = new java.util.ArrayList<KeyValue>();
                mutable_bitField0_ |= 0x00000001;
              }
              holder_.add(input.readMessage(KeyValue.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          holder_ = java.util.Collections.unmodifiableList(holder_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DalModels.internal_static_com_ctrip_framework_dal_models_KeyHolder_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DalModels.internal_static_com_ctrip_framework_dal_models_KeyHolder_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              KeyHolder.class, Builder.class);
    }

    public static com.google.protobuf.Parser<KeyHolder> PARSER =
        new com.google.protobuf.AbstractParser<KeyHolder>() {
      public KeyHolder parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new KeyHolder(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<KeyHolder> getParserForType() {
      return PARSER;
    }

    public static final int HOLDER_FIELD_NUMBER = 1;
    private java.util.List<KeyValue> holder_;
    /**
     * <code>repeated .com.ctrip.framework.dal.models.KeyValue holder = 1;</code>
     */
    public java.util.List<KeyValue> getHolderList() {
      return holder_;
    }
    /**
     * <code>repeated .com.ctrip.framework.dal.models.KeyValue holder = 1;</code>
     */
    public java.util.List<? extends KeyValueOrBuilder>
        getHolderOrBuilderList() {
      return holder_;
    }
    /**
     * <code>repeated .com.ctrip.framework.dal.models.KeyValue holder = 1;</code>
     */
    public int getHolderCount() {
      return holder_.size();
    }
    /**
     * <code>repeated .com.ctrip.framework.dal.models.KeyValue holder = 1;</code>
     */
    public KeyValue getHolder(int index) {
      return holder_.get(index);
    }
    /**
     * <code>repeated .com.ctrip.framework.dal.models.KeyValue holder = 1;</code>
     */
    public KeyValueOrBuilder getHolderOrBuilder(
        int index) {
      return holder_.get(index);
    }

    private void initFields() {
      holder_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getHolderCount(); i++) {
        if (!getHolder(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < holder_.size(); i++) {
        output.writeMessage(1, holder_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < holder_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, holder_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static KeyHolder parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static KeyHolder parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static KeyHolder parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static KeyHolder parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static KeyHolder parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static KeyHolder parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static KeyHolder parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static KeyHolder parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static KeyHolder parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static KeyHolder parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(KeyHolder prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.ctrip.framework.dal.models.KeyHolder}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.ctrip.framework.dal.models.KeyHolder)
        KeyHolderOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DalModels.internal_static_com_ctrip_framework_dal_models_KeyHolder_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DalModels.internal_static_com_ctrip_framework_dal_models_KeyHolder_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                KeyHolder.class, Builder.class);
      }

      // Construct using com.ctrip.framework.dal.models.DalModels.KeyHolder.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getHolderFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (holderBuilder_ == null) {
          holder_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          holderBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DalModels.internal_static_com_ctrip_framework_dal_models_KeyHolder_descriptor;
      }

      public KeyHolder getDefaultInstanceForType() {
        return KeyHolder.getDefaultInstance();
      }

      public KeyHolder build() {
        KeyHolder result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public KeyHolder buildPartial() {
        KeyHolder result = new KeyHolder(this);
        int from_bitField0_ = bitField0_;
        if (holderBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            holder_ = java.util.Collections.unmodifiableList(holder_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.holder_ = holder_;
        } else {
          result.holder_ = holderBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof KeyHolder) {
          return mergeFrom((KeyHolder)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(KeyHolder other) {
        if (other == KeyHolder.getDefaultInstance()) return this;
        if (holderBuilder_ == null) {
          if (!other.holder_.isEmpty()) {
            if (holder_.isEmpty()) {
              holder_ = other.holder_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureHolderIsMutable();
              holder_.addAll(other.holder_);
            }
            onChanged();
          }
        } else {
          if (!other.holder_.isEmpty()) {
            if (holderBuilder_.isEmpty()) {
              holderBuilder_.dispose();
              holderBuilder_ = null;
              holder_ = other.holder_;
              bitField0_ = (bitField0_ & ~0x00000001);
              holderBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getHolderFieldBuilder() : null;
            } else {
              holderBuilder_.addAllMessages(other.holder_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getHolderCount(); i++) {
          if (!getHolder(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        KeyHolder parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (KeyHolder) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<KeyValue> holder_ =
        java.util.Collections.emptyList();
      private void ensureHolderIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          holder_ = new java.util.ArrayList<KeyValue>(holder_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          KeyValue, KeyValue.Builder, KeyValueOrBuilder> holderBuilder_;

      /**
       * <code>repeated .com.ctrip.framework.dal.models.KeyValue holder = 1;</code>
       */
      public java.util.List<KeyValue> getHolderList() {
        if (holderBuilder_ == null) {
          return java.util.Collections.unmodifiableList(holder_);
        } else {
          return holderBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.KeyValue holder = 1;</code>
       */
      public int getHolderCount() {
        if (holderBuilder_ == null) {
          return holder_.size();
        } else {
          return holderBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.KeyValue holder = 1;</code>
       */
      public KeyValue getHolder(int index) {
        if (holderBuilder_ == null) {
          return holder_.get(index);
        } else {
          return holderBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.KeyValue holder = 1;</code>
       */
      public Builder setHolder(
          int index, KeyValue value) {
        if (holderBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHolderIsMutable();
          holder_.set(index, value);
          onChanged();
        } else {
          holderBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.KeyValue holder = 1;</code>
       */
      public Builder setHolder(
          int index, KeyValue.Builder builderForValue) {
        if (holderBuilder_ == null) {
          ensureHolderIsMutable();
          holder_.set(index, builderForValue.build());
          onChanged();
        } else {
          holderBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.KeyValue holder = 1;</code>
       */
      public Builder addHolder(KeyValue value) {
        if (holderBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHolderIsMutable();
          holder_.add(value);
          onChanged();
        } else {
          holderBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.KeyValue holder = 1;</code>
       */
      public Builder addHolder(
          int index, KeyValue value) {
        if (holderBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHolderIsMutable();
          holder_.add(index, value);
          onChanged();
        } else {
          holderBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.KeyValue holder = 1;</code>
       */
      public Builder addHolder(
          KeyValue.Builder builderForValue) {
        if (holderBuilder_ == null) {
          ensureHolderIsMutable();
          holder_.add(builderForValue.build());
          onChanged();
        } else {
          holderBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.KeyValue holder = 1;</code>
       */
      public Builder addHolder(
          int index, KeyValue.Builder builderForValue) {
        if (holderBuilder_ == null) {
          ensureHolderIsMutable();
          holder_.add(index, builderForValue.build());
          onChanged();
        } else {
          holderBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.KeyValue holder = 1;</code>
       */
      public Builder addAllHolder(
          Iterable<? extends KeyValue> values) {
        if (holderBuilder_ == null) {
          ensureHolderIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, holder_);
          onChanged();
        } else {
          holderBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.KeyValue holder = 1;</code>
       */
      public Builder clearHolder() {
        if (holderBuilder_ == null) {
          holder_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          holderBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.KeyValue holder = 1;</code>
       */
      public Builder removeHolder(int index) {
        if (holderBuilder_ == null) {
          ensureHolderIsMutable();
          holder_.remove(index);
          onChanged();
        } else {
          holderBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.KeyValue holder = 1;</code>
       */
      public KeyValue.Builder getHolderBuilder(
          int index) {
        return getHolderFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.KeyValue holder = 1;</code>
       */
      public KeyValueOrBuilder getHolderOrBuilder(
          int index) {
        if (holderBuilder_ == null) {
          return holder_.get(index);  } else {
          return holderBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.KeyValue holder = 1;</code>
       */
      public java.util.List<? extends KeyValueOrBuilder>
           getHolderOrBuilderList() {
        if (holderBuilder_ != null) {
          return holderBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(holder_);
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.KeyValue holder = 1;</code>
       */
      public KeyValue.Builder addHolderBuilder() {
        return getHolderFieldBuilder().addBuilder(
            KeyValue.getDefaultInstance());
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.KeyValue holder = 1;</code>
       */
      public KeyValue.Builder addHolderBuilder(
          int index) {
        return getHolderFieldBuilder().addBuilder(
            index, KeyValue.getDefaultInstance());
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.KeyValue holder = 1;</code>
       */
      public java.util.List<KeyValue.Builder>
           getHolderBuilderList() {
        return getHolderFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          KeyValue, KeyValue.Builder, KeyValueOrBuilder>
          getHolderFieldBuilder() {
        if (holderBuilder_ == null) {
          holderBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              KeyValue, KeyValue.Builder, KeyValueOrBuilder>(
                  holder_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          holder_ = null;
        }
        return holderBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.ctrip.framework.dal.models.KeyHolder)
    }

    static {
      defaultInstance = new KeyHolder(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.ctrip.framework.dal.models.KeyHolder)
  }

  public interface RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.ctrip.framework.dal.models.Request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .com.ctrip.framework.dal.models.Version version = 1;</code>
     */
    boolean hasVersion();
    /**
     * <code>required .com.ctrip.framework.dal.models.Version version = 1;</code>
     */
    Version getVersion();
    /**
     * <code>required .com.ctrip.framework.dal.models.Version version = 1;</code>
     */
    VersionOrBuilder getVersionOrBuilder();

    /**
     * <code>optional string logicDb = 2;</code>
     */
    boolean hasLogicDb();
    /**
     * <code>optional string logicDb = 2;</code>
     */
    String getLogicDb();
    /**
     * <code>optional string logicDb = 2;</code>
     */
    com.google.protobuf.ByteString
        getLogicDbBytes();

    /**
     * <code>required .com.ctrip.framework.dal.models.CommandType commandType = 3;</code>
     */
    boolean hasCommandType();
    /**
     * <code>required .com.ctrip.framework.dal.models.CommandType commandType = 3;</code>
     */
    CommandType getCommandType();

    /**
     * <code>optional bool master = 4;</code>
     */
    boolean hasMaster();
    /**
     * <code>optional bool master = 4;</code>
     */
    boolean getMaster();

    /**
     * <code>optional string credential = 5;</code>
     */
    boolean hasCredential();
    /**
     * <code>optional string credential = 5;</code>
     */
    String getCredential();
    /**
     * <code>optional string credential = 5;</code>
     */
    com.google.protobuf.ByteString
        getCredentialBytes();

    /**
     * <code>optional .com.ctrip.framework.dal.models.DalHints hints = 6;</code>
     */
    boolean hasHints();
    /**
     * <code>optional .com.ctrip.framework.dal.models.DalHints hints = 6;</code>
     */
    DalHints getHints();
    /**
     * <code>optional .com.ctrip.framework.dal.models.DalHints hints = 6;</code>
     */
    DalHintsOrBuilder getHintsOrBuilder();

    /**
     * <code>optional .com.ctrip.framework.dal.models.Transaction transaction = 7;</code>
     */
    boolean hasTransaction();
    /**
     * <code>optional .com.ctrip.framework.dal.models.Transaction transaction = 7;</code>
     */
    Transaction getTransaction();
    /**
     * <code>optional .com.ctrip.framework.dal.models.Transaction transaction = 7;</code>
     */
    TransactionOrBuilder getTransactionOrBuilder();

    /**
     * <code>optional .com.ctrip.framework.dal.models.RequestMessage message = 8;</code>
     */
    boolean hasMessage();
    /**
     * <code>optional .com.ctrip.framework.dal.models.RequestMessage message = 8;</code>
     */
    RequestMessage getMessage();
    /**
     * <code>optional .com.ctrip.framework.dal.models.RequestMessage message = 8;</code>
     */
    RequestMessageOrBuilder getMessageOrBuilder();

    /**
     * <code>required int32 requestId = 9;</code>
     */
    boolean hasRequestId();
    /**
     * <code>required int32 requestId = 9;</code>
     */
    int getRequestId();

    /**
     * <code>repeated .com.ctrip.framework.dal.models.ColumnMata queryHanders = 10;</code>
     */
    java.util.List<ColumnMata>
        getQueryHandersList();
    /**
     * <code>repeated .com.ctrip.framework.dal.models.ColumnMata queryHanders = 10;</code>
     */
    ColumnMata getQueryHanders(int index);
    /**
     * <code>repeated .com.ctrip.framework.dal.models.ColumnMata queryHanders = 10;</code>
     */
    int getQueryHandersCount();
    /**
     * <code>repeated .com.ctrip.framework.dal.models.ColumnMata queryHanders = 10;</code>
     */
    java.util.List<? extends ColumnMataOrBuilder>
        getQueryHandersOrBuilderList();
    /**
     * <code>repeated .com.ctrip.framework.dal.models.ColumnMata queryHanders = 10;</code>
     */
    ColumnMataOrBuilder getQueryHandersOrBuilder(
            int index);

    /**
     * <code>optional bool compress = 11;</code>
     */
    boolean hasCompress();
    /**
     * <code>optional bool compress = 11;</code>
     */
    boolean getCompress();
  }
  /**
   * Protobuf type {@code com.ctrip.framework.dal.models.Request}
   */
  public static final class Request extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.ctrip.framework.dal.models.Request)
      RequestOrBuilder {
    // Use Request.newBuilder() to construct.
    private Request(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Request(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Request defaultInstance;
    public static Request getDefaultInstance() {
      return defaultInstance;
    }

    public Request getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              Version.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = version_.toBuilder();
              }
              version_ = input.readMessage(Version.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(version_);
                version_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              logicDb_ = bs;
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              CommandType value = CommandType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                commandType_ = value;
              }
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              master_ = input.readBool();
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000010;
              credential_ = bs;
              break;
            }
            case 50: {
              DalHints.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = hints_.toBuilder();
              }
              hints_ = input.readMessage(DalHints.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(hints_);
                hints_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 58: {
              Transaction.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = transaction_.toBuilder();
              }
              transaction_ = input.readMessage(Transaction.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(transaction_);
                transaction_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
            case 66: {
              RequestMessage.Builder subBuilder = null;
              if (((bitField0_ & 0x00000080) == 0x00000080)) {
                subBuilder = message_.toBuilder();
              }
              message_ = input.readMessage(RequestMessage.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(message_);
                message_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000080;
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              requestId_ = input.readInt32();
              break;
            }
            case 82: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                queryHanders_ = new java.util.ArrayList<ColumnMata>();
                mutable_bitField0_ |= 0x00000200;
              }
              queryHanders_.add(input.readMessage(ColumnMata.PARSER, extensionRegistry));
              break;
            }
            case 88: {
              bitField0_ |= 0x00000200;
              compress_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          queryHanders_ = java.util.Collections.unmodifiableList(queryHanders_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DalModels.internal_static_com_ctrip_framework_dal_models_Request_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DalModels.internal_static_com_ctrip_framework_dal_models_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Request.class, Builder.class);
    }

    public static com.google.protobuf.Parser<Request> PARSER =
        new com.google.protobuf.AbstractParser<Request>() {
      public Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Request(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<Request> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int VERSION_FIELD_NUMBER = 1;
    private Version version_;
    /**
     * <code>required .com.ctrip.framework.dal.models.Version version = 1;</code>
     */
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .com.ctrip.framework.dal.models.Version version = 1;</code>
     */
    public Version getVersion() {
      return version_;
    }
    /**
     * <code>required .com.ctrip.framework.dal.models.Version version = 1;</code>
     */
    public VersionOrBuilder getVersionOrBuilder() {
      return version_;
    }

    public static final int LOGICDB_FIELD_NUMBER = 2;
    private Object logicDb_;
    /**
     * <code>optional string logicDb = 2;</code>
     */
    public boolean hasLogicDb() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string logicDb = 2;</code>
     */
    public String getLogicDb() {
      Object ref = logicDb_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          logicDb_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string logicDb = 2;</code>
     */
    public com.google.protobuf.ByteString
        getLogicDbBytes() {
      Object ref = logicDb_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        logicDb_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COMMANDTYPE_FIELD_NUMBER = 3;
    private CommandType commandType_;
    /**
     * <code>required .com.ctrip.framework.dal.models.CommandType commandType = 3;</code>
     */
    public boolean hasCommandType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .com.ctrip.framework.dal.models.CommandType commandType = 3;</code>
     */
    public CommandType getCommandType() {
      return commandType_;
    }

    public static final int MASTER_FIELD_NUMBER = 4;
    private boolean master_;
    /**
     * <code>optional bool master = 4;</code>
     */
    public boolean hasMaster() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool master = 4;</code>
     */
    public boolean getMaster() {
      return master_;
    }

    public static final int CREDENTIAL_FIELD_NUMBER = 5;
    private Object credential_;
    /**
     * <code>optional string credential = 5;</code>
     */
    public boolean hasCredential() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string credential = 5;</code>
     */
    public String getCredential() {
      Object ref = credential_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          credential_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string credential = 5;</code>
     */
    public com.google.protobuf.ByteString
        getCredentialBytes() {
      Object ref = credential_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        credential_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int HINTS_FIELD_NUMBER = 6;
    private DalHints hints_;
    /**
     * <code>optional .com.ctrip.framework.dal.models.DalHints hints = 6;</code>
     */
    public boolean hasHints() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .com.ctrip.framework.dal.models.DalHints hints = 6;</code>
     */
    public DalHints getHints() {
      return hints_;
    }
    /**
     * <code>optional .com.ctrip.framework.dal.models.DalHints hints = 6;</code>
     */
    public DalHintsOrBuilder getHintsOrBuilder() {
      return hints_;
    }

    public static final int TRANSACTION_FIELD_NUMBER = 7;
    private Transaction transaction_;
    /**
     * <code>optional .com.ctrip.framework.dal.models.Transaction transaction = 7;</code>
     */
    public boolean hasTransaction() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .com.ctrip.framework.dal.models.Transaction transaction = 7;</code>
     */
    public Transaction getTransaction() {
      return transaction_;
    }
    /**
     * <code>optional .com.ctrip.framework.dal.models.Transaction transaction = 7;</code>
     */
    public TransactionOrBuilder getTransactionOrBuilder() {
      return transaction_;
    }

    public static final int MESSAGE_FIELD_NUMBER = 8;
    private RequestMessage message_;
    /**
     * <code>optional .com.ctrip.framework.dal.models.RequestMessage message = 8;</code>
     */
    public boolean hasMessage() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .com.ctrip.framework.dal.models.RequestMessage message = 8;</code>
     */
    public RequestMessage getMessage() {
      return message_;
    }
    /**
     * <code>optional .com.ctrip.framework.dal.models.RequestMessage message = 8;</code>
     */
    public RequestMessageOrBuilder getMessageOrBuilder() {
      return message_;
    }

    public static final int REQUESTID_FIELD_NUMBER = 9;
    private int requestId_;
    /**
     * <code>required int32 requestId = 9;</code>
     */
    public boolean hasRequestId() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>required int32 requestId = 9;</code>
     */
    public int getRequestId() {
      return requestId_;
    }

    public static final int QUERYHANDERS_FIELD_NUMBER = 10;
    private java.util.List<ColumnMata> queryHanders_;
    /**
     * <code>repeated .com.ctrip.framework.dal.models.ColumnMata queryHanders = 10;</code>
     */
    public java.util.List<ColumnMata> getQueryHandersList() {
      return queryHanders_;
    }
    /**
     * <code>repeated .com.ctrip.framework.dal.models.ColumnMata queryHanders = 10;</code>
     */
    public java.util.List<? extends ColumnMataOrBuilder>
        getQueryHandersOrBuilderList() {
      return queryHanders_;
    }
    /**
     * <code>repeated .com.ctrip.framework.dal.models.ColumnMata queryHanders = 10;</code>
     */
    public int getQueryHandersCount() {
      return queryHanders_.size();
    }
    /**
     * <code>repeated .com.ctrip.framework.dal.models.ColumnMata queryHanders = 10;</code>
     */
    public ColumnMata getQueryHanders(int index) {
      return queryHanders_.get(index);
    }
    /**
     * <code>repeated .com.ctrip.framework.dal.models.ColumnMata queryHanders = 10;</code>
     */
    public ColumnMataOrBuilder getQueryHandersOrBuilder(
        int index) {
      return queryHanders_.get(index);
    }

    public static final int COMPRESS_FIELD_NUMBER = 11;
    private boolean compress_;
    /**
     * <code>optional bool compress = 11;</code>
     */
    public boolean hasCompress() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional bool compress = 11;</code>
     */
    public boolean getCompress() {
      return compress_;
    }

    private void initFields() {
      version_ = Version.getDefaultInstance();
      logicDb_ = "";
      commandType_ = CommandType.QUERY;
      master_ = false;
      credential_ = "";
      hints_ = DalHints.getDefaultInstance();
      transaction_ = Transaction.getDefaultInstance();
      message_ = RequestMessage.getDefaultInstance();
      requestId_ = 0;
      queryHanders_ = java.util.Collections.emptyList();
      compress_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasVersion()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCommandType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRequestId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getVersion().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasHints()) {
        if (!getHints().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTransaction()) {
        if (!getTransaction().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasMessage()) {
        if (!getMessage().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getQueryHandersCount(); i++) {
        if (!getQueryHanders(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, version_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getLogicDbBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, commandType_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, master_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getCredentialBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(6, hints_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(7, transaction_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(8, message_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, requestId_);
      }
      for (int i = 0; i < queryHanders_.size(); i++) {
        output.writeMessage(10, queryHanders_.get(i));
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBool(11, compress_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, version_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getLogicDbBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, commandType_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, master_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getCredentialBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, hints_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, transaction_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, message_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, requestId_);
      }
      for (int i = 0; i < queryHanders_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, queryHanders_.get(i));
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(11, compress_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Request prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.ctrip.framework.dal.models.Request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.ctrip.framework.dal.models.Request)
        RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DalModels.internal_static_com_ctrip_framework_dal_models_Request_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DalModels.internal_static_com_ctrip_framework_dal_models_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Request.class, Builder.class);
      }

      // Construct using com.ctrip.framework.dal.models.DalModels.Request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getVersionFieldBuilder();
          getHintsFieldBuilder();
          getTransactionFieldBuilder();
          getMessageFieldBuilder();
          getQueryHandersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (versionBuilder_ == null) {
          version_ = Version.getDefaultInstance();
        } else {
          versionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        logicDb_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        commandType_ = CommandType.QUERY;
        bitField0_ = (bitField0_ & ~0x00000004);
        master_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        credential_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        if (hintsBuilder_ == null) {
          hints_ = DalHints.getDefaultInstance();
        } else {
          hintsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        if (transactionBuilder_ == null) {
          transaction_ = Transaction.getDefaultInstance();
        } else {
          transactionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        if (messageBuilder_ == null) {
          message_ = RequestMessage.getDefaultInstance();
        } else {
          messageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        requestId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        if (queryHandersBuilder_ == null) {
          queryHanders_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
        } else {
          queryHandersBuilder_.clear();
        }
        compress_ = false;
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DalModels.internal_static_com_ctrip_framework_dal_models_Request_descriptor;
      }

      public Request getDefaultInstanceForType() {
        return Request.getDefaultInstance();
      }

      public Request build() {
        Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Request buildPartial() {
        Request result = new Request(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (versionBuilder_ == null) {
          result.version_ = version_;
        } else {
          result.version_ = versionBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.logicDb_ = logicDb_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.commandType_ = commandType_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.master_ = master_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.credential_ = credential_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        if (hintsBuilder_ == null) {
          result.hints_ = hints_;
        } else {
          result.hints_ = hintsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        if (transactionBuilder_ == null) {
          result.transaction_ = transaction_;
        } else {
          result.transaction_ = transactionBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        if (messageBuilder_ == null) {
          result.message_ = message_;
        } else {
          result.message_ = messageBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.requestId_ = requestId_;
        if (queryHandersBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200)) {
            queryHanders_ = java.util.Collections.unmodifiableList(queryHanders_);
            bitField0_ = (bitField0_ & ~0x00000200);
          }
          result.queryHanders_ = queryHanders_;
        } else {
          result.queryHanders_ = queryHandersBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000200;
        }
        result.compress_ = compress_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Request) {
          return mergeFrom((Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Request other) {
        if (other == Request.getDefaultInstance()) return this;
        if (other.hasVersion()) {
          mergeVersion(other.getVersion());
        }
        if (other.hasLogicDb()) {
          bitField0_ |= 0x00000002;
          logicDb_ = other.logicDb_;
          onChanged();
        }
        if (other.hasCommandType()) {
          setCommandType(other.getCommandType());
        }
        if (other.hasMaster()) {
          setMaster(other.getMaster());
        }
        if (other.hasCredential()) {
          bitField0_ |= 0x00000010;
          credential_ = other.credential_;
          onChanged();
        }
        if (other.hasHints()) {
          mergeHints(other.getHints());
        }
        if (other.hasTransaction()) {
          mergeTransaction(other.getTransaction());
        }
        if (other.hasMessage()) {
          mergeMessage(other.getMessage());
        }
        if (other.hasRequestId()) {
          setRequestId(other.getRequestId());
        }
        if (queryHandersBuilder_ == null) {
          if (!other.queryHanders_.isEmpty()) {
            if (queryHanders_.isEmpty()) {
              queryHanders_ = other.queryHanders_;
              bitField0_ = (bitField0_ & ~0x00000200);
            } else {
              ensureQueryHandersIsMutable();
              queryHanders_.addAll(other.queryHanders_);
            }
            onChanged();
          }
        } else {
          if (!other.queryHanders_.isEmpty()) {
            if (queryHandersBuilder_.isEmpty()) {
              queryHandersBuilder_.dispose();
              queryHandersBuilder_ = null;
              queryHanders_ = other.queryHanders_;
              bitField0_ = (bitField0_ & ~0x00000200);
              queryHandersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getQueryHandersFieldBuilder() : null;
            } else {
              queryHandersBuilder_.addAllMessages(other.queryHanders_);
            }
          }
        }
        if (other.hasCompress()) {
          setCompress(other.getCompress());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasVersion()) {
          
          return false;
        }
        if (!hasCommandType()) {
          
          return false;
        }
        if (!hasRequestId()) {
          
          return false;
        }
        if (!getVersion().isInitialized()) {
          
          return false;
        }
        if (hasHints()) {
          if (!getHints().isInitialized()) {
            
            return false;
          }
        }
        if (hasTransaction()) {
          if (!getTransaction().isInitialized()) {
            
            return false;
          }
        }
        if (hasMessage()) {
          if (!getMessage().isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getQueryHandersCount(); i++) {
          if (!getQueryHanders(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Request) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private Version version_ = Version.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          Version, Version.Builder, VersionOrBuilder> versionBuilder_;
      /**
       * <code>required .com.ctrip.framework.dal.models.Version version = 1;</code>
       */
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .com.ctrip.framework.dal.models.Version version = 1;</code>
       */
      public Version getVersion() {
        if (versionBuilder_ == null) {
          return version_;
        } else {
          return versionBuilder_.getMessage();
        }
      }
      /**
       * <code>required .com.ctrip.framework.dal.models.Version version = 1;</code>
       */
      public Builder setVersion(Version value) {
        if (versionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          version_ = value;
          onChanged();
        } else {
          versionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .com.ctrip.framework.dal.models.Version version = 1;</code>
       */
      public Builder setVersion(
          Version.Builder builderForValue) {
        if (versionBuilder_ == null) {
          version_ = builderForValue.build();
          onChanged();
        } else {
          versionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .com.ctrip.framework.dal.models.Version version = 1;</code>
       */
      public Builder mergeVersion(Version value) {
        if (versionBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              version_ != Version.getDefaultInstance()) {
            version_ =
              Version.newBuilder(version_).mergeFrom(value).buildPartial();
          } else {
            version_ = value;
          }
          onChanged();
        } else {
          versionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .com.ctrip.framework.dal.models.Version version = 1;</code>
       */
      public Builder clearVersion() {
        if (versionBuilder_ == null) {
          version_ = Version.getDefaultInstance();
          onChanged();
        } else {
          versionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .com.ctrip.framework.dal.models.Version version = 1;</code>
       */
      public Version.Builder getVersionBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getVersionFieldBuilder().getBuilder();
      }
      /**
       * <code>required .com.ctrip.framework.dal.models.Version version = 1;</code>
       */
      public VersionOrBuilder getVersionOrBuilder() {
        if (versionBuilder_ != null) {
          return versionBuilder_.getMessageOrBuilder();
        } else {
          return version_;
        }
      }
      /**
       * <code>required .com.ctrip.framework.dal.models.Version version = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          Version, Version.Builder, VersionOrBuilder>
          getVersionFieldBuilder() {
        if (versionBuilder_ == null) {
          versionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Version, Version.Builder, VersionOrBuilder>(
                  getVersion(),
                  getParentForChildren(),
                  isClean());
          version_ = null;
        }
        return versionBuilder_;
      }

      private Object logicDb_ = "";
      /**
       * <code>optional string logicDb = 2;</code>
       */
      public boolean hasLogicDb() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string logicDb = 2;</code>
       */
      public String getLogicDb() {
        Object ref = logicDb_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            logicDb_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string logicDb = 2;</code>
       */
      public com.google.protobuf.ByteString
          getLogicDbBytes() {
        Object ref = logicDb_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          logicDb_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string logicDb = 2;</code>
       */
      public Builder setLogicDb(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        logicDb_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string logicDb = 2;</code>
       */
      public Builder clearLogicDb() {
        bitField0_ = (bitField0_ & ~0x00000002);
        logicDb_ = getDefaultInstance().getLogicDb();
        onChanged();
        return this;
      }
      /**
       * <code>optional string logicDb = 2;</code>
       */
      public Builder setLogicDbBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        logicDb_ = value;
        onChanged();
        return this;
      }

      private CommandType commandType_ = CommandType.QUERY;
      /**
       * <code>required .com.ctrip.framework.dal.models.CommandType commandType = 3;</code>
       */
      public boolean hasCommandType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .com.ctrip.framework.dal.models.CommandType commandType = 3;</code>
       */
      public CommandType getCommandType() {
        return commandType_;
      }
      /**
       * <code>required .com.ctrip.framework.dal.models.CommandType commandType = 3;</code>
       */
      public Builder setCommandType(CommandType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        commandType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .com.ctrip.framework.dal.models.CommandType commandType = 3;</code>
       */
      public Builder clearCommandType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        commandType_ = CommandType.QUERY;
        onChanged();
        return this;
      }

      private boolean master_ ;
      /**
       * <code>optional bool master = 4;</code>
       */
      public boolean hasMaster() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool master = 4;</code>
       */
      public boolean getMaster() {
        return master_;
      }
      /**
       * <code>optional bool master = 4;</code>
       */
      public Builder setMaster(boolean value) {
        bitField0_ |= 0x00000008;
        master_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool master = 4;</code>
       */
      public Builder clearMaster() {
        bitField0_ = (bitField0_ & ~0x00000008);
        master_ = false;
        onChanged();
        return this;
      }

      private Object credential_ = "";
      /**
       * <code>optional string credential = 5;</code>
       */
      public boolean hasCredential() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string credential = 5;</code>
       */
      public String getCredential() {
        Object ref = credential_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            credential_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string credential = 5;</code>
       */
      public com.google.protobuf.ByteString
          getCredentialBytes() {
        Object ref = credential_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          credential_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string credential = 5;</code>
       */
      public Builder setCredential(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        credential_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string credential = 5;</code>
       */
      public Builder clearCredential() {
        bitField0_ = (bitField0_ & ~0x00000010);
        credential_ = getDefaultInstance().getCredential();
        onChanged();
        return this;
      }
      /**
       * <code>optional string credential = 5;</code>
       */
      public Builder setCredentialBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        credential_ = value;
        onChanged();
        return this;
      }

      private DalHints hints_ = DalHints.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          DalHints, DalHints.Builder, DalHintsOrBuilder> hintsBuilder_;
      /**
       * <code>optional .com.ctrip.framework.dal.models.DalHints hints = 6;</code>
       */
      public boolean hasHints() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.DalHints hints = 6;</code>
       */
      public DalHints getHints() {
        if (hintsBuilder_ == null) {
          return hints_;
        } else {
          return hintsBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.DalHints hints = 6;</code>
       */
      public Builder setHints(DalHints value) {
        if (hintsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          hints_ = value;
          onChanged();
        } else {
          hintsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.DalHints hints = 6;</code>
       */
      public Builder setHints(
          DalHints.Builder builderForValue) {
        if (hintsBuilder_ == null) {
          hints_ = builderForValue.build();
          onChanged();
        } else {
          hintsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.DalHints hints = 6;</code>
       */
      public Builder mergeHints(DalHints value) {
        if (hintsBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              hints_ != DalHints.getDefaultInstance()) {
            hints_ =
              DalHints.newBuilder(hints_).mergeFrom(value).buildPartial();
          } else {
            hints_ = value;
          }
          onChanged();
        } else {
          hintsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.DalHints hints = 6;</code>
       */
      public Builder clearHints() {
        if (hintsBuilder_ == null) {
          hints_ = DalHints.getDefaultInstance();
          onChanged();
        } else {
          hintsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.DalHints hints = 6;</code>
       */
      public DalHints.Builder getHintsBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getHintsFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.DalHints hints = 6;</code>
       */
      public DalHintsOrBuilder getHintsOrBuilder() {
        if (hintsBuilder_ != null) {
          return hintsBuilder_.getMessageOrBuilder();
        } else {
          return hints_;
        }
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.DalHints hints = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          DalHints, DalHints.Builder, DalHintsOrBuilder>
          getHintsFieldBuilder() {
        if (hintsBuilder_ == null) {
          hintsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              DalHints, DalHints.Builder, DalHintsOrBuilder>(
                  getHints(),
                  getParentForChildren(),
                  isClean());
          hints_ = null;
        }
        return hintsBuilder_;
      }

      private Transaction transaction_ = Transaction.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          Transaction, Transaction.Builder, TransactionOrBuilder> transactionBuilder_;
      /**
       * <code>optional .com.ctrip.framework.dal.models.Transaction transaction = 7;</code>
       */
      public boolean hasTransaction() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.Transaction transaction = 7;</code>
       */
      public Transaction getTransaction() {
        if (transactionBuilder_ == null) {
          return transaction_;
        } else {
          return transactionBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.Transaction transaction = 7;</code>
       */
      public Builder setTransaction(Transaction value) {
        if (transactionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          transaction_ = value;
          onChanged();
        } else {
          transactionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.Transaction transaction = 7;</code>
       */
      public Builder setTransaction(
          Transaction.Builder builderForValue) {
        if (transactionBuilder_ == null) {
          transaction_ = builderForValue.build();
          onChanged();
        } else {
          transactionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.Transaction transaction = 7;</code>
       */
      public Builder mergeTransaction(Transaction value) {
        if (transactionBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              transaction_ != Transaction.getDefaultInstance()) {
            transaction_ =
              Transaction.newBuilder(transaction_).mergeFrom(value).buildPartial();
          } else {
            transaction_ = value;
          }
          onChanged();
        } else {
          transactionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.Transaction transaction = 7;</code>
       */
      public Builder clearTransaction() {
        if (transactionBuilder_ == null) {
          transaction_ = Transaction.getDefaultInstance();
          onChanged();
        } else {
          transactionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.Transaction transaction = 7;</code>
       */
      public Transaction.Builder getTransactionBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getTransactionFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.Transaction transaction = 7;</code>
       */
      public TransactionOrBuilder getTransactionOrBuilder() {
        if (transactionBuilder_ != null) {
          return transactionBuilder_.getMessageOrBuilder();
        } else {
          return transaction_;
        }
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.Transaction transaction = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          Transaction, Transaction.Builder, TransactionOrBuilder>
          getTransactionFieldBuilder() {
        if (transactionBuilder_ == null) {
          transactionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Transaction, Transaction.Builder, TransactionOrBuilder>(
                  getTransaction(),
                  getParentForChildren(),
                  isClean());
          transaction_ = null;
        }
        return transactionBuilder_;
      }

      private RequestMessage message_ = RequestMessage.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          RequestMessage, RequestMessage.Builder, RequestMessageOrBuilder> messageBuilder_;
      /**
       * <code>optional .com.ctrip.framework.dal.models.RequestMessage message = 8;</code>
       */
      public boolean hasMessage() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.RequestMessage message = 8;</code>
       */
      public RequestMessage getMessage() {
        if (messageBuilder_ == null) {
          return message_;
        } else {
          return messageBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.RequestMessage message = 8;</code>
       */
      public Builder setMessage(RequestMessage value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          message_ = value;
          onChanged();
        } else {
          messageBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.RequestMessage message = 8;</code>
       */
      public Builder setMessage(
          RequestMessage.Builder builderForValue) {
        if (messageBuilder_ == null) {
          message_ = builderForValue.build();
          onChanged();
        } else {
          messageBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.RequestMessage message = 8;</code>
       */
      public Builder mergeMessage(RequestMessage value) {
        if (messageBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080) &&
              message_ != RequestMessage.getDefaultInstance()) {
            message_ =
              RequestMessage.newBuilder(message_).mergeFrom(value).buildPartial();
          } else {
            message_ = value;
          }
          onChanged();
        } else {
          messageBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.RequestMessage message = 8;</code>
       */
      public Builder clearMessage() {
        if (messageBuilder_ == null) {
          message_ = RequestMessage.getDefaultInstance();
          onChanged();
        } else {
          messageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.RequestMessage message = 8;</code>
       */
      public RequestMessage.Builder getMessageBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getMessageFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.RequestMessage message = 8;</code>
       */
      public RequestMessageOrBuilder getMessageOrBuilder() {
        if (messageBuilder_ != null) {
          return messageBuilder_.getMessageOrBuilder();
        } else {
          return message_;
        }
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.RequestMessage message = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          RequestMessage, RequestMessage.Builder, RequestMessageOrBuilder>
          getMessageFieldBuilder() {
        if (messageBuilder_ == null) {
          messageBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              RequestMessage, RequestMessage.Builder, RequestMessageOrBuilder>(
                  getMessage(),
                  getParentForChildren(),
                  isClean());
          message_ = null;
        }
        return messageBuilder_;
      }

      private int requestId_ ;
      /**
       * <code>required int32 requestId = 9;</code>
       */
      public boolean hasRequestId() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required int32 requestId = 9;</code>
       */
      public int getRequestId() {
        return requestId_;
      }
      /**
       * <code>required int32 requestId = 9;</code>
       */
      public Builder setRequestId(int value) {
        bitField0_ |= 0x00000100;
        requestId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 requestId = 9;</code>
       */
      public Builder clearRequestId() {
        bitField0_ = (bitField0_ & ~0x00000100);
        requestId_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<ColumnMata> queryHanders_ =
        java.util.Collections.emptyList();
      private void ensureQueryHandersIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          queryHanders_ = new java.util.ArrayList<ColumnMata>(queryHanders_);
          bitField0_ |= 0x00000200;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          ColumnMata, ColumnMata.Builder, ColumnMataOrBuilder> queryHandersBuilder_;

      /**
       * <code>repeated .com.ctrip.framework.dal.models.ColumnMata queryHanders = 10;</code>
       */
      public java.util.List<ColumnMata> getQueryHandersList() {
        if (queryHandersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(queryHanders_);
        } else {
          return queryHandersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.ColumnMata queryHanders = 10;</code>
       */
      public int getQueryHandersCount() {
        if (queryHandersBuilder_ == null) {
          return queryHanders_.size();
        } else {
          return queryHandersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.ColumnMata queryHanders = 10;</code>
       */
      public ColumnMata getQueryHanders(int index) {
        if (queryHandersBuilder_ == null) {
          return queryHanders_.get(index);
        } else {
          return queryHandersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.ColumnMata queryHanders = 10;</code>
       */
      public Builder setQueryHanders(
          int index, ColumnMata value) {
        if (queryHandersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureQueryHandersIsMutable();
          queryHanders_.set(index, value);
          onChanged();
        } else {
          queryHandersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.ColumnMata queryHanders = 10;</code>
       */
      public Builder setQueryHanders(
          int index, ColumnMata.Builder builderForValue) {
        if (queryHandersBuilder_ == null) {
          ensureQueryHandersIsMutable();
          queryHanders_.set(index, builderForValue.build());
          onChanged();
        } else {
          queryHandersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.ColumnMata queryHanders = 10;</code>
       */
      public Builder addQueryHanders(ColumnMata value) {
        if (queryHandersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureQueryHandersIsMutable();
          queryHanders_.add(value);
          onChanged();
        } else {
          queryHandersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.ColumnMata queryHanders = 10;</code>
       */
      public Builder addQueryHanders(
          int index, ColumnMata value) {
        if (queryHandersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureQueryHandersIsMutable();
          queryHanders_.add(index, value);
          onChanged();
        } else {
          queryHandersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.ColumnMata queryHanders = 10;</code>
       */
      public Builder addQueryHanders(
          ColumnMata.Builder builderForValue) {
        if (queryHandersBuilder_ == null) {
          ensureQueryHandersIsMutable();
          queryHanders_.add(builderForValue.build());
          onChanged();
        } else {
          queryHandersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.ColumnMata queryHanders = 10;</code>
       */
      public Builder addQueryHanders(
          int index, ColumnMata.Builder builderForValue) {
        if (queryHandersBuilder_ == null) {
          ensureQueryHandersIsMutable();
          queryHanders_.add(index, builderForValue.build());
          onChanged();
        } else {
          queryHandersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.ColumnMata queryHanders = 10;</code>
       */
      public Builder addAllQueryHanders(
          Iterable<? extends ColumnMata> values) {
        if (queryHandersBuilder_ == null) {
          ensureQueryHandersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, queryHanders_);
          onChanged();
        } else {
          queryHandersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.ColumnMata queryHanders = 10;</code>
       */
      public Builder clearQueryHanders() {
        if (queryHandersBuilder_ == null) {
          queryHanders_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
          onChanged();
        } else {
          queryHandersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.ColumnMata queryHanders = 10;</code>
       */
      public Builder removeQueryHanders(int index) {
        if (queryHandersBuilder_ == null) {
          ensureQueryHandersIsMutable();
          queryHanders_.remove(index);
          onChanged();
        } else {
          queryHandersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.ColumnMata queryHanders = 10;</code>
       */
      public ColumnMata.Builder getQueryHandersBuilder(
          int index) {
        return getQueryHandersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.ColumnMata queryHanders = 10;</code>
       */
      public ColumnMataOrBuilder getQueryHandersOrBuilder(
          int index) {
        if (queryHandersBuilder_ == null) {
          return queryHanders_.get(index);  } else {
          return queryHandersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.ColumnMata queryHanders = 10;</code>
       */
      public java.util.List<? extends ColumnMataOrBuilder>
           getQueryHandersOrBuilderList() {
        if (queryHandersBuilder_ != null) {
          return queryHandersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(queryHanders_);
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.ColumnMata queryHanders = 10;</code>
       */
      public ColumnMata.Builder addQueryHandersBuilder() {
        return getQueryHandersFieldBuilder().addBuilder(
            ColumnMata.getDefaultInstance());
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.ColumnMata queryHanders = 10;</code>
       */
      public ColumnMata.Builder addQueryHandersBuilder(
          int index) {
        return getQueryHandersFieldBuilder().addBuilder(
            index, ColumnMata.getDefaultInstance());
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.ColumnMata queryHanders = 10;</code>
       */
      public java.util.List<ColumnMata.Builder>
           getQueryHandersBuilderList() {
        return getQueryHandersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          ColumnMata, ColumnMata.Builder, ColumnMataOrBuilder>
          getQueryHandersFieldBuilder() {
        if (queryHandersBuilder_ == null) {
          queryHandersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              ColumnMata, ColumnMata.Builder, ColumnMataOrBuilder>(
                  queryHanders_,
                  ((bitField0_ & 0x00000200) == 0x00000200),
                  getParentForChildren(),
                  isClean());
          queryHanders_ = null;
        }
        return queryHandersBuilder_;
      }

      private boolean compress_ ;
      /**
       * <code>optional bool compress = 11;</code>
       */
      public boolean hasCompress() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional bool compress = 11;</code>
       */
      public boolean getCompress() {
        return compress_;
      }
      /**
       * <code>optional bool compress = 11;</code>
       */
      public Builder setCompress(boolean value) {
        bitField0_ |= 0x00000400;
        compress_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool compress = 11;</code>
       */
      public Builder clearCompress() {
        bitField0_ = (bitField0_ & ~0x00000400);
        compress_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.ctrip.framework.dal.models.Request)
    }

    static {
      defaultInstance = new Request(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.ctrip.framework.dal.models.Request)
  }

  public interface ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.ctrip.framework.dal.models.Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .com.ctrip.framework.dal.models.LogEntity logEntity = 1;</code>
     */
    boolean hasLogEntity();
    /**
     * <code>optional .com.ctrip.framework.dal.models.LogEntity logEntity = 1;</code>
     */
    LogEntity getLogEntity();
    /**
     * <code>optional .com.ctrip.framework.dal.models.LogEntity logEntity = 1;</code>
     */
    LogEntityOrBuilder getLogEntityOrBuilder();

    /**
     * <code>repeated .com.ctrip.framework.dal.models.ColumnMata queryHanders = 2;</code>
     */
    java.util.List<ColumnMata>
        getQueryHandersList();
    /**
     * <code>repeated .com.ctrip.framework.dal.models.ColumnMata queryHanders = 2;</code>
     */
    ColumnMata getQueryHanders(int index);
    /**
     * <code>repeated .com.ctrip.framework.dal.models.ColumnMata queryHanders = 2;</code>
     */
    int getQueryHandersCount();
    /**
     * <code>repeated .com.ctrip.framework.dal.models.ColumnMata queryHanders = 2;</code>
     */
    java.util.List<? extends ColumnMataOrBuilder>
        getQueryHandersOrBuilderList();
    /**
     * <code>repeated .com.ctrip.framework.dal.models.ColumnMata queryHanders = 2;</code>
     */
    ColumnMataOrBuilder getQueryHandersOrBuilder(
            int index);

    /**
     * <code>optional .com.ctrip.framework.dal.models.DalHints hints = 3;</code>
     */
    boolean hasHints();
    /**
     * <code>optional .com.ctrip.framework.dal.models.DalHints hints = 3;</code>
     */
    DalHints getHints();
    /**
     * <code>optional .com.ctrip.framework.dal.models.DalHints hints = 3;</code>
     */
    DalHintsOrBuilder getHintsOrBuilder();

    /**
     * <code>optional int32 affectRows = 4;</code>
     */
    boolean hasAffectRows();
    /**
     * <code>optional int32 affectRows = 4;</code>
     */
    int getAffectRows();

    /**
     * <code>repeated int32 affectRowsList = 5;</code>
     */
    java.util.List<Integer> getAffectRowsListList();
    /**
     * <code>repeated int32 affectRowsList = 5;</code>
     */
    int getAffectRowsListCount();
    /**
     * <code>repeated int32 affectRowsList = 5;</code>
     */
    int getAffectRowsList(int index);

    /**
     * <code>repeated .com.ctrip.framework.dal.models.KeyHolder keyHolders = 6;</code>
     */
    java.util.List<KeyHolder>
        getKeyHoldersList();
    /**
     * <code>repeated .com.ctrip.framework.dal.models.KeyHolder keyHolders = 6;</code>
     */
    KeyHolder getKeyHolders(int index);
    /**
     * <code>repeated .com.ctrip.framework.dal.models.KeyHolder keyHolders = 6;</code>
     */
    int getKeyHoldersCount();
    /**
     * <code>repeated .com.ctrip.framework.dal.models.KeyHolder keyHolders = 6;</code>
     */
    java.util.List<? extends KeyHolderOrBuilder>
        getKeyHoldersOrBuilderList();
    /**
     * <code>repeated .com.ctrip.framework.dal.models.KeyHolder keyHolders = 6;</code>
     */
    KeyHolderOrBuilder getKeyHoldersOrBuilder(
            int index);

    /**
     * <code>optional .com.ctrip.framework.dal.models.Transaction transaction = 7;</code>
     */
    boolean hasTransaction();
    /**
     * <code>optional .com.ctrip.framework.dal.models.Transaction transaction = 7;</code>
     */
    Transaction getTransaction();
    /**
     * <code>optional .com.ctrip.framework.dal.models.Transaction transaction = 7;</code>
     */
    TransactionOrBuilder getTransactionOrBuilder();

    /**
     * <code>optional .com.ctrip.framework.dal.models.InnerResultSet resultSet = 8;</code>
     */
    boolean hasResultSet();
    /**
     * <code>optional .com.ctrip.framework.dal.models.InnerResultSet resultSet = 8;</code>
     */
    InnerResultSet getResultSet();
    /**
     * <code>optional .com.ctrip.framework.dal.models.InnerResultSet resultSet = 8;</code>
     */
    InnerResultSetOrBuilder getResultSetOrBuilder();

    /**
     * <code>required int32 requestId = 9;</code>
     */
    boolean hasRequestId();
    /**
     * <code>required int32 requestId = 9;</code>
     */
    int getRequestId();

    /**
     * <code>optional string exception = 10;</code>
     */
    boolean hasException();
    /**
     * <code>optional string exception = 10;</code>
     */
    String getException();
    /**
     * <code>optional string exception = 10;</code>
     */
    com.google.protobuf.ByteString
        getExceptionBytes();
  }
  /**
   * Protobuf type {@code com.ctrip.framework.dal.models.Response}
   */
  public static final class Response extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.ctrip.framework.dal.models.Response)
      ResponseOrBuilder {
    // Use Response.newBuilder() to construct.
    private Response(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Response(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Response defaultInstance;
    public static Response getDefaultInstance() {
      return defaultInstance;
    }

    public Response getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              LogEntity.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = logEntity_.toBuilder();
              }
              logEntity_ = input.readMessage(LogEntity.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(logEntity_);
                logEntity_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                queryHanders_ = new java.util.ArrayList<ColumnMata>();
                mutable_bitField0_ |= 0x00000002;
              }
              queryHanders_.add(input.readMessage(ColumnMata.PARSER, extensionRegistry));
              break;
            }
            case 26: {
              DalHints.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = hints_.toBuilder();
              }
              hints_ = input.readMessage(DalHints.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(hints_);
                hints_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              affectRows_ = input.readInt32();
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                affectRowsList_ = new java.util.ArrayList<Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              affectRowsList_.add(input.readInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                affectRowsList_ = new java.util.ArrayList<Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                affectRowsList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                keyHolders_ = new java.util.ArrayList<KeyHolder>();
                mutable_bitField0_ |= 0x00000020;
              }
              keyHolders_.add(input.readMessage(KeyHolder.PARSER, extensionRegistry));
              break;
            }
            case 58: {
              Transaction.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = transaction_.toBuilder();
              }
              transaction_ = input.readMessage(Transaction.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(transaction_);
                transaction_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 66: {
              InnerResultSet.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = resultSet_.toBuilder();
              }
              resultSet_ = input.readMessage(InnerResultSet.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(resultSet_);
                resultSet_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 72: {
              bitField0_ |= 0x00000020;
              requestId_ = input.readInt32();
              break;
            }
            case 82: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000040;
              exception_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          queryHanders_ = java.util.Collections.unmodifiableList(queryHanders_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          affectRowsList_ = java.util.Collections.unmodifiableList(affectRowsList_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          keyHolders_ = java.util.Collections.unmodifiableList(keyHolders_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DalModels.internal_static_com_ctrip_framework_dal_models_Response_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DalModels.internal_static_com_ctrip_framework_dal_models_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Response.class, Builder.class);
    }

    public static com.google.protobuf.Parser<Response> PARSER =
        new com.google.protobuf.AbstractParser<Response>() {
      public Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Response(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<Response> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int LOGENTITY_FIELD_NUMBER = 1;
    private LogEntity logEntity_;
    /**
     * <code>optional .com.ctrip.framework.dal.models.LogEntity logEntity = 1;</code>
     */
    public boolean hasLogEntity() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .com.ctrip.framework.dal.models.LogEntity logEntity = 1;</code>
     */
    public LogEntity getLogEntity() {
      return logEntity_;
    }
    /**
     * <code>optional .com.ctrip.framework.dal.models.LogEntity logEntity = 1;</code>
     */
    public LogEntityOrBuilder getLogEntityOrBuilder() {
      return logEntity_;
    }

    public static final int QUERYHANDERS_FIELD_NUMBER = 2;
    private java.util.List<ColumnMata> queryHanders_;
    /**
     * <code>repeated .com.ctrip.framework.dal.models.ColumnMata queryHanders = 2;</code>
     */
    public java.util.List<ColumnMata> getQueryHandersList() {
      return queryHanders_;
    }
    /**
     * <code>repeated .com.ctrip.framework.dal.models.ColumnMata queryHanders = 2;</code>
     */
    public java.util.List<? extends ColumnMataOrBuilder>
        getQueryHandersOrBuilderList() {
      return queryHanders_;
    }
    /**
     * <code>repeated .com.ctrip.framework.dal.models.ColumnMata queryHanders = 2;</code>
     */
    public int getQueryHandersCount() {
      return queryHanders_.size();
    }
    /**
     * <code>repeated .com.ctrip.framework.dal.models.ColumnMata queryHanders = 2;</code>
     */
    public ColumnMata getQueryHanders(int index) {
      return queryHanders_.get(index);
    }
    /**
     * <code>repeated .com.ctrip.framework.dal.models.ColumnMata queryHanders = 2;</code>
     */
    public ColumnMataOrBuilder getQueryHandersOrBuilder(
        int index) {
      return queryHanders_.get(index);
    }

    public static final int HINTS_FIELD_NUMBER = 3;
    private DalHints hints_;
    /**
     * <code>optional .com.ctrip.framework.dal.models.DalHints hints = 3;</code>
     */
    public boolean hasHints() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .com.ctrip.framework.dal.models.DalHints hints = 3;</code>
     */
    public DalHints getHints() {
      return hints_;
    }
    /**
     * <code>optional .com.ctrip.framework.dal.models.DalHints hints = 3;</code>
     */
    public DalHintsOrBuilder getHintsOrBuilder() {
      return hints_;
    }

    public static final int AFFECTROWS_FIELD_NUMBER = 4;
    private int affectRows_;
    /**
     * <code>optional int32 affectRows = 4;</code>
     */
    public boolean hasAffectRows() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 affectRows = 4;</code>
     */
    public int getAffectRows() {
      return affectRows_;
    }

    public static final int AFFECTROWSLIST_FIELD_NUMBER = 5;
    private java.util.List<Integer> affectRowsList_;
    /**
     * <code>repeated int32 affectRowsList = 5;</code>
     */
    public java.util.List<Integer>
        getAffectRowsListList() {
      return affectRowsList_;
    }
    /**
     * <code>repeated int32 affectRowsList = 5;</code>
     */
    public int getAffectRowsListCount() {
      return affectRowsList_.size();
    }
    /**
     * <code>repeated int32 affectRowsList = 5;</code>
     */
    public int getAffectRowsList(int index) {
      return affectRowsList_.get(index);
    }

    public static final int KEYHOLDERS_FIELD_NUMBER = 6;
    private java.util.List<KeyHolder> keyHolders_;
    /**
     * <code>repeated .com.ctrip.framework.dal.models.KeyHolder keyHolders = 6;</code>
     */
    public java.util.List<KeyHolder> getKeyHoldersList() {
      return keyHolders_;
    }
    /**
     * <code>repeated .com.ctrip.framework.dal.models.KeyHolder keyHolders = 6;</code>
     */
    public java.util.List<? extends KeyHolderOrBuilder>
        getKeyHoldersOrBuilderList() {
      return keyHolders_;
    }
    /**
     * <code>repeated .com.ctrip.framework.dal.models.KeyHolder keyHolders = 6;</code>
     */
    public int getKeyHoldersCount() {
      return keyHolders_.size();
    }
    /**
     * <code>repeated .com.ctrip.framework.dal.models.KeyHolder keyHolders = 6;</code>
     */
    public KeyHolder getKeyHolders(int index) {
      return keyHolders_.get(index);
    }
    /**
     * <code>repeated .com.ctrip.framework.dal.models.KeyHolder keyHolders = 6;</code>
     */
    public KeyHolderOrBuilder getKeyHoldersOrBuilder(
        int index) {
      return keyHolders_.get(index);
    }

    public static final int TRANSACTION_FIELD_NUMBER = 7;
    private Transaction transaction_;
    /**
     * <code>optional .com.ctrip.framework.dal.models.Transaction transaction = 7;</code>
     */
    public boolean hasTransaction() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .com.ctrip.framework.dal.models.Transaction transaction = 7;</code>
     */
    public Transaction getTransaction() {
      return transaction_;
    }
    /**
     * <code>optional .com.ctrip.framework.dal.models.Transaction transaction = 7;</code>
     */
    public TransactionOrBuilder getTransactionOrBuilder() {
      return transaction_;
    }

    public static final int RESULTSET_FIELD_NUMBER = 8;
    private InnerResultSet resultSet_;
    /**
     * <code>optional .com.ctrip.framework.dal.models.InnerResultSet resultSet = 8;</code>
     */
    public boolean hasResultSet() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .com.ctrip.framework.dal.models.InnerResultSet resultSet = 8;</code>
     */
    public InnerResultSet getResultSet() {
      return resultSet_;
    }
    /**
     * <code>optional .com.ctrip.framework.dal.models.InnerResultSet resultSet = 8;</code>
     */
    public InnerResultSetOrBuilder getResultSetOrBuilder() {
      return resultSet_;
    }

    public static final int REQUESTID_FIELD_NUMBER = 9;
    private int requestId_;
    /**
     * <code>required int32 requestId = 9;</code>
     */
    public boolean hasRequestId() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int32 requestId = 9;</code>
     */
    public int getRequestId() {
      return requestId_;
    }

    public static final int EXCEPTION_FIELD_NUMBER = 10;
    private Object exception_;
    /**
     * <code>optional string exception = 10;</code>
     */
    public boolean hasException() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional string exception = 10;</code>
     */
    public String getException() {
      Object ref = exception_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          exception_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string exception = 10;</code>
     */
    public com.google.protobuf.ByteString
        getExceptionBytes() {
      Object ref = exception_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        exception_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      logEntity_ = LogEntity.getDefaultInstance();
      queryHanders_ = java.util.Collections.emptyList();
      hints_ = DalHints.getDefaultInstance();
      affectRows_ = 0;
      affectRowsList_ = java.util.Collections.emptyList();
      keyHolders_ = java.util.Collections.emptyList();
      transaction_ = Transaction.getDefaultInstance();
      resultSet_ = InnerResultSet.getDefaultInstance();
      requestId_ = 0;
      exception_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasRequestId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasLogEntity()) {
        if (!getLogEntity().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getQueryHandersCount(); i++) {
        if (!getQueryHanders(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasHints()) {
        if (!getHints().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getKeyHoldersCount(); i++) {
        if (!getKeyHolders(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTransaction()) {
        if (!getTransaction().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasResultSet()) {
        if (!getResultSet().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, logEntity_);
      }
      for (int i = 0; i < queryHanders_.size(); i++) {
        output.writeMessage(2, queryHanders_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(3, hints_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, affectRows_);
      }
      for (int i = 0; i < affectRowsList_.size(); i++) {
        output.writeInt32(5, affectRowsList_.get(i));
      }
      for (int i = 0; i < keyHolders_.size(); i++) {
        output.writeMessage(6, keyHolders_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(7, transaction_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(8, resultSet_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(9, requestId_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(10, getExceptionBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, logEntity_);
      }
      for (int i = 0; i < queryHanders_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, queryHanders_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, hints_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, affectRows_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < affectRowsList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(affectRowsList_.get(i));
        }
        size += dataSize;
        size += 1 * getAffectRowsListList().size();
      }
      for (int i = 0; i < keyHolders_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, keyHolders_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, transaction_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, resultSet_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, requestId_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, getExceptionBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Response prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.ctrip.framework.dal.models.Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.ctrip.framework.dal.models.Response)
        ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DalModels.internal_static_com_ctrip_framework_dal_models_Response_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DalModels.internal_static_com_ctrip_framework_dal_models_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Response.class, Builder.class);
      }

      // Construct using com.ctrip.framework.dal.models.DalModels.Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getLogEntityFieldBuilder();
          getQueryHandersFieldBuilder();
          getHintsFieldBuilder();
          getKeyHoldersFieldBuilder();
          getTransactionFieldBuilder();
          getResultSetFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (logEntityBuilder_ == null) {
          logEntity_ = LogEntity.getDefaultInstance();
        } else {
          logEntityBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (queryHandersBuilder_ == null) {
          queryHanders_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          queryHandersBuilder_.clear();
        }
        if (hintsBuilder_ == null) {
          hints_ = DalHints.getDefaultInstance();
        } else {
          hintsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        affectRows_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        affectRowsList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        if (keyHoldersBuilder_ == null) {
          keyHolders_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          keyHoldersBuilder_.clear();
        }
        if (transactionBuilder_ == null) {
          transaction_ = Transaction.getDefaultInstance();
        } else {
          transactionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        if (resultSetBuilder_ == null) {
          resultSet_ = InnerResultSet.getDefaultInstance();
        } else {
          resultSetBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        requestId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        exception_ = "";
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DalModels.internal_static_com_ctrip_framework_dal_models_Response_descriptor;
      }

      public Response getDefaultInstanceForType() {
        return Response.getDefaultInstance();
      }

      public Response build() {
        Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Response buildPartial() {
        Response result = new Response(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (logEntityBuilder_ == null) {
          result.logEntity_ = logEntity_;
        } else {
          result.logEntity_ = logEntityBuilder_.build();
        }
        if (queryHandersBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            queryHanders_ = java.util.Collections.unmodifiableList(queryHanders_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.queryHanders_ = queryHanders_;
        } else {
          result.queryHanders_ = queryHandersBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        if (hintsBuilder_ == null) {
          result.hints_ = hints_;
        } else {
          result.hints_ = hintsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.affectRows_ = affectRows_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          affectRowsList_ = java.util.Collections.unmodifiableList(affectRowsList_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.affectRowsList_ = affectRowsList_;
        if (keyHoldersBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            keyHolders_ = java.util.Collections.unmodifiableList(keyHolders_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.keyHolders_ = keyHolders_;
        } else {
          result.keyHolders_ = keyHoldersBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000008;
        }
        if (transactionBuilder_ == null) {
          result.transaction_ = transaction_;
        } else {
          result.transaction_ = transactionBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000010;
        }
        if (resultSetBuilder_ == null) {
          result.resultSet_ = resultSet_;
        } else {
          result.resultSet_ = resultSetBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000020;
        }
        result.requestId_ = requestId_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000040;
        }
        result.exception_ = exception_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Response) {
          return mergeFrom((Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Response other) {
        if (other == Response.getDefaultInstance()) return this;
        if (other.hasLogEntity()) {
          mergeLogEntity(other.getLogEntity());
        }
        if (queryHandersBuilder_ == null) {
          if (!other.queryHanders_.isEmpty()) {
            if (queryHanders_.isEmpty()) {
              queryHanders_ = other.queryHanders_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureQueryHandersIsMutable();
              queryHanders_.addAll(other.queryHanders_);
            }
            onChanged();
          }
        } else {
          if (!other.queryHanders_.isEmpty()) {
            if (queryHandersBuilder_.isEmpty()) {
              queryHandersBuilder_.dispose();
              queryHandersBuilder_ = null;
              queryHanders_ = other.queryHanders_;
              bitField0_ = (bitField0_ & ~0x00000002);
              queryHandersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getQueryHandersFieldBuilder() : null;
            } else {
              queryHandersBuilder_.addAllMessages(other.queryHanders_);
            }
          }
        }
        if (other.hasHints()) {
          mergeHints(other.getHints());
        }
        if (other.hasAffectRows()) {
          setAffectRows(other.getAffectRows());
        }
        if (!other.affectRowsList_.isEmpty()) {
          if (affectRowsList_.isEmpty()) {
            affectRowsList_ = other.affectRowsList_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureAffectRowsListIsMutable();
            affectRowsList_.addAll(other.affectRowsList_);
          }
          onChanged();
        }
        if (keyHoldersBuilder_ == null) {
          if (!other.keyHolders_.isEmpty()) {
            if (keyHolders_.isEmpty()) {
              keyHolders_ = other.keyHolders_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureKeyHoldersIsMutable();
              keyHolders_.addAll(other.keyHolders_);
            }
            onChanged();
          }
        } else {
          if (!other.keyHolders_.isEmpty()) {
            if (keyHoldersBuilder_.isEmpty()) {
              keyHoldersBuilder_.dispose();
              keyHoldersBuilder_ = null;
              keyHolders_ = other.keyHolders_;
              bitField0_ = (bitField0_ & ~0x00000020);
              keyHoldersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getKeyHoldersFieldBuilder() : null;
            } else {
              keyHoldersBuilder_.addAllMessages(other.keyHolders_);
            }
          }
        }
        if (other.hasTransaction()) {
          mergeTransaction(other.getTransaction());
        }
        if (other.hasResultSet()) {
          mergeResultSet(other.getResultSet());
        }
        if (other.hasRequestId()) {
          setRequestId(other.getRequestId());
        }
        if (other.hasException()) {
          bitField0_ |= 0x00000200;
          exception_ = other.exception_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasRequestId()) {
          
          return false;
        }
        if (hasLogEntity()) {
          if (!getLogEntity().isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getQueryHandersCount(); i++) {
          if (!getQueryHanders(i).isInitialized()) {
            
            return false;
          }
        }
        if (hasHints()) {
          if (!getHints().isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getKeyHoldersCount(); i++) {
          if (!getKeyHolders(i).isInitialized()) {
            
            return false;
          }
        }
        if (hasTransaction()) {
          if (!getTransaction().isInitialized()) {
            
            return false;
          }
        }
        if (hasResultSet()) {
          if (!getResultSet().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Response) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private LogEntity logEntity_ = LogEntity.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          LogEntity, LogEntity.Builder, LogEntityOrBuilder> logEntityBuilder_;
      /**
       * <code>optional .com.ctrip.framework.dal.models.LogEntity logEntity = 1;</code>
       */
      public boolean hasLogEntity() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.LogEntity logEntity = 1;</code>
       */
      public LogEntity getLogEntity() {
        if (logEntityBuilder_ == null) {
          return logEntity_;
        } else {
          return logEntityBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.LogEntity logEntity = 1;</code>
       */
      public Builder setLogEntity(LogEntity value) {
        if (logEntityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          logEntity_ = value;
          onChanged();
        } else {
          logEntityBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.LogEntity logEntity = 1;</code>
       */
      public Builder setLogEntity(
          LogEntity.Builder builderForValue) {
        if (logEntityBuilder_ == null) {
          logEntity_ = builderForValue.build();
          onChanged();
        } else {
          logEntityBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.LogEntity logEntity = 1;</code>
       */
      public Builder mergeLogEntity(LogEntity value) {
        if (logEntityBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              logEntity_ != LogEntity.getDefaultInstance()) {
            logEntity_ =
              LogEntity.newBuilder(logEntity_).mergeFrom(value).buildPartial();
          } else {
            logEntity_ = value;
          }
          onChanged();
        } else {
          logEntityBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.LogEntity logEntity = 1;</code>
       */
      public Builder clearLogEntity() {
        if (logEntityBuilder_ == null) {
          logEntity_ = LogEntity.getDefaultInstance();
          onChanged();
        } else {
          logEntityBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.LogEntity logEntity = 1;</code>
       */
      public LogEntity.Builder getLogEntityBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getLogEntityFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.LogEntity logEntity = 1;</code>
       */
      public LogEntityOrBuilder getLogEntityOrBuilder() {
        if (logEntityBuilder_ != null) {
          return logEntityBuilder_.getMessageOrBuilder();
        } else {
          return logEntity_;
        }
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.LogEntity logEntity = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          LogEntity, LogEntity.Builder, LogEntityOrBuilder>
          getLogEntityFieldBuilder() {
        if (logEntityBuilder_ == null) {
          logEntityBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              LogEntity, LogEntity.Builder, LogEntityOrBuilder>(
                  getLogEntity(),
                  getParentForChildren(),
                  isClean());
          logEntity_ = null;
        }
        return logEntityBuilder_;
      }

      private java.util.List<ColumnMata> queryHanders_ =
        java.util.Collections.emptyList();
      private void ensureQueryHandersIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          queryHanders_ = new java.util.ArrayList<ColumnMata>(queryHanders_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          ColumnMata, ColumnMata.Builder, ColumnMataOrBuilder> queryHandersBuilder_;

      /**
       * <code>repeated .com.ctrip.framework.dal.models.ColumnMata queryHanders = 2;</code>
       */
      public java.util.List<ColumnMata> getQueryHandersList() {
        if (queryHandersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(queryHanders_);
        } else {
          return queryHandersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.ColumnMata queryHanders = 2;</code>
       */
      public int getQueryHandersCount() {
        if (queryHandersBuilder_ == null) {
          return queryHanders_.size();
        } else {
          return queryHandersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.ColumnMata queryHanders = 2;</code>
       */
      public ColumnMata getQueryHanders(int index) {
        if (queryHandersBuilder_ == null) {
          return queryHanders_.get(index);
        } else {
          return queryHandersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.ColumnMata queryHanders = 2;</code>
       */
      public Builder setQueryHanders(
          int index, ColumnMata value) {
        if (queryHandersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureQueryHandersIsMutable();
          queryHanders_.set(index, value);
          onChanged();
        } else {
          queryHandersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.ColumnMata queryHanders = 2;</code>
       */
      public Builder setQueryHanders(
          int index, ColumnMata.Builder builderForValue) {
        if (queryHandersBuilder_ == null) {
          ensureQueryHandersIsMutable();
          queryHanders_.set(index, builderForValue.build());
          onChanged();
        } else {
          queryHandersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.ColumnMata queryHanders = 2;</code>
       */
      public Builder addQueryHanders(ColumnMata value) {
        if (queryHandersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureQueryHandersIsMutable();
          queryHanders_.add(value);
          onChanged();
        } else {
          queryHandersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.ColumnMata queryHanders = 2;</code>
       */
      public Builder addQueryHanders(
          int index, ColumnMata value) {
        if (queryHandersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureQueryHandersIsMutable();
          queryHanders_.add(index, value);
          onChanged();
        } else {
          queryHandersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.ColumnMata queryHanders = 2;</code>
       */
      public Builder addQueryHanders(
          ColumnMata.Builder builderForValue) {
        if (queryHandersBuilder_ == null) {
          ensureQueryHandersIsMutable();
          queryHanders_.add(builderForValue.build());
          onChanged();
        } else {
          queryHandersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.ColumnMata queryHanders = 2;</code>
       */
      public Builder addQueryHanders(
          int index, ColumnMata.Builder builderForValue) {
        if (queryHandersBuilder_ == null) {
          ensureQueryHandersIsMutable();
          queryHanders_.add(index, builderForValue.build());
          onChanged();
        } else {
          queryHandersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.ColumnMata queryHanders = 2;</code>
       */
      public Builder addAllQueryHanders(
          Iterable<? extends ColumnMata> values) {
        if (queryHandersBuilder_ == null) {
          ensureQueryHandersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, queryHanders_);
          onChanged();
        } else {
          queryHandersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.ColumnMata queryHanders = 2;</code>
       */
      public Builder clearQueryHanders() {
        if (queryHandersBuilder_ == null) {
          queryHanders_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          queryHandersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.ColumnMata queryHanders = 2;</code>
       */
      public Builder removeQueryHanders(int index) {
        if (queryHandersBuilder_ == null) {
          ensureQueryHandersIsMutable();
          queryHanders_.remove(index);
          onChanged();
        } else {
          queryHandersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.ColumnMata queryHanders = 2;</code>
       */
      public ColumnMata.Builder getQueryHandersBuilder(
          int index) {
        return getQueryHandersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.ColumnMata queryHanders = 2;</code>
       */
      public ColumnMataOrBuilder getQueryHandersOrBuilder(
          int index) {
        if (queryHandersBuilder_ == null) {
          return queryHanders_.get(index);  } else {
          return queryHandersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.ColumnMata queryHanders = 2;</code>
       */
      public java.util.List<? extends ColumnMataOrBuilder>
           getQueryHandersOrBuilderList() {
        if (queryHandersBuilder_ != null) {
          return queryHandersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(queryHanders_);
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.ColumnMata queryHanders = 2;</code>
       */
      public ColumnMata.Builder addQueryHandersBuilder() {
        return getQueryHandersFieldBuilder().addBuilder(
            ColumnMata.getDefaultInstance());
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.ColumnMata queryHanders = 2;</code>
       */
      public ColumnMata.Builder addQueryHandersBuilder(
          int index) {
        return getQueryHandersFieldBuilder().addBuilder(
            index, ColumnMata.getDefaultInstance());
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.ColumnMata queryHanders = 2;</code>
       */
      public java.util.List<ColumnMata.Builder>
           getQueryHandersBuilderList() {
        return getQueryHandersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          ColumnMata, ColumnMata.Builder, ColumnMataOrBuilder>
          getQueryHandersFieldBuilder() {
        if (queryHandersBuilder_ == null) {
          queryHandersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              ColumnMata, ColumnMata.Builder, ColumnMataOrBuilder>(
                  queryHanders_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          queryHanders_ = null;
        }
        return queryHandersBuilder_;
      }

      private DalHints hints_ = DalHints.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          DalHints, DalHints.Builder, DalHintsOrBuilder> hintsBuilder_;
      /**
       * <code>optional .com.ctrip.framework.dal.models.DalHints hints = 3;</code>
       */
      public boolean hasHints() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.DalHints hints = 3;</code>
       */
      public DalHints getHints() {
        if (hintsBuilder_ == null) {
          return hints_;
        } else {
          return hintsBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.DalHints hints = 3;</code>
       */
      public Builder setHints(DalHints value) {
        if (hintsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          hints_ = value;
          onChanged();
        } else {
          hintsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.DalHints hints = 3;</code>
       */
      public Builder setHints(
          DalHints.Builder builderForValue) {
        if (hintsBuilder_ == null) {
          hints_ = builderForValue.build();
          onChanged();
        } else {
          hintsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.DalHints hints = 3;</code>
       */
      public Builder mergeHints(DalHints value) {
        if (hintsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              hints_ != DalHints.getDefaultInstance()) {
            hints_ =
              DalHints.newBuilder(hints_).mergeFrom(value).buildPartial();
          } else {
            hints_ = value;
          }
          onChanged();
        } else {
          hintsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.DalHints hints = 3;</code>
       */
      public Builder clearHints() {
        if (hintsBuilder_ == null) {
          hints_ = DalHints.getDefaultInstance();
          onChanged();
        } else {
          hintsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.DalHints hints = 3;</code>
       */
      public DalHints.Builder getHintsBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getHintsFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.DalHints hints = 3;</code>
       */
      public DalHintsOrBuilder getHintsOrBuilder() {
        if (hintsBuilder_ != null) {
          return hintsBuilder_.getMessageOrBuilder();
        } else {
          return hints_;
        }
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.DalHints hints = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          DalHints, DalHints.Builder, DalHintsOrBuilder>
          getHintsFieldBuilder() {
        if (hintsBuilder_ == null) {
          hintsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              DalHints, DalHints.Builder, DalHintsOrBuilder>(
                  getHints(),
                  getParentForChildren(),
                  isClean());
          hints_ = null;
        }
        return hintsBuilder_;
      }

      private int affectRows_ ;
      /**
       * <code>optional int32 affectRows = 4;</code>
       */
      public boolean hasAffectRows() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 affectRows = 4;</code>
       */
      public int getAffectRows() {
        return affectRows_;
      }
      /**
       * <code>optional int32 affectRows = 4;</code>
       */
      public Builder setAffectRows(int value) {
        bitField0_ |= 0x00000008;
        affectRows_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 affectRows = 4;</code>
       */
      public Builder clearAffectRows() {
        bitField0_ = (bitField0_ & ~0x00000008);
        affectRows_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<Integer> affectRowsList_ = java.util.Collections.emptyList();
      private void ensureAffectRowsListIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          affectRowsList_ = new java.util.ArrayList<Integer>(affectRowsList_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated int32 affectRowsList = 5;</code>
       */
      public java.util.List<Integer>
          getAffectRowsListList() {
        return java.util.Collections.unmodifiableList(affectRowsList_);
      }
      /**
       * <code>repeated int32 affectRowsList = 5;</code>
       */
      public int getAffectRowsListCount() {
        return affectRowsList_.size();
      }
      /**
       * <code>repeated int32 affectRowsList = 5;</code>
       */
      public int getAffectRowsList(int index) {
        return affectRowsList_.get(index);
      }
      /**
       * <code>repeated int32 affectRowsList = 5;</code>
       */
      public Builder setAffectRowsList(
          int index, int value) {
        ensureAffectRowsListIsMutable();
        affectRowsList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 affectRowsList = 5;</code>
       */
      public Builder addAffectRowsList(int value) {
        ensureAffectRowsListIsMutable();
        affectRowsList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 affectRowsList = 5;</code>
       */
      public Builder addAllAffectRowsList(
          Iterable<? extends Integer> values) {
        ensureAffectRowsListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, affectRowsList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 affectRowsList = 5;</code>
       */
      public Builder clearAffectRowsList() {
        affectRowsList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      private java.util.List<KeyHolder> keyHolders_ =
        java.util.Collections.emptyList();
      private void ensureKeyHoldersIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          keyHolders_ = new java.util.ArrayList<KeyHolder>(keyHolders_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          KeyHolder, KeyHolder.Builder, KeyHolderOrBuilder> keyHoldersBuilder_;

      /**
       * <code>repeated .com.ctrip.framework.dal.models.KeyHolder keyHolders = 6;</code>
       */
      public java.util.List<KeyHolder> getKeyHoldersList() {
        if (keyHoldersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(keyHolders_);
        } else {
          return keyHoldersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.KeyHolder keyHolders = 6;</code>
       */
      public int getKeyHoldersCount() {
        if (keyHoldersBuilder_ == null) {
          return keyHolders_.size();
        } else {
          return keyHoldersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.KeyHolder keyHolders = 6;</code>
       */
      public KeyHolder getKeyHolders(int index) {
        if (keyHoldersBuilder_ == null) {
          return keyHolders_.get(index);
        } else {
          return keyHoldersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.KeyHolder keyHolders = 6;</code>
       */
      public Builder setKeyHolders(
          int index, KeyHolder value) {
        if (keyHoldersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureKeyHoldersIsMutable();
          keyHolders_.set(index, value);
          onChanged();
        } else {
          keyHoldersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.KeyHolder keyHolders = 6;</code>
       */
      public Builder setKeyHolders(
          int index, KeyHolder.Builder builderForValue) {
        if (keyHoldersBuilder_ == null) {
          ensureKeyHoldersIsMutable();
          keyHolders_.set(index, builderForValue.build());
          onChanged();
        } else {
          keyHoldersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.KeyHolder keyHolders = 6;</code>
       */
      public Builder addKeyHolders(KeyHolder value) {
        if (keyHoldersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureKeyHoldersIsMutable();
          keyHolders_.add(value);
          onChanged();
        } else {
          keyHoldersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.KeyHolder keyHolders = 6;</code>
       */
      public Builder addKeyHolders(
          int index, KeyHolder value) {
        if (keyHoldersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureKeyHoldersIsMutable();
          keyHolders_.add(index, value);
          onChanged();
        } else {
          keyHoldersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.KeyHolder keyHolders = 6;</code>
       */
      public Builder addKeyHolders(
          KeyHolder.Builder builderForValue) {
        if (keyHoldersBuilder_ == null) {
          ensureKeyHoldersIsMutable();
          keyHolders_.add(builderForValue.build());
          onChanged();
        } else {
          keyHoldersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.KeyHolder keyHolders = 6;</code>
       */
      public Builder addKeyHolders(
          int index, KeyHolder.Builder builderForValue) {
        if (keyHoldersBuilder_ == null) {
          ensureKeyHoldersIsMutable();
          keyHolders_.add(index, builderForValue.build());
          onChanged();
        } else {
          keyHoldersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.KeyHolder keyHolders = 6;</code>
       */
      public Builder addAllKeyHolders(
          Iterable<? extends KeyHolder> values) {
        if (keyHoldersBuilder_ == null) {
          ensureKeyHoldersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, keyHolders_);
          onChanged();
        } else {
          keyHoldersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.KeyHolder keyHolders = 6;</code>
       */
      public Builder clearKeyHolders() {
        if (keyHoldersBuilder_ == null) {
          keyHolders_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          keyHoldersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.KeyHolder keyHolders = 6;</code>
       */
      public Builder removeKeyHolders(int index) {
        if (keyHoldersBuilder_ == null) {
          ensureKeyHoldersIsMutable();
          keyHolders_.remove(index);
          onChanged();
        } else {
          keyHoldersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.KeyHolder keyHolders = 6;</code>
       */
      public KeyHolder.Builder getKeyHoldersBuilder(
          int index) {
        return getKeyHoldersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.KeyHolder keyHolders = 6;</code>
       */
      public KeyHolderOrBuilder getKeyHoldersOrBuilder(
          int index) {
        if (keyHoldersBuilder_ == null) {
          return keyHolders_.get(index);  } else {
          return keyHoldersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.KeyHolder keyHolders = 6;</code>
       */
      public java.util.List<? extends KeyHolderOrBuilder>
           getKeyHoldersOrBuilderList() {
        if (keyHoldersBuilder_ != null) {
          return keyHoldersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(keyHolders_);
        }
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.KeyHolder keyHolders = 6;</code>
       */
      public KeyHolder.Builder addKeyHoldersBuilder() {
        return getKeyHoldersFieldBuilder().addBuilder(
            KeyHolder.getDefaultInstance());
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.KeyHolder keyHolders = 6;</code>
       */
      public KeyHolder.Builder addKeyHoldersBuilder(
          int index) {
        return getKeyHoldersFieldBuilder().addBuilder(
            index, KeyHolder.getDefaultInstance());
      }
      /**
       * <code>repeated .com.ctrip.framework.dal.models.KeyHolder keyHolders = 6;</code>
       */
      public java.util.List<KeyHolder.Builder>
           getKeyHoldersBuilderList() {
        return getKeyHoldersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          KeyHolder, KeyHolder.Builder, KeyHolderOrBuilder>
          getKeyHoldersFieldBuilder() {
        if (keyHoldersBuilder_ == null) {
          keyHoldersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              KeyHolder, KeyHolder.Builder, KeyHolderOrBuilder>(
                  keyHolders_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          keyHolders_ = null;
        }
        return keyHoldersBuilder_;
      }

      private Transaction transaction_ = Transaction.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          Transaction, Transaction.Builder, TransactionOrBuilder> transactionBuilder_;
      /**
       * <code>optional .com.ctrip.framework.dal.models.Transaction transaction = 7;</code>
       */
      public boolean hasTransaction() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.Transaction transaction = 7;</code>
       */
      public Transaction getTransaction() {
        if (transactionBuilder_ == null) {
          return transaction_;
        } else {
          return transactionBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.Transaction transaction = 7;</code>
       */
      public Builder setTransaction(Transaction value) {
        if (transactionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          transaction_ = value;
          onChanged();
        } else {
          transactionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.Transaction transaction = 7;</code>
       */
      public Builder setTransaction(
          Transaction.Builder builderForValue) {
        if (transactionBuilder_ == null) {
          transaction_ = builderForValue.build();
          onChanged();
        } else {
          transactionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.Transaction transaction = 7;</code>
       */
      public Builder mergeTransaction(Transaction value) {
        if (transactionBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              transaction_ != Transaction.getDefaultInstance()) {
            transaction_ =
              Transaction.newBuilder(transaction_).mergeFrom(value).buildPartial();
          } else {
            transaction_ = value;
          }
          onChanged();
        } else {
          transactionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.Transaction transaction = 7;</code>
       */
      public Builder clearTransaction() {
        if (transactionBuilder_ == null) {
          transaction_ = Transaction.getDefaultInstance();
          onChanged();
        } else {
          transactionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.Transaction transaction = 7;</code>
       */
      public Transaction.Builder getTransactionBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getTransactionFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.Transaction transaction = 7;</code>
       */
      public TransactionOrBuilder getTransactionOrBuilder() {
        if (transactionBuilder_ != null) {
          return transactionBuilder_.getMessageOrBuilder();
        } else {
          return transaction_;
        }
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.Transaction transaction = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          Transaction, Transaction.Builder, TransactionOrBuilder>
          getTransactionFieldBuilder() {
        if (transactionBuilder_ == null) {
          transactionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Transaction, Transaction.Builder, TransactionOrBuilder>(
                  getTransaction(),
                  getParentForChildren(),
                  isClean());
          transaction_ = null;
        }
        return transactionBuilder_;
      }

      private InnerResultSet resultSet_ = InnerResultSet.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          InnerResultSet, InnerResultSet.Builder, InnerResultSetOrBuilder> resultSetBuilder_;
      /**
       * <code>optional .com.ctrip.framework.dal.models.InnerResultSet resultSet = 8;</code>
       */
      public boolean hasResultSet() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.InnerResultSet resultSet = 8;</code>
       */
      public InnerResultSet getResultSet() {
        if (resultSetBuilder_ == null) {
          return resultSet_;
        } else {
          return resultSetBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.InnerResultSet resultSet = 8;</code>
       */
      public Builder setResultSet(InnerResultSet value) {
        if (resultSetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          resultSet_ = value;
          onChanged();
        } else {
          resultSetBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.InnerResultSet resultSet = 8;</code>
       */
      public Builder setResultSet(
          InnerResultSet.Builder builderForValue) {
        if (resultSetBuilder_ == null) {
          resultSet_ = builderForValue.build();
          onChanged();
        } else {
          resultSetBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.InnerResultSet resultSet = 8;</code>
       */
      public Builder mergeResultSet(InnerResultSet value) {
        if (resultSetBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080) &&
              resultSet_ != InnerResultSet.getDefaultInstance()) {
            resultSet_ =
              InnerResultSet.newBuilder(resultSet_).mergeFrom(value).buildPartial();
          } else {
            resultSet_ = value;
          }
          onChanged();
        } else {
          resultSetBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.InnerResultSet resultSet = 8;</code>
       */
      public Builder clearResultSet() {
        if (resultSetBuilder_ == null) {
          resultSet_ = InnerResultSet.getDefaultInstance();
          onChanged();
        } else {
          resultSetBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.InnerResultSet resultSet = 8;</code>
       */
      public InnerResultSet.Builder getResultSetBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getResultSetFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.InnerResultSet resultSet = 8;</code>
       */
      public InnerResultSetOrBuilder getResultSetOrBuilder() {
        if (resultSetBuilder_ != null) {
          return resultSetBuilder_.getMessageOrBuilder();
        } else {
          return resultSet_;
        }
      }
      /**
       * <code>optional .com.ctrip.framework.dal.models.InnerResultSet resultSet = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          InnerResultSet, InnerResultSet.Builder, InnerResultSetOrBuilder>
          getResultSetFieldBuilder() {
        if (resultSetBuilder_ == null) {
          resultSetBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              InnerResultSet, InnerResultSet.Builder, InnerResultSetOrBuilder>(
                  getResultSet(),
                  getParentForChildren(),
                  isClean());
          resultSet_ = null;
        }
        return resultSetBuilder_;
      }

      private int requestId_ ;
      /**
       * <code>required int32 requestId = 9;</code>
       */
      public boolean hasRequestId() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required int32 requestId = 9;</code>
       */
      public int getRequestId() {
        return requestId_;
      }
      /**
       * <code>required int32 requestId = 9;</code>
       */
      public Builder setRequestId(int value) {
        bitField0_ |= 0x00000100;
        requestId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 requestId = 9;</code>
       */
      public Builder clearRequestId() {
        bitField0_ = (bitField0_ & ~0x00000100);
        requestId_ = 0;
        onChanged();
        return this;
      }

      private Object exception_ = "";
      /**
       * <code>optional string exception = 10;</code>
       */
      public boolean hasException() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional string exception = 10;</code>
       */
      public String getException() {
        Object ref = exception_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            exception_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string exception = 10;</code>
       */
      public com.google.protobuf.ByteString
          getExceptionBytes() {
        Object ref = exception_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          exception_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string exception = 10;</code>
       */
      public Builder setException(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        exception_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string exception = 10;</code>
       */
      public Builder clearException() {
        bitField0_ = (bitField0_ & ~0x00000200);
        exception_ = getDefaultInstance().getException();
        onChanged();
        return this;
      }
      /**
       * <code>optional string exception = 10;</code>
       */
      public Builder setExceptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        exception_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.ctrip.framework.dal.models.Response)
    }

    static {
      defaultInstance = new Response(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.ctrip.framework.dal.models.Response)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ctrip_framework_dal_models_ColumnMata_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_ctrip_framework_dal_models_ColumnMata_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ctrip_framework_dal_models_AvailableType_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_ctrip_framework_dal_models_AvailableType_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ctrip_framework_dal_models_SqlParameter_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_ctrip_framework_dal_models_SqlParameter_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ctrip_framework_dal_models_SqlParameters_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_ctrip_framework_dal_models_SqlParameters_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ctrip_framework_dal_models_DalHint_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_ctrip_framework_dal_models_DalHint_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ctrip_framework_dal_models_DalHints_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_ctrip_framework_dal_models_DalHints_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ctrip_framework_dal_models_Version_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_ctrip_framework_dal_models_Version_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ctrip_framework_dal_models_Transaction_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_ctrip_framework_dal_models_Transaction_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ctrip_framework_dal_models_RequestMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_ctrip_framework_dal_models_RequestMessage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ctrip_framework_dal_models_Record_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_ctrip_framework_dal_models_Record_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ctrip_framework_dal_models_InnerResultSet_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_ctrip_framework_dal_models_InnerResultSet_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ctrip_framework_dal_models_KeyValue_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_ctrip_framework_dal_models_KeyValue_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ctrip_framework_dal_models_LogEntity_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_ctrip_framework_dal_models_LogEntity_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ctrip_framework_dal_models_DataBase_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_ctrip_framework_dal_models_DataBase_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ctrip_framework_dal_models_DatabaseSet_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_ctrip_framework_dal_models_DatabaseSet_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ctrip_framework_dal_models_DalConfigure_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_ctrip_framework_dal_models_DalConfigure_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ctrip_framework_dal_models_KeyHolder_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_ctrip_framework_dal_models_KeyHolder_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ctrip_framework_dal_models_Request_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_ctrip_framework_dal_models_Request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ctrip_framework_dal_models_Response_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_ctrip_framework_dal_models_Response_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\032src/protos/DalModels.proto\022\036com.ctrip." +
      "framework.dal.models\"(\n\nColumnMata\022\014\n\004na" +
      "me\030\001 \002(\t\022\014\n\004type\030\002 \002(\005\"\222\001\n\rAvailableType" +
      "\022\016\n\006isNull\030\001 \002(\010\022\020\n\010bool_arg\030\002 \001(\010\022\021\n\tin" +
      "t32_arg\030\003 \001(\005\022\021\n\tint64_arg\030\004 \001(\003\022\022\n\ndoub" +
      "le_arg\030\005 \001(\001\022\022\n\nstring_arg\030\006 \001(\t\022\021\n\tbyte" +
      "s_arg\030\007 \001(\014\"\332\001\n\014SqlParameter\022\016\n\006dbType\030\001" +
      " \001(\005\022<\n\tdirection\030\002 \001(\0162).com.ctrip.fram" +
      "ework.dal.models.Direction\022\016\n\006isNull\030\003 \001" +
      "(\010\022\014\n\004name\030\004 \001(\t\022\r\n\005index\030\005 \001(\005\022\021\n\tsensi",
      "tive\030\006 \001(\010\022<\n\005value\030\007 \001(\0132-.com.ctrip.fr" +
      "amework.dal.models.AvailableType\"Q\n\rSqlP" +
      "arameters\022@\n\nparameters\030\001 \003(\0132,.com.ctri" +
      "p.framework.dal.models.SqlParameter\"R\n\007D" +
      "alHint\0228\n\003key\030\001 \002(\0162+.com.ctrip.framewor" +
      "k.dal.models.DalHintEnum\022\r\n\005value\030\002 \002(\t\"" +
      "B\n\010DalHints\0226\n\005hints\030\001 \003(\0132\'.com.ctrip.f" +
      "ramework.dal.models.DalHint\"*\n\007Version\022\016" +
      "\n\006client\030\001 \002(\t\022\017\n\007version\030\002 \002(\t\"8\n\013Trans" +
      "action\022\025\n\rtransactionId\030\001 \002(\t\022\022\n\nstartLe",
      "vel\030\002 \002(\005\"\377\001\n\016RequestMessage\022\016\n\006master\030\001" +
      " \001(\010\022\013\n\003sql\030\002 \001(\t\022\022\n\ncallString\030\003 \001(\t\022\014\n" +
      "\004sqls\030\004 \003(\t\022A\n\nparameters\030\005 \001(\0132-.com.ct" +
      "rip.framework.dal.models.SqlParameters\022E" +
      "\n\016parametersList\030\006 \003(\0132-.com.ctrip.frame" +
      "work.dal.models.SqlParameters\022\021\n\tquerySi" +
      "ze\030\007 \001(\005\022\021\n\tfetchSize\030\010 \001(\005\"G\n\006Record\022=\n" +
      "\006fields\030\001 \003(\0132-.com.ctrip.framework.dal." +
      "models.AvailableType\"W\n\016InnerResultSet\022\014" +
      "\n\004last\030\001 \002(\010\0227\n\007records\030\002 \003(\0132&.com.ctri",
      "p.framework.dal.models.Record\"&\n\010KeyValu" +
      "e\022\013\n\003key\030\001 \002(\t\022\r\n\005value\030\002 \002(\t\"u\n\tLogEnti" +
      "ty\022\r\n\005title\030\001 \002(\t\022\022\n\nlogMessage\030\002 \002(\t\0226\n" +
      "\004tags\030\003 \003(\0132(.com.ctrip.framework.dal.mo" +
      "dels.KeyValue\022\r\n\005level\030\004 \001(\t\"T\n\010DataBase" +
      "\022\014\n\004name\030\001 \002(\t\022\016\n\006master\030\002 \002(\010\022\020\n\010shardi" +
      "ng\030\003 \001(\t\022\030\n\020connectionString\030\004 \002(\t\"\200\002\n\013D" +
      "atabaseSet\022\014\n\004name\030\001 \002(\t\022\020\n\010provider\030\002 \002" +
      "(\t\022B\n\010category\030\003 \002(\01620.com.ctrip.framewo" +
      "rk.dal.models.DatabaseCategory\022\030\n\020shardi",
      "ngStrategy\030\004 \001(\t\0229\n\007masters\030\005 \003(\0132(.com." +
      "ctrip.framework.dal.models.DataBase\0228\n\006s" +
      "laves\030\006 \003(\0132(.com.ctrip.framework.dal.mo" +
      "dels.DataBase\"_\n\014DalConfigure\022\014\n\004name\030\001 " +
      "\002(\t\022A\n\014databaseSets\030\002 \003(\0132+.com.ctrip.fr" +
      "amework.dal.models.DatabaseSet\"E\n\tKeyHol" +
      "der\0228\n\006holder\030\001 \003(\0132(.com.ctrip.framewor" +
      "k.dal.models.KeyValue\"\335\003\n\007Request\0228\n\007ver" +
      "sion\030\001 \002(\0132\'.com.ctrip.framework.dal.mod" +
      "els.Version\022\017\n\007logicDb\030\002 \001(\t\022@\n\013commandT",
      "ype\030\003 \002(\0162+.com.ctrip.framework.dal.mode" +
      "ls.CommandType\022\016\n\006master\030\004 \001(\010\022\022\n\ncreden" +
      "tial\030\005 \001(\t\0227\n\005hints\030\006 \001(\0132(.com.ctrip.fr" +
      "amework.dal.models.DalHints\022@\n\013transacti" +
      "on\030\007 \001(\0132+.com.ctrip.framework.dal.model" +
      "s.Transaction\022?\n\007message\030\010 \001(\0132..com.ctr" +
      "ip.framework.dal.models.RequestMessage\022\021" +
      "\n\trequestId\030\t \002(\005\022@\n\014queryHanders\030\n \003(\0132" +
      "*.com.ctrip.framework.dal.models.ColumnM" +
      "ata\022\020\n\010compress\030\013 \001(\010\"\331\003\n\010Response\022<\n\tlo",
      "gEntity\030\001 \001(\0132).com.ctrip.framework.dal." +
      "models.LogEntity\022@\n\014queryHanders\030\002 \003(\0132*" +
      ".com.ctrip.framework.dal.models.ColumnMa" +
      "ta\0227\n\005hints\030\003 \001(\0132(.com.ctrip.framework." +
      "dal.models.DalHints\022\022\n\naffectRows\030\004 \001(\005\022" +
      "\026\n\016affectRowsList\030\005 \003(\005\022=\n\nkeyHolders\030\006 " +
      "\003(\0132).com.ctrip.framework.dal.models.Key" +
      "Holder\022@\n\013transaction\030\007 \001(\0132+.com.ctrip." +
      "framework.dal.models.Transaction\022A\n\tresu" +
      "ltSet\030\010 \001(\0132..com.ctrip.framework.dal.mo",
      "dels.InnerResultSet\022\021\n\trequestId\030\t \002(\005\022\021" +
      "\n\texception\030\n \001(\t*\257\003\n\013DalHintEnum\022\r\n\tope" +
      "ration\020\000\022\016\n\nshardValue\020\001\022\023\n\017tableShardVa" +
      "lue\020\002\022\022\n\016shardColValues\020\003\022\n\n\006fields\020\004\022\016\n" +
      "\nparameters\020\005\022\t\n\005shard\020\006\022\016\n\ntableShard\020\007" +
      "\022\023\n\017forceAutoCommit\020\010\022\013\n\007timeout\020\t\022\021\n\rre" +
      "sultSetType\020\n\022\030\n\024resultSetConcurrency\020\013\022" +
      "\r\n\tfetchSize\020\014\022\031\n\025skipResultsProcessing\020" +
      "\r\022\013\n\007maxRows\020\016\022\r\n\tsensitive\020\017\022\016\n\nmasterO" +
      "nly\020\020\022\022\n\016heighAvaliable\020\021\022\023\n\017continueOnE",
      "rror\020\022\022\022\n\016isolationLevel\020\023\022\023\n\017updateNull" +
      "Field\020\024\022\021\n\rdetailResults\020\025\022\027\n\023returnGene" +
      "ratedKeys\020\026*\304\001\n\013CommandType\022\t\n\005QUERY\020\000\022\n" +
      "\n\006UPDATE\020\001\022\017\n\013BATCHUPDATE\020\002\022\022\n\016STOREPROC" +
      "EDURE\020\003\022\027\n\023BATCHSTOREPROCEDURE\020\004\022\024\n\020STAR" +
      "TTRANSACTION\020\005\022\022\n\016ENDTRANSACTION\020\006\022\027\n\023RO" +
      "LLBACKTRANSACTION\020\007\022\020\n\014UPLOADCONFIG\020\010\022\013\n" +
      "\007SETTING\020\t*D\n\tDirection\022\t\n\005Input\020\001\022\n\n\006Ou" +
      "tput\020\002\022\017\n\013InputOutput\020\003\022\017\n\013ReturnValue\020\006" +
      "*,\n\020DatabaseCategory\022\t\n\005MYSQL\020\000\022\r\n\tSQLSE",
      "RVER\020\001B \n\036com.ctrip.framework.dal.models"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_com_ctrip_framework_dal_models_ColumnMata_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_ctrip_framework_dal_models_ColumnMata_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_ctrip_framework_dal_models_ColumnMata_descriptor,
        new String[] { "Name", "Type", });
    internal_static_com_ctrip_framework_dal_models_AvailableType_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_com_ctrip_framework_dal_models_AvailableType_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_ctrip_framework_dal_models_AvailableType_descriptor,
        new String[] { "IsNull", "BoolArg", "Int32Arg", "Int64Arg", "DoubleArg", "StringArg", "BytesArg", });
    internal_static_com_ctrip_framework_dal_models_SqlParameter_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_com_ctrip_framework_dal_models_SqlParameter_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_ctrip_framework_dal_models_SqlParameter_descriptor,
        new String[] { "DbType", "Direction", "IsNull", "Name", "Index", "Sensitive", "Value", });
    internal_static_com_ctrip_framework_dal_models_SqlParameters_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_com_ctrip_framework_dal_models_SqlParameters_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_ctrip_framework_dal_models_SqlParameters_descriptor,
        new String[] { "Parameters", });
    internal_static_com_ctrip_framework_dal_models_DalHint_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_com_ctrip_framework_dal_models_DalHint_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_ctrip_framework_dal_models_DalHint_descriptor,
        new String[] { "Key", "Value", });
    internal_static_com_ctrip_framework_dal_models_DalHints_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_com_ctrip_framework_dal_models_DalHints_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_ctrip_framework_dal_models_DalHints_descriptor,
        new String[] { "Hints", });
    internal_static_com_ctrip_framework_dal_models_Version_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_com_ctrip_framework_dal_models_Version_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_ctrip_framework_dal_models_Version_descriptor,
        new String[] { "Client", "Version", });
    internal_static_com_ctrip_framework_dal_models_Transaction_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_com_ctrip_framework_dal_models_Transaction_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_ctrip_framework_dal_models_Transaction_descriptor,
        new String[] { "TransactionId", "StartLevel", });
    internal_static_com_ctrip_framework_dal_models_RequestMessage_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_com_ctrip_framework_dal_models_RequestMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_ctrip_framework_dal_models_RequestMessage_descriptor,
        new String[] { "Master", "Sql", "CallString", "Sqls", "Parameters", "ParametersList", "QuerySize", "FetchSize", });
    internal_static_com_ctrip_framework_dal_models_Record_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_com_ctrip_framework_dal_models_Record_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_ctrip_framework_dal_models_Record_descriptor,
        new String[] { "Fields", });
    internal_static_com_ctrip_framework_dal_models_InnerResultSet_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_com_ctrip_framework_dal_models_InnerResultSet_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_ctrip_framework_dal_models_InnerResultSet_descriptor,
        new String[] { "Last", "Records", });
    internal_static_com_ctrip_framework_dal_models_KeyValue_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_com_ctrip_framework_dal_models_KeyValue_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_ctrip_framework_dal_models_KeyValue_descriptor,
        new String[] { "Key", "Value", });
    internal_static_com_ctrip_framework_dal_models_LogEntity_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_com_ctrip_framework_dal_models_LogEntity_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_ctrip_framework_dal_models_LogEntity_descriptor,
        new String[] { "Title", "LogMessage", "Tags", "Level", });
    internal_static_com_ctrip_framework_dal_models_DataBase_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_com_ctrip_framework_dal_models_DataBase_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_ctrip_framework_dal_models_DataBase_descriptor,
        new String[] { "Name", "Master", "Sharding", "ConnectionString", });
    internal_static_com_ctrip_framework_dal_models_DatabaseSet_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_com_ctrip_framework_dal_models_DatabaseSet_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_ctrip_framework_dal_models_DatabaseSet_descriptor,
        new String[] { "Name", "Provider", "Category", "ShardingStrategy", "Masters", "Slaves", });
    internal_static_com_ctrip_framework_dal_models_DalConfigure_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_com_ctrip_framework_dal_models_DalConfigure_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_ctrip_framework_dal_models_DalConfigure_descriptor,
        new String[] { "Name", "DatabaseSets", });
    internal_static_com_ctrip_framework_dal_models_KeyHolder_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_com_ctrip_framework_dal_models_KeyHolder_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_ctrip_framework_dal_models_KeyHolder_descriptor,
        new String[] { "Holder", });
    internal_static_com_ctrip_framework_dal_models_Request_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_com_ctrip_framework_dal_models_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_ctrip_framework_dal_models_Request_descriptor,
        new String[] { "Version", "LogicDb", "CommandType", "Master", "Credential", "Hints", "Transaction", "Message", "RequestId", "QueryHanders", "Compress", });
    internal_static_com_ctrip_framework_dal_models_Response_descriptor =
      getDescriptor().getMessageTypes().get(18);
    internal_static_com_ctrip_framework_dal_models_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_ctrip_framework_dal_models_Response_descriptor,
        new String[] { "LogEntity", "QueryHanders", "Hints", "AffectRows", "AffectRowsList", "KeyHolders", "Transaction", "ResultSet", "RequestId", "Exception", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
